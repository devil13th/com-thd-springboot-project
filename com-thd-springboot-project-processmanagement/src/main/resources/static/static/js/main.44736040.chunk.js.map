{"version":3,"sources":["logo.svg","axios.js","api/ProcessApi.js","components/processdefined/ProcessDefinedList.jsx","components/processvariable/ProcessVariable.jsx","components/processinstance/TaskInfo.jsx","components/processinstance/TaskList.jsx","components/processinstance/TaskHisList.jsx","components/processinstance/ProcessInstanceList.jsx","layout/IndexLayout.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","interceptors","response","use","console","log","error","message","Promise","reject","context","process","data","method","url","deployId","taskId","processVariable","taskAssignee","params","processInstanceId","executionId","taskHisId","userId","Search","Input","TextArea","TabPane","Tabs","Dragger","Upload","ProcessDefinedList","state","tableData","tableLoading","keyWords","procDefId","startProcessModalVisible","businessKey","queryCondition","assignee","pagination","current","pageSize","pageSizeOptions","showTotal","total","range","showSizeChanger","showQuickJumper","sorter","field","order","onSearch","v","setState","queryList","clearPage","basicQuery","sortField","sortOrder","replace","ProcessApi","then","result","r","list","pageNum","handleTableChange","filters","st","openStartProcessModal","record","closeProcessModal","processDefinitionId","startProcess","processVar","JSON","parse","e","success","vmodel","name","deleteDeploy","deploymentId","this","columns","title","dataIndex","key","render","text","placement","InfoCircleOutlined","type","CaretRightOutlined","onClick","onConfirm","okText","cancelText","DeleteOutlined","operations","right","placeholder","style","width","size","enterButton","props","multiple","action","onChange","info","status","file","fileList","tabBarExtraContent","tab","dataSource","rowKey","className","InboxOutlined","visible","onOk","onCancel","marginTop","target","value","rows","dangerouslySetInnerHTML","__html","React","Component","Option","Select","ProcessVariable","executionVar","executionLocalVar","taskVar","taskLocalVar","tid","idType","processVarStr","search","stringify","setVarGlobal","setVarLocal","id","processVarType","textAlign","Group","compact","defaultValue","span","paddingRight","paddingTop","EditOutlined","offset","TaskInfo","taskType","taskInfo","queryTaskByTaskId","queryTaskHisByTaskHisId","gutter","taskDefKey","taskOwner","taskFormKey","taskStartTime","taskEndTime","defKey","defName","processInstanceStartTime","processInstanceEndTime","processInstanceVar","TaskList","nextStepModalVisible","processVarModalVisible","taskDetailModalVisible","reassignModalVisible","openNextStepModal","closeNextStepModal","openTaskDetailModal","closeTaskDetailModal","nextStep","openTaskVar","openExecutionVar","closeProcessVarModal","openReassignModal","closeReassignModal","reAssigneeOfTask","UserSwitchOutlined","SettingOutlined","top","OrderedListOutlined","destroyOnClose","maskClosable","defaultProps","TaskHisList","ProcessInstanceList","processDefList","queryObj","a","taskListModalVisible","taskHisListModalVisible","openTaskListModal","openTaskHisListModal","closeModal","deleteProcessInstance","pageInit","setQueryObj","k","UnorderedListOutlined","openProcessVar","advanceSearch","addonBefore","marginBottom","block","showSearch","optionFilterProp","allowClear","map","item","marginRight","color","trigger","content","MoreOutlined","Content","Layout","Header","Footer","Sider","IndexLayout","Menu","SubMenu","collapsed","onCollapse","minHeight","collapsible","theme","defaultSelectedKeys","mode","Item","icon","SlidersOutlined","to","SnippetsOutlined","FileOutlined","margin","padding","path","exact","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44736040.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from 'axios'\r\nimport { message } from 'antd';\r\n\r\naxios.interceptors.response.use(function (response) {\r\n\r\n    console.log('--res success--',response)\r\n    // 对响应数据做点什么\r\n    return response;\r\n  }, function (error) {\r\n    console.log('--req error--',error)\r\n\r\n    message.error('Error:'+ error);\r\n    // 对响应错误做点什么\r\n    return Promise.reject(error);\r\n  });\r\n\r\n\r\nexport default axios","import axios from '@/axios';\r\n\r\nconst context = process.env.REACT_APP_CONTEXT\r\nexport default {\r\n  startProcessByDefId:function(data){\r\n    return axios({\r\n      method: 'post',\r\n      url: `${context}/startProcessByDefId`,\r\n      data: data\r\n    });\r\n  },\r\n  startProcessByDefKey:function(data){\r\n    return axios({\r\n      method: 'post',\r\n      url: `${context}/startProcessByDefKey`,\r\n      data: data\r\n    });\r\n  },\r\n  deleteDeploy:function(deployId){\r\n    return axios({\r\n      method: 'delete',\r\n      url: `${context}/deleteDeploy/${deployId}`\r\n    });\r\n  },\r\n  nextStep:function(taskId,processVariable){\r\n    return axios({\r\n      method: 'post',\r\n      url: `${context}/nextStep`,\r\n      data: {taskId,taskAssignee:'ADMIN',processVariable}\r\n    });\r\n  },\r\n  queryProcessDef:function(params){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/queryProcessDef`,\r\n      params: params\r\n    });\r\n  },\r\n  queryProcessInstancePage:function(params){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/queryProcessInstancePage`,\r\n      params: params\r\n    });\r\n  },\r\n  deleteProcessInstance:function(processInstanceId){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/cancelProcessInstance`,\r\n      params: {processInstanceId}\r\n    });\r\n  },\r\n  queryTaskPage:function(params){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/queryTaskPage`,\r\n      params: params\r\n    });\r\n  },\r\n  queryTaskHisPage:function(params){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/queryTaskHisPage`,\r\n      params: params\r\n    });\r\n  },\r\n  queryProcessVarByExecutionId:function(executionId){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/queryProcessVarByExecutionId`,\r\n      params:{executionId}\r\n    });\r\n  },\r\n  queryProcessVarLocalByExecutionId:function(executionId){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/queryProcessVarLocalByExecutionId`,\r\n      params:{executionId}\r\n    });\r\n  },\r\n  queryProcessVarByTaskId:function(taskId){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/queryProcessVarByTaskId`,\r\n      params:{taskId}\r\n    });\r\n  },\r\n  queryProcessVarLocalByTaskId:function(taskId){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/queryProcessVarLocalByTaskId`,\r\n      params:{taskId}\r\n    });\r\n  },\r\n\r\n  setProcessVarGlobalByExecutionId:function(data){\r\n    return axios({\r\n      method: 'post',\r\n      url: `${context}/setProcessVarGlobalByExecutionId`,\r\n      data\r\n    });\r\n  },\r\n  setProcessVarLocalByExecutionId:function(data){\r\n    return axios({\r\n      method: 'post',\r\n      url: `${context}/setProcessVarLocalByExecutionId`,\r\n      data\r\n    });\r\n  },\r\n  setProcessVarGlobalByTaskId:function(data){\r\n    return axios({\r\n      method: 'post',\r\n      url: `${context}/setProcessVarGlobalByTaskId`,\r\n      data\r\n    });\r\n  },\r\n  setProcessVarLocalByTaskId:function(data){\r\n    return axios({\r\n      method: 'post',\r\n      url: `${context}/setProcessVarLocalByTaskId`,\r\n      data\r\n    });\r\n  },\r\n  queryTaskByTaskId:function(taskId){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/queryTaskByTaskId/${taskId}`\r\n    })\r\n  }, \r\n  queryTaskHisByTaskHisId:function(taskHisId){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/queryTaskHisByTaskHisId/${taskHisId}`\r\n    })\r\n  },\r\n  setAssigneeOfTask:function(taskId,userId){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/setAssigneeOfTask?taskId=${taskId}&userId=${userId}`\r\n    })\r\n  },\r\n  queryProcDefByDefId:function(type,id){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/queryProcDefByDefId/${type}/${id}`\r\n    })\r\n  },\r\n  queryAllProcDefKeyList:function(){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/queryAllProcDefKeyList`\r\n    })\r\n  }\r\n \r\n  \r\n}","import React from 'react'\r\nimport { Popconfirm,Upload, Modal, Tabs, Input, Table, Tooltip, Divider, Button, message } from 'antd'\r\n\r\n\r\nimport PropTypes from 'prop-types'\r\nimport ProcessApi from '@/api/ProcessApi'\r\nimport { UserSwitchOutlined, CaretRightOutlined, InfoCircleOutlined, SettingOutlined, InboxOutlined,DeleteOutlined } from '@ant-design/icons';\r\nconst { Search, TextArea } = Input;\r\nconst { TabPane } = Tabs;\r\nconst { Dragger } = Upload;\r\n\r\nclass ProcessDefinedList extends React.Component {\r\n  state = {\r\n    tableData: [],\r\n    tableLoading: false,\r\n    keyWords: '',\r\n    procDefId: '',\r\n    startProcessModalVisible: false,\r\n    businessKey: '',\r\n    processVariable: '',\r\n    queryCondition: {\r\n      businessKey: '',\r\n      assignee: '',\r\n      processInstanceId: ''\r\n    },\r\n    pagination: {\r\n      current: 1,\r\n      pageSize: 10,\r\n      pageSizeOptions: [5, 10, 15, 50, 100],\r\n      showTotal: (total, range) => { return `${total} items` },\r\n      showSizeChanger: true,\r\n      showQuickJumper: true\r\n    },\r\n    // 排序\r\n    sorter: {\r\n      field: 'def.id_',\r\n      order: 'descend',\r\n    },\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    const queryCondition = {}\r\n\r\n    this.setState({ queryCondition }, this.queryList)\r\n\r\n  }\r\n\r\n  onSearch = (v) => {\r\n    this.setState({\r\n      keyWords: v\r\n    }, () => {\r\n      this.queryList(true);\r\n    })\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    console.log(\"---xxxx---\", props, state)\r\n    if (props.processInstanceId !== state.queryCondition.processInstanceId) {\r\n      return { processInstanceId: props.processInstanceId }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  queryList = (clearPage) => {\r\n    console.log(\"===\", this.state.pagination)\r\n    if (clearPage) {\r\n      // 清除分页\r\n      this.setState(\r\n        {\r\n          pagination: {\r\n            showTotal: (total, range) => { return `${total} items` },\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            ...this.state.pagination,\r\n            current: 1,\r\n          },\r\n        },\r\n        this.basicQuery\r\n      )\r\n    } else {\r\n      this.basicQuery()\r\n    }\r\n  }\r\n\r\n  // 基础查询\r\n  basicQuery = () => {\r\n    const _this = this\r\n    const queryCondition = {\r\n      current: this.state.pagination.current,\r\n      pageSize: this.state.pagination.pageSize,\r\n      total: this.state.pagination.total,\r\n      sortField: this.state.sorter.field,\r\n      sortOrder: this.state.sorter.order.replace('end', ''),\r\n      keyWords: this.state.keyWords,\r\n      ...this.state.queryCondition\r\n    }\r\n    this.setState({ tableLoading: true })\r\n    ProcessApi.queryProcessDef(queryCondition).then(result => {\r\n      const r = result.data;\r\n      console.log(r)\r\n      this.setState({\r\n        tableData: r.list,\r\n        tableLoading: false,\r\n        pagination: {\r\n          showTotal: (total, range) => { return `${total} items` },\r\n          showSizeChanger: true,\r\n          showQuickJumper: true,\r\n          current: r.pageNum,\r\n          pageSize: r.pageSize,\r\n          total: r.total,\r\n        }\r\n      })\r\n    })\r\n\r\n\r\n  }\r\n\r\n  // 分页/排序 事件处理\r\n  handleTableChange = (pagination, filters, sorter) => {\r\n\r\n    const st = {\r\n      pagination: {\r\n        showTotal: (total, range) => { return `${total} items` },\r\n        showSizeChanger: true,\r\n        showQuickJumper: true,\r\n        current: pagination.current,\r\n        pageSize: pagination.pageSize,\r\n        total: this.state.pagination.total,\r\n      },\r\n    }\r\n    if (sorter.field && sorter.order) {\r\n      st.sorter = {\r\n        field: sorter.field,\r\n        order: sorter.order,\r\n      }\r\n    } else {\r\n      st.sorter = {\r\n        field: '',\r\n        order: '',\r\n      }\r\n    }\r\n    this.setState(st, this.queryList)\r\n\r\n  }\r\n\r\n  openStartProcessModal = (record) => {\r\n    this.setState({\r\n      procDefId: record.procDefId,\r\n      startProcessModalVisible: true\r\n    })\r\n  }\r\n\r\n  closeProcessModal = () => {\r\n    this.setState({ processDefinitionId: '', startProcessModalVisible: false })\r\n  }\r\n\r\n  startProcess = () => {\r\n\r\n\r\n    let processVar = {}\r\n\r\n    try {\r\n      processVar = JSON.parse(this.state.processVariable);\r\n\r\n    } catch (e) {\r\n      message.error(\"Json Parse Error !\")\r\n      return\r\n    }\r\n\r\n    ProcessApi.startProcessByDefId({\r\n      businessKey: this.state.businessKey,\r\n      processVariable: processVar,\r\n      procDefId: this.state.procDefId\r\n    }).then(r => {\r\n      message.success(\"Process Be Started Success\")\r\n      // this.queryList(false)\r\n      this.closeProcessModal()\r\n    })\r\n\r\n  }\r\n\r\n  vmodel = (name, v) => {\r\n    this.setState({ [name]: v });\r\n  }\r\n\r\n  deleteDeploy = (record) => {\r\n    ProcessApi.deleteDeploy(record.deploymentId).then(r => {\r\n      if(r.data === 'SUCCESS'){\r\n        message.success(\"Process Defined Be Deleted successfully\")\r\n        this.queryList(false)\r\n      }else{\r\n        message.error(\"Process Defined Deleted Failure\")\r\n      }\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    console.log(\"render...\")\r\n\r\n\r\n    const columns = [\r\n      {\r\n        title: \"Def ID\",\r\n        dataIndex: \"procDefId\",\r\n      },\r\n      {\r\n        title: \"Def Name\",\r\n        dataIndex: \"defName\",\r\n      },\r\n      {\r\n        title: \"Def Key\",\r\n        dataIndex: \"defKey\",\r\n      },\r\n      {\r\n        title: \"Def Ver.\",\r\n        dataIndex: \"defVersion\",\r\n      },\r\n      {\r\n        title: \"Deployment Id\",\r\n        dataIndex: \"deploymentId\",\r\n      },\r\n      {\r\n        title: \"Deployment Time\",\r\n        dataIndex: \"deployTime\",\r\n      },\r\n      {\r\n        title: \"Operate\",\r\n        key: \"operate\",\r\n        render: (text, record) => (\r\n          <div>\r\n            <Tooltip title=\"Detail\" placement=\"left\">\r\n              <a>\r\n                <InfoCircleOutlined />\r\n              </a>\r\n            </Tooltip>\r\n            <Divider type=\"vertical\" />\r\n            <Tooltip title=\"Start Process\"  placement=\"left\">\r\n              <a>\r\n                <CaretRightOutlined\r\n                  onClick={() => {\r\n                    this.openStartProcessModal(record);\r\n                  }}\r\n                />\r\n              </a>\r\n            </Tooltip>\r\n            <Divider type=\"vertical\" />          \r\n            <Popconfirm\r\n              placement=\"left\"\r\n              title=\"Are you sure to delete this process defined?\"\r\n              onConfirm={() => {\r\n                this.deleteDeploy(record);\r\n              }}\r\n              okText=\"Yes\"\r\n              cancelText=\"No\"\r\n            >\r\n              <Tooltip title=\"Delete Process Defined\" placement=\"left\">\r\n                <a>\r\n                <DeleteOutlined />\r\n                </a>\r\n              </Tooltip>\r\n            </Popconfirm>\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n\r\n    const operations = {\r\n      right: <Search\r\n        placeholder=\"key words\"\r\n        onSearch={this.onSearch}\r\n        style={{ width: 200 }}\r\n        size=\"small\"\r\n        enterButton\r\n      />\r\n    }\r\n\r\n\r\n\r\n    const props = {\r\n      name: 'file',\r\n      multiple: true,\r\n      action: process.env.REACT_APP_CONTEXT+'/deploy',\r\n      onChange : (info) => {\r\n        const { status } = info.file;\r\n        if (status !== 'uploading') {\r\n          console.log(info.file, info.fileList);\r\n        }\r\n        if (status === 'done') {\r\n          message.success(`${info.file.name} file uploaded successfully.`);\r\n          this.queryList(false);\r\n          \r\n        } else if (status === 'error') {\r\n          message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n      },\r\n    };\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Tabs type=\"card\" tabBarExtraContent={operations}>\r\n          <TabPane tab=\"Process Defined\" key=\"1\"></TabPane>\r\n        </Tabs>\r\n\r\n        {/* {JSON.stringify(this.state)} */}\r\n\r\n        <Table\r\n          onChange={this.handleTableChange}\r\n          columns={columns}\r\n          dataSource={this.state.tableData}\r\n          pagination={this.state.pagination}\r\n          size=\"small\"\r\n          rowKey={(record) => {\r\n            return record.procDefId;\r\n          }}\r\n        />\r\n\r\n\r\n\r\n        <Dragger {...props}>\r\n          <p className=\"ant-upload-drag-icon\">\r\n            <InboxOutlined />\r\n          </p>\r\n          <p className=\"ant-upload-text\">Click or drag bpmn to this area to deploy a new process</p>\r\n          <p className=\"ant-upload-hint\">\r\n            Support for a single or bulk upload. Strictly prohibit from uploading company data or other\r\n            band files\r\n          </p>\r\n        </Dragger>\r\n\r\n\r\n        <Modal\r\n          title=\"Start Process\"\r\n          visible={this.state.startProcessModalVisible}\r\n          onOk={this.startProcess}\r\n          onCancel={this.closeProcessModal}\r\n          width='80%'\r\n        >\r\n          <div style={{ marginTop: '8px' }}>\r\n            <Input placeholder=\"Business Key\" onChange={(e) => { this.vmodel('businessKey', e.target.value) }} />\r\n          </div>\r\n          <div style={{ marginTop: '8px' }}>\r\n            <TextArea rows={4} onChange={(e) => { this.vmodel('processVariable', e.target.value) }} placeholder=\"Process Variable (JSON) \" />\r\n\r\n            <div dangerouslySetInnerHTML={{ __html: `Eg.<br/>{<br/>\"users\":[\"zhangsan\",\"lisi\",\"wangwu\"],<br/>\"judge\":\"”zhaoliu\"<br/>}` }}></div>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProcessDefinedList","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ProcessApi from \"@/api/ProcessApi\";\r\nimport {Divider,Alert,Input, InputNumber, Select, Radio, Row, Col, Button, message } from \"antd\";\r\nimport {EditOutlined } from \"@ant-design/icons\";\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nclass ProcessVariable extends React.Component {\r\n  state = {\r\n    executionVar: \"\",\r\n    executionLocalVar: \"\",\r\n    taskVar:\"\",\r\n    taskLocalVar:\"\",\r\n    tid: \"\",\r\n    idType: \"\",\r\n    processVarStr:\"{}\"\r\n  };\r\n\r\n  static propTypes = {\r\n    processVarType: PropTypes.string,\r\n    id: PropTypes.string,\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    if (this.props.id) {\r\n      this.setState(\r\n        {\r\n          tid: this.props.id,\r\n          idType: this.props.processVarType,\r\n        },\r\n        this.search\r\n      );\r\n    }\r\n   \r\n  }\r\n\r\n  search = () => {\r\n    // alert(this.state.idType + \"|\" + v)\r\n\r\n    if(this.state.idType === 'execution'){\r\n        ProcessApi.queryProcessVarByExecutionId(this.state.tid).then((r) => {\r\n            console.log(r);\r\n            this.setState({\r\n                executionVar: JSON.stringify(r.data),\r\n            });\r\n        });\r\n\r\n        ProcessApi.queryProcessVarLocalByExecutionId(this.state.tid).then((r) => {\r\n            console.log(r);\r\n            this.setState({\r\n                executionLocalVar: JSON.stringify(r.data),\r\n            });\r\n        });\r\n    }else{\r\n        ProcessApi.queryProcessVarByTaskId(this.state.tid).then((r) => {\r\n            console.log(r);\r\n            this.setState({\r\n                taskVar: JSON.stringify(r.data),\r\n            });\r\n        });\r\n\r\n        ProcessApi.queryProcessVarLocalByTaskId(this.state.tid).then((r) => {\r\n            console.log(r);\r\n            this.setState({\r\n                taskLocalVar: JSON.stringify(r.data),\r\n            });\r\n        });\r\n\r\n    }\r\n  };\r\n\r\n  vmodel = (name, v) => {\r\n    this.setState({ [name]: v });\r\n  }\r\n\r\n\r\n  setVarGlobal = () => {\r\n    let processVar = {}\r\n    try{\r\n        processVar = JSON.parse(this.state.processVarStr);\r\n    }catch(e){\r\n        message.error(\" JSON parse err!\");\r\n        return\r\n    }\r\n\r\n    if(this.state.idType === \"execution\"){\r\n        ProcessApi.setProcessVarGlobalByExecutionId({\r\n            executionId:this.state.tid,\r\n            processVariable:processVar\r\n        }).then( r =>{\r\n            this.search();\r\n        })\r\n    }else{\r\n        ProcessApi.setProcessVarGlobalByTaskId({\r\n            executionId:this.state.tid,\r\n            processVariable:processVar\r\n        }).then( r =>{\r\n            this.search();\r\n        })\r\n    }\r\n\r\n\r\n  }\r\n  setVarLocal = () => {\r\n    let processVar = {}\r\n    try{\r\n        processVar = JSON.parse(this.state.processVarStr);\r\n    }catch(e){\r\n        message.error(\" JSON parse err!\");\r\n        return\r\n    }\r\n\r\n    if(this.state.idType === \"execution\"){\r\n        ProcessApi.setProcessVarLocalByExecutionId({\r\n            executionId:this.state.tid,\r\n            processVariable:processVar\r\n        }).then( r =>{\r\n            this.search();\r\n        })\r\n    }else{\r\n        ProcessApi.setProcessVarLocalByTaskId({\r\n            executionId:this.state.tid,\r\n            processVariable:processVar\r\n        }).then( r =>{\r\n            this.search();\r\n        })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={{ textAlign: \"right\" }}>\r\n          <Input.Group compact>\r\n            <Select\r\n              style={{ width: 130 }}\r\n              defaultValue=\"execution\"\r\n              value={this.state.idType}\r\n              onChange={(v) => {\r\n                this.setState({ idType: v });\r\n              }}\r\n            >\r\n              <Option value=\"execution\">Execution ID</Option>\r\n              <Option value=\"task\">Task ID</Option>\r\n            </Select>\r\n\r\n            <Input.Search\r\n              enterButton\r\n              style={{ width: 200 }}\r\n              onChange={(e) => {\r\n                this.setState({ tid: e.target.value });\r\n              }}\r\n              value={this.state.tid}\r\n              onSearch={this.search}\r\n            />\r\n          </Input.Group>\r\n        </div>\r\n        <Divider />\r\n        {/* {JSON.stringify(this.props)}|{JSON.stringify(this.state)} */}\r\n        <Row>\r\n          <Col\r\n            span={4}\r\n            style={{ textAlign: \"right\", paddingRight: 8, paddingTop: 6 }}\r\n          >\r\n            <EditOutlined /> Set Process Variable:\r\n          </Col>\r\n          <Col span={10}>\r\n            <TextArea\r\n              value={this.state.processVarStr}\r\n              onChange={(e) => {\r\n                this.vmodel(\"processVarStr\", e.target.value);\r\n              }}\r\n            ></TextArea>\r\n\r\n            <div\r\n              dangerouslySetInnerHTML={{\r\n                __html: `Eg.<br/>{<br/>\"users\":[\"zhangsan\",\"lisi\",\"wangwu\"],<br/>\"judge\":\"”zhaoliu\"<br/>}`,\r\n              }}\r\n            ></div>\r\n          </Col>\r\n          <Col span={9} offset={1}>\r\n            <Button onClick={this.setVarGlobal}> Set Variable Global</Button>\r\n            <Divider type=\"vertical\" />\r\n            <Button onClick={this.setVarLocal}> Set Variable Local</Button>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Divider />\r\n        <Row>\r\n          <Col\r\n            span={10}\r\n            style={{ textAlign: \"right\", paddingRight: 8, paddingTop: 6 }}\r\n          >\r\n             Execution Gloab Variable :\r\n          </Col>\r\n          <Col span={14}>\r\n            <Alert\r\n              message={this.state.executionVar ? this.state.executionVar : \"{}\"}\r\n              type=\"warning\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Divider />\r\n        <Row>\r\n          <Col\r\n            span={10}\r\n            style={{ textAlign: \"right\", paddingRight: 8, paddingTop: 6 }}\r\n          >\r\n             Execution Local Variable :\r\n          </Col>\r\n          <Col span={14}>\r\n            <Alert\r\n              message={\r\n                this.state.executionLocalVar\r\n                  ? this.state.executionLocalVar\r\n                  : \"{}\"\r\n              }\r\n              type=\"warning\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Divider />\r\n        <Row>\r\n          <Col\r\n            span={10}\r\n            style={{ textAlign: \"right\", paddingRight: 8, paddingTop: 6 }}\r\n          >\r\n             Task Gloab Variable :\r\n          </Col>\r\n          <Col span={14}>\r\n            <Alert\r\n              message={this.state.taskVar ? this.state.taskVar : \"{}\"}\r\n              type=\"info\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Divider />\r\n        <Row>\r\n          <Col\r\n            span={10}\r\n            style={{ textAlign: \"right\", paddingRight: 8, paddingTop: 6 }}\r\n          >\r\n             Task Local Variable :\r\n          </Col>\r\n          <Col span={14}>\r\n            <Alert\r\n              message={this.state.taskLocalVar ? this.state.taskLocalVar : \"{}\"}\r\n              type=\"info\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProcessVariable;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ProcessApi from \"@/api/ProcessApi\";\r\nimport {Row,Col,Divider} from 'antd'\r\nclass TaskInfo extends React.Component {\r\n  \r\n  \r\n  state = {\r\n    taskType:\"\", // task  taskHis\r\n    taskInfo:{}\r\n  }\r\n\r\n  static propTypes = {\r\n    taskId: PropTypes.string,\r\n    taskHisId: PropTypes.string,\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.taskId){\r\n        this.setState({\r\n            taskId:this.props.taskId\r\n        },this.queryTaskByTaskId)\r\n    }\r\n    if(this.props.taskHisId){\r\n        this.setState({\r\n            taskHisId:this.props.taskHisId\r\n        },this.queryTaskHisByTaskHisId)\r\n    }\r\n  }\r\n\r\n  queryTaskByTaskId = () => {\r\n    ProcessApi.queryTaskByTaskId(this.props.taskId).then( r => {\r\n        this.setState({taskInfo:r.data})\r\n    })\r\n  }\r\n\r\n  queryTaskHisByTaskHisId = () => {\r\n    ProcessApi.queryTaskHisByTaskHisId(this.props.taskHisId).then( r => {\r\n        this.setState({taskInfo:r.data})\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* {JSON.stringify(this.state.taskInfo)} */}\r\n        <Row gutter={24}>\r\n          <Col span=\"8\">Task Id：{this.state.taskInfo.taskId}</Col>\r\n          <Col span=\"8\">\r\n            Task Defined Name：{this.state.taskInfo.taskDefKey}\r\n          </Col>\r\n          <Col span=\"8\">Task Name：{this.state.taskInfo.taskId}</Col>\r\n        </Row>\r\n        <Row gutter={24}>\r\n          <Col span=\"8\">TaskAssignee：{this.state.taskInfo.taskAssignee}</Col>\r\n          <Col span=\"8\">TaskOwner：{this.state.taskInfo.taskOwner}</Col>\r\n          <Col span=\"8\">TaskFormKey：{this.state.taskInfo.taskFormKey}</Col>\r\n        </Row>\r\n        <Row gutter={24}>\r\n          <Col span=\"8\">TaskStartTime：{this.state.taskInfo.taskStartTime}</Col>\r\n          <Col span=\"8\">TaskEndTime：{this.state.taskInfo.taskEndTime}</Col>\r\n          <Col span=\"8\"></Col>\r\n        </Row>\r\n\r\n        <Divider/>\r\n\r\n        <Row gutter={24}>\r\n        <Col span=\"8\">BusinessKey：{this.state.taskInfo.businessKey}</Col>\r\n          <Col span=\"8\">\r\n            ProcessInstanceId：{this.state.taskInfo.processInstanceId}\r\n          </Col>\r\n          <Col span=\"8\">ExecutionId：{this.state.taskInfo.executionId}</Col>\r\n          \r\n        </Row>\r\n        <Row gutter={24}>\r\n          <Col span=\"8\">DeploymentId：{this.state.taskInfo.deploymentId}</Col>\r\n        </Row>\r\n\r\n        <Row gutter={24}>\r\n        <Col span=\"8\">ProcDefId：{this.state.taskInfo.procDefId}</Col>\r\n          \r\n          <Col span=\"8\">DefKey：{this.state.taskInfo.defKey}</Col>\r\n          <Col span=\"8\">DefName：{this.state.taskInfo.defName}</Col>\r\n        </Row>\r\n\r\n        <Row gutter={24}>\r\n          <Col span=\"8\">\r\n            ProcessInstanceStartTime：\r\n            {this.state.taskInfo.processInstanceStartTime}\r\n          </Col>\r\n          <Col span=\"8\">\r\n            ProcessInstanceEndTime：{this.state.taskInfo.processInstanceEndTime}\r\n          </Col>\r\n        </Row>\r\n\r\n        <Divider/>\r\n\r\n        <Row gutter={24}>\r\n          <Col span=\"24\">Task Variable：{JSON.stringify(this.state.taskInfo.taskVar)}</Col>\r\n        </Row>\r\n\r\n        <Row gutter={24}>\r\n          <Col span=\"24\">Execution Variable：{JSON.stringify(this.state.taskInfo.executionVar)}</Col>\r\n        </Row>\r\n\r\n        <Row gutter={24}>\r\n          <Col span=\"24\">\r\n            Process Variable：{JSON.stringify(this.state.taskInfo.processInstanceVar)}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskInfo;","import React from 'react'\r\nimport {message,Modal,Tabs ,Input ,Table,Tooltip ,Divider ,Button} from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport ProcessApi from '@/api/ProcessApi'\r\nimport ProcessVariable from '../processvariable/ProcessVariable'\r\nimport TaskInfo from './TaskInfo'\r\nimport {OrderedListOutlined,UserSwitchOutlined,CaretRightOutlined,InfoCircleOutlined,SettingOutlined} from '@ant-design/icons';\r\nconst { TextArea,Search } = Input;\r\nconst { TabPane } = Tabs;\r\nclass TaskList extends React.Component {\r\n  state = {\r\n    tableData:[],\r\n    tableLoading:false,\r\n    keyWords:'',\r\n    processInstanceId:'',\r\n    taskId:'',\r\n    taskHisId:'',\r\n    tid:'',\r\n    processVarType:'',\r\n    nextStepModalVisible:false,\r\n    processVarModalVisible:false,\r\n    taskDetailModalVisible:false,\r\n    reassignModalVisible:false,\r\n    processVariable:{},\r\n    queryCondition:{\r\n      businessKey:'',\r\n      assignee:'',\r\n      processInstanceId:''\r\n    },\r\n    pagination:{\r\n      current:1,\r\n      pageSize:10,\r\n      pageSizeOptions:[5,10,15,50,100],\r\n      showTotal:(total, range)=>{ return `${total} items`},\r\n      showSizeChanger:true,\r\n      showQuickJumper:true\r\n    },\r\n    // 排序\r\n    sorter: {\r\n      field: 'task.create_time_ ',\r\n      order: 'descend',\r\n    },\r\n  }\r\n\r\n  //对标签属性进行类型、必要性的限制\r\n  static propTypes = {\r\n    businessKey:PropTypes.string,\r\n    assignee:PropTypes.string,\r\n    processInstanceId:PropTypes.string\r\n  }\r\n\r\n  //指定默认标签属性值\r\n  static defaultProps = {\r\n    businessKey:'',\r\n    assignee:'',\r\n    processInstanceId:''\r\n  }\r\n\r\n  componentDidMount(){\r\n    const queryCondition = {}\r\n    if(this.props.businessKey){\r\n      queryCondition.businessKey = this.props.businessKey\r\n    }\r\n    if(this.props.assignee){\r\n      queryCondition.assignee = this.props.assignee\r\n    }\r\n    if(this.props.processInstanceId){\r\n      queryCondition.processInstanceId = this.props.processInstanceId\r\n    }\r\n    this.setState({queryCondition},this.queryList)\r\n\r\n  }\r\n\r\n  onSearch = (v) => {\r\n    this.setState({\r\n      keyWords:v\r\n    },() => {\r\n      this.queryList(true);\r\n    })\r\n  }\r\n\r\n  // static getDerivedStateFromProps(props,state){\r\n  //   console.log(\"---xxxx---\",props,state)\r\n  //   if(props.processInstanceId !== state.queryCondition.processInstanceId){\r\n  //     return {processInstanceId:props.processInstanceId}      \r\n  //   }\r\n  //   return null;\r\n  // }\r\n\r\n  queryList = (clearPage) => {\r\n    console.log(\"===\",this.state.pagination)\r\n    if (clearPage) {\r\n      // 清除分页\r\n      this.setState(\r\n        {\r\n          pagination: {\r\n            showTotal:(total, range)=>{ return `${total} items`},\r\n            showSizeChanger:true,\r\n            showQuickJumper:true,\r\n            ...this.state.pagination,\r\n            current: 1,\r\n          },\r\n        },\r\n        this.basicQuery\r\n      )\r\n    } else {\r\n      this.basicQuery()\r\n    }\r\n  }\r\n\r\n  // 基础查询\r\n  basicQuery = () => {\r\n    const _this = this\r\n    const queryCondition = {\r\n      current: this.state.pagination.current,\r\n      pageSize: this.state.pagination.pageSize,\r\n      total: this.state.pagination.total,\r\n      sortField: this.state.sorter.field,\r\n      sortOrder: this.state.sorter.order.replace('end', ''),\r\n      keyWords:this.state.keyWords,\r\n      ...this.state.queryCondition\r\n    }\r\n    this.setState({ tableLoading: true })\r\n    ProcessApi.queryTaskPage(queryCondition).then( result => {\r\n      const r = result.data;\r\n      this.setState({\r\n        tableData:r.list,\r\n        tableLoading: false,\r\n        pagination: {\r\n          showTotal:(total, range)=>{ return `${total} items`},\r\n          showSizeChanger:true,\r\n          showQuickJumper:true,\r\n          current: r.pageNum,\r\n          pageSize: r.pageSize,\r\n          total: r.total,\r\n        }\r\n      })\r\n    })\r\n\r\n    \r\n  }\r\n\r\n  // 分页/排序 事件处理\r\n  handleTableChange = (pagination, filters, sorter) => {\r\n    \r\n    const st = {\r\n      pagination:{\r\n        showTotal:(total, range)=>{ return `${total} items`},\r\n        showSizeChanger:true,\r\n        showQuickJumper:true,\r\n        current: pagination.current,\r\n        pageSize: pagination.pageSize,\r\n        total: this.state.pagination.total,\r\n      },\r\n    }\r\n    if (sorter.field && sorter.order) {\r\n      st.sorter = {\r\n        field: sorter.field,\r\n        order: sorter.order,\r\n      }\r\n    } else {\r\n      st.sorter = {\r\n        field: '',\r\n        order: '',\r\n      }\r\n    }\r\n    this.setState(st, this.queryList)\r\n    \r\n  }\r\n\r\n\r\n\r\n  openNextStepModal = (record) => {\r\n    this.setState({\r\n      taskId:record.taskId,\r\n      nextStepModalVisible:true\r\n    })\r\n  }\r\n\r\n  closeNextStepModal = () => {\r\n    this.setState({taskId:'',nextStepModalVisible:false})\r\n  }\r\n\r\n\r\n  openTaskDetailModal = (record) => {\r\n    this.setState({\r\n      taskId:record.taskId,\r\n      taskDetailModalVisible:true\r\n    })\r\n  }\r\n  closeTaskDetailModal = () => {\r\n    this.setState({\r\n      taskId:\"\",\r\n      taskDetailModalVisible:false\r\n    })\r\n  }\r\n\r\n  nextStep = () => {\r\n    \r\n\r\n    let processVar = {}\r\n    \r\n    try{\r\n      processVar = JSON.parse(this.state.processVariable);\r\n      \r\n    }catch(e){\r\n      message.error(\"Json Parse Error !\")\r\n      return\r\n    }\r\n\r\n    ProcessApi.nextStep(this.state.taskId,processVar).then(r=>{\r\n      message.success(\"Task Be Completed Success\")\r\n      this.queryList(false)\r\n      this.closeNextStepModal()\r\n    })\r\n    \r\n  }\r\n\r\n  vmodel = (name,v) => {\r\n    this.setState({[name]:v});\r\n  }\r\n  openTaskVar = (taskId) =>{\r\n    this.setState({processVarModalVisible:true,tid:taskId,processVarType:\"task\"})\r\n  }\r\n  openExecutionVar = (executionId) =>{\r\n    this.setState({processVarModalVisible:true,tid:executionId,processVarType:\"execution\"})\r\n  }\r\n  closeProcessVarModal = () =>{\r\n    this.setState({processVarModalVisible:false,tid:'',processVarType:\"\"})\r\n  }\r\n  openReassignModal = (record) => {\r\n    this.setState({\r\n      taskId:record.taskId,\r\n      reassignModalVisible:true,\r\n      userId:record.taskAssignee\r\n    })\r\n  }\r\n  closeReassignModal = (record) => {\r\n    this.setState({\r\n      taskId:'',\r\n      reassignModalVisible:false\r\n    })\r\n  }\r\n  reAssigneeOfTask = () => {\r\n    ProcessApi.setAssigneeOfTask(this.state.taskId,this.state.userId).then( r=> {\r\n      console.log(r)\r\n      this.queryList(false)\r\n      this.closeReassignModal()\r\n    })\r\n  }\r\n\r\n\r\n\r\n  \r\n  render() {\r\n    console.log(\"render...\")\r\n    const columns = [\r\n      {\r\n        title: \"Def ID\",\r\n        dataIndex: \"procDefId\",\r\n      },\r\n      {\r\n        title: \"Key\",\r\n        dataIndex: \"businessKey\",\r\n      },\r\n      {\r\n        title: \"PI Id\",\r\n        dataIndex: \"processInstanceId\",\r\n      },\r\n      {\r\n        title: \"Exec Id\",\r\n        dataIndex: \"executionId\",\r\n      },\r\n      {\r\n        title: \"Task Id\",\r\n        dataIndex: \"taskId\",\r\n      },\r\n      {\r\n        title: \"Task Name\",\r\n        dataIndex: \"taskName\",\r\n      },\r\n      {\r\n        title: \"Assignee\",\r\n        dataIndex: \"taskAssignee\",\r\n      },\r\n      {\r\n        title: \"Start\",\r\n        dataIndex: \"taskStartTime\",\r\n      },\r\n      {\r\n        title: \"Form\",\r\n        dataIndex: \"taskFormKey\",\r\n      },\r\n      {\r\n        title: \"Operate\",\r\n        key: \"operate\",\r\n        render: (text, record) => (\r\n          <div>\r\n            <Tooltip title=\"Detail\">\r\n              <a>\r\n                <InfoCircleOutlined onClick={() => {this.openTaskDetailModal(record)}}/>\r\n              </a>\r\n            </Tooltip>\r\n            <Divider type=\"vertical\"></Divider>\r\n            <Tooltip title=\"Replace Assignee\">\r\n              <a>\r\n                <UserSwitchOutlined onClick={ () => {this.openReassignModal(record)}}/>\r\n              </a>\r\n            </Tooltip>\r\n            <Divider type=\"vertical\"></Divider>\r\n            <Tooltip title=\"Set Task Variable\">\r\n              <a>\r\n              <SettingOutlined onClick={() => {this.openTaskVar(record.taskId)}}/>\r\n              </a>\r\n            </Tooltip>\r\n            <Divider type=\"vertical\"></Divider>\r\n            <Tooltip title=\"Set Execution Variable\">\r\n              <a>\r\n              <SettingOutlined onClick={() => {this.openExecutionVar(record.executionId)}}/>\r\n              </a>\r\n            </Tooltip>\r\n            <Divider type=\"vertical\"></Divider>\r\n            <Tooltip title=\"Next Step\">\r\n              <a>\r\n                <CaretRightOutlined onClick={()=>{this.openNextStepModal(record)}} />\r\n              </a>\r\n            </Tooltip>\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    \r\n    const operations = {\r\n      right: <Search\r\n      placeholder=\"key words\"\r\n      onSearch={this.onSearch}\r\n      style={{ width: 200 }}\r\n      size=\"small\"\r\n      enterButton\r\n    />\r\n    }\r\n    return (\r\n      <div>\r\n        <Tabs type=\"card\" tabBarExtraContent={operations}>\r\n          <TabPane tab=\"Current Task\" key=\"1\"></TabPane>\r\n        </Tabs>\r\n\r\n        {/* {JSON.stringify(this.state)} */}\r\n\r\n        <Table\r\n          onChange={this.handleTableChange}\r\n          columns={columns}\r\n          dataSource={this.state.tableData}\r\n          pagination={this.state.pagination}\r\n          size=\"small\"\r\n          rowKey={(record) => {\r\n            return (\r\n              record.processInstanceId +\r\n              \"_\" +\r\n              record.taskId +\r\n              \"_\" +\r\n              record.taskAssignee\r\n            );\r\n          }}\r\n        />\r\n\r\n        <Modal\r\n          title=\"Next Step\"\r\n          style={{top:32}}\r\n          visible={this.state.nextStepModalVisible}\r\n          onOk={this.nextStep}\r\n          onCancel={this.closeNextStepModal}\r\n          width=\"80%\"\r\n        >\r\n        \r\n          <div style={{ marginTop: \"8px\" }}>\r\n            <TextArea\r\n              rows={4}\r\n              onChange={(e) => {\r\n                this.vmodel(\"processVariable\", e.target.value);\r\n              }}\r\n              placeholder=\"Process Variable (JSON) \"\r\n            />\r\n\r\n            <div\r\n              dangerouslySetInnerHTML={{\r\n                __html: `Eg.<br/>{<br/>\"users\":[\"zhangsan\",\"lisi\",\"wangwu\"],<br/>\"judge\":\"”zhaoliu\"<br/>}`,\r\n              }}\r\n            ></div>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal\r\n          width={\"100%\"}\r\n          style={{top:32}}\r\n          title={<OrderedListOutlined/>}\r\n          visible={this.state.processVarModalVisible}\r\n          onOk={this.closeProcessVarModal}\r\n          onCancel={this.closeProcessVarModal}\r\n          destroyOnClose={true}\r\n          maskClosable={false}\r\n        >\r\n          <ProcessVariable processVarType={this.state.processVarType} id={this.state.tid}></ProcessVariable>\r\n        </Modal>\r\n\r\n\r\n        <Modal\r\n          width={\"100%\"}\r\n          style={{top:32}}\r\n          title={<OrderedListOutlined/>}\r\n          visible={this.state.taskDetailModalVisible}\r\n          onOk={this.closeTaskDetailModal}\r\n          onCancel={this.closeTaskDetailModal}\r\n          destroyOnClose={true}\r\n          maskClosable={false}\r\n        >\r\n          <TaskInfo taskId={this.state.taskId} ></TaskInfo>\r\n        </Modal>\r\n\r\n        <Modal\r\n          width={\"100%\"}\r\n          style={{top:32}}\r\n          title={<OrderedListOutlined/>}\r\n          visible={this.state.reassignModalVisible}\r\n          onOk={this.reAssigneeOfTask}\r\n          onCancel={this.closeReassignModal}\r\n          destroyOnClose={true}\r\n          maskClosable={false}\r\n        >\r\n          <Input value={this.state.userId} onChange={(e) => { this.vmodel('userId', e.target.value) }}/>\r\n        </Modal>\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskList","import React from 'react'\r\nimport {Tabs ,Input ,Table,Tooltip ,Divider ,Button,Modal} from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport ProcessApi from '@/api/ProcessApi'\r\nimport {UserSwitchOutlined,CaretRightOutlined,InfoCircleOutlined,SettingOutlined,OrderedListOutlined} from '@ant-design/icons';\r\nimport TaskInfo from './TaskInfo'\r\nconst { Search } = Input;\r\nconst { TabPane } = Tabs;\r\nclass TaskHisList extends React.Component {\r\n  state = {\r\n    tableData:[],\r\n    tableLoading:false,\r\n    keyWords:'',\r\n    processInstanceId:'',\r\n    taskDetailModalVisible:false,\r\n    taskHisId:'',\r\n    queryCondition:{\r\n      businessKey:'',\r\n      assignee:'',\r\n      processInstanceId:''\r\n    },\r\n    pagination:{\r\n      current:1,\r\n      pageSize:10,\r\n      pageSizeOptions:[5,10,15,50,100],\r\n      showTotal:(total, range)=>{ return `${total} items`},\r\n      showSizeChanger:true,\r\n      showQuickJumper:true\r\n    },\r\n    // 排序\r\n    sorter: {\r\n      field: 'taskhis.start_time_ ',\r\n      order: 'descend',\r\n    },\r\n  }\r\n\r\n  //对标签属性进行类型、必要性的限制\r\n  static propTypes = {\r\n    businessKey:PropTypes.string,\r\n    assignee:PropTypes.string,\r\n    processInstanceId:PropTypes.string\r\n  }\r\n\r\n  //指定默认标签属性值\r\n  static defaultProps = {\r\n    businessKey:'',\r\n    assignee:'',\r\n    processInstanceId:''\r\n  }\r\n\r\n  componentDidMount(){\r\n    const queryCondition = {}\r\n    if(this.props.businessKey){\r\n      queryCondition.businessKey = this.props.businessKey\r\n    }\r\n    if(this.props.assignee){\r\n      queryCondition.assignee = this.props.assignee\r\n    }\r\n    if(this.props.processInstanceId){\r\n      queryCondition.processInstanceId = this.props.processInstanceId\r\n    }\r\n    this.setState({queryCondition},this.queryList)\r\n\r\n  }\r\n\r\n  onSearch = (v) => {\r\n    this.setState({\r\n      keyWords:v\r\n    },() => {\r\n      this.queryList(true);\r\n    })\r\n  }\r\n\r\n  static getDerivedStateFromProps(props,state){\r\n    console.log(\"---xxxx---\",props,state)\r\n    if(props.processInstanceId !== state.queryCondition.processInstanceId){\r\n      return {processInstanceId:props.processInstanceId}      \r\n    }\r\n    return null;\r\n  }\r\n\r\n  queryList = (clearPage) => {\r\n    console.log(\"===\",this.state.pagination)\r\n    if (clearPage) {\r\n      // 清除分页\r\n      this.setState(\r\n        {\r\n          pagination: {\r\n            showTotal:(total, range)=>{ return `${total} items`},\r\n            showSizeChanger:true,\r\n            showQuickJumper:true,\r\n            ...this.state.pagination,\r\n            current: 1,\r\n          },\r\n        },\r\n        this.basicQuery\r\n      )\r\n    } else {\r\n      this.basicQuery()\r\n    }\r\n  }\r\n\r\n  // 基础查询\r\n  basicQuery = () => {\r\n    const _this = this\r\n    const queryCondition = {\r\n      current: this.state.pagination.current,\r\n      pageSize: this.state.pagination.pageSize,\r\n      total: this.state.pagination.total,\r\n      sortField: this.state.sorter.field,\r\n      sortOrder: this.state.sorter.order.replace('end', ''),\r\n      keyWords:this.state.keyWords,\r\n      ...this.state.queryCondition\r\n    }\r\n    this.setState({ tableLoading: true })\r\n    ProcessApi.queryTaskHisPage(queryCondition).then( result => {\r\n      const r = result.data;\r\n      console.log(r)\r\n      this.setState({\r\n        tableData:r.list,\r\n        tableLoading: false,\r\n        pagination: {\r\n          showTotal:(total, range)=>{ return `${total} items`},\r\n          showSizeChanger:true,\r\n          showQuickJumper:true,\r\n          current: r.pageNum,\r\n          pageSize: r.pageSize,\r\n          total: r.total,\r\n        }\r\n      })\r\n    })\r\n\r\n    \r\n  }\r\n\r\n  // 分页/排序 事件处理\r\n  handleTableChange = (pagination, filters, sorter) => {\r\n    \r\n    const st = {\r\n      pagination:{\r\n        showTotal:(total, range)=>{ return `${total} items`},\r\n        showSizeChanger:true,\r\n        showQuickJumper:true,\r\n        current: pagination.current,\r\n        pageSize: pagination.pageSize,\r\n        total: this.state.pagination.total,\r\n      },\r\n    }\r\n    if (sorter.field && sorter.order) {\r\n      st.sorter = {\r\n        field: sorter.field,\r\n        order: sorter.order,\r\n      }\r\n    } else {\r\n      st.sorter = {\r\n        field: '',\r\n        order: '',\r\n      }\r\n    }\r\n    this.setState(st, this.queryList)\r\n    \r\n  }\r\n\r\n\r\n  openTaskDetailModal = (record) => {\r\n    this.setState({\r\n      taskHisId:record.taskHisId,\r\n      taskDetailModalVisible:true\r\n    })\r\n  }\r\n  closeTaskDetailModal = () => {\r\n    this.setState({\r\n      taskHisId:\"\",\r\n      taskDetailModalVisible:false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    console.log(\"render...\")\r\n    const columns = [\r\n      {\r\n        title: \"Def ID\",\r\n        dataIndex: \"procDefId\",\r\n      },\r\n      {\r\n        title: \"Key\",\r\n        dataIndex: \"businessKey\",\r\n      },\r\n      {\r\n        title: \"PI Id\",\r\n        dataIndex: \"processInstanceId\",\r\n      },\r\n      {\r\n        title: \"Task His Id\",\r\n        dataIndex: \"taskHisId\",\r\n      },\r\n\r\n      \r\n      {\r\n        title: \"Task Name\",\r\n        dataIndex: \"taskName\",\r\n      },\r\n      {\r\n        title: \"Assignee\",\r\n        dataIndex: \"taskAssignee\",\r\n      },\r\n      {\r\n        title: \"Start\",\r\n        dataIndex: \"taskHisStartTime\",\r\n      },\r\n      {\r\n        title: \"End\",\r\n        dataIndex: \"taskHisEndTime\",\r\n      },\r\n      {\r\n        title: \"Form\",\r\n        dataIndex: \"taskFormKey\",\r\n      },\r\n      {\r\n        title: \"Operate\",\r\n        key: \"operate\",\r\n        render: (text, record) => (\r\n          <div>\r\n            <Tooltip title=\"Detail\">\r\n              <a >\r\n                <InfoCircleOutlined onClick={ () => this.openTaskDetailModal(record)}/>\r\n              </a>\r\n            </Tooltip>\r\n            \r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    \r\n    const operations = {\r\n      right: <Search\r\n      placeholder=\"key words\"\r\n      onSearch={this.onSearch}\r\n      style={{ width: 200 }}\r\n      size=\"small\"\r\n      enterButton\r\n    />\r\n    }\r\n    return (\r\n      <div>\r\n        <Tabs type=\"card\" tabBarExtraContent={operations}>\r\n          <TabPane tab=\"Task His\" key=\"1\"></TabPane>\r\n        </Tabs>\r\n\r\n      \r\n        {/* {JSON.stringify(this.state)} */}\r\n       \r\n        <Table\r\n          onChange={this.handleTableChange}\r\n          columns={columns}\r\n          dataSource={this.state.tableData}\r\n          pagination={this.state.pagination}\r\n          size=\"small\"\r\n          rowKey={(record) => {\r\n            return (\r\n              record.processInstanceId +\r\n              \"_\" +\r\n              record.taskHisId +\r\n              \"_\" +\r\n              record.taskAssignee\r\n            );\r\n          }}\r\n        />\r\n\r\n\r\n        <Modal\r\n          width={\"100%\"}\r\n          style={{top:32}}\r\n          title={<OrderedListOutlined/>}\r\n          visible={this.state.taskDetailModalVisible}\r\n          onOk={this.closeTaskDetailModal}\r\n          onCancel={this.closeTaskDetailModal}\r\n          destroyOnClose={true}\r\n          maskClosable={false}\r\n        >\r\n          <TaskInfo taskHisId={this.state.taskHisId} ></TaskInfo>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskHisList","import React from \"react\";\r\nimport { Popover,Tabs, Input, Table, Tooltip, Divider, Modal, Button,Popconfirm ,message,Select } from \"antd\";\r\nimport {\r\n  InfoCircleOutlined,\r\n  DeleteOutlined,\r\n  UnorderedListOutlined,\r\n  SettingOutlined,\r\n  OrderedListOutlined,\r\n  MoreOutlined\r\n  \r\n} from \"@ant-design/icons\";\r\nimport TaskList from \"./TaskList\";\r\nimport TaskHisList from \"./TaskHisList\";\r\nimport ProcessVariable from '../processvariable/ProcessVariable'\r\nimport ProcessApi from \"@/api/ProcessApi\";\r\n\r\nconst { Search } = Input;\r\nconst { TabPane } = Tabs;\r\nconst {Option} = Select;\r\nclass ProcessInstanceList extends React.Component {\r\n  state = {\r\n    tableData: [],\r\n    tableLoading: false,\r\n    processDefList: [],\r\n    keyWords: \"\",\r\n    queryObj: { a: 1 },\r\n    processInstanceId: \"\",\r\n    taskListModalVisible: false,\r\n    taskHisListModalVisible: false,\r\n    processVarModalVisible: false,\r\n    executionVar: \"\",\r\n    executionLocalVar: \"\",\r\n    pagination: {\r\n      current: 1,\r\n      pageSize: 10,\r\n      pageSizeOptions: [5, 10, 15, 50, 100],\r\n      showTotal: (total, range) => {\r\n        return `${total} items`;\r\n      },\r\n      showSizeChanger: true,\r\n      showQuickJumper: true,\r\n    },\r\n    // 排序\r\n    sorter: {\r\n      field: \"procinst.start_time_\",\r\n      order: \"descend\",\r\n    },\r\n  };\r\n\r\n  onSearch = (v) => {    \r\n      this.setState(\r\n        {\r\n          keyWords: v,\r\n        },\r\n        () => {\r\n          this.queryList(true);\r\n        }\r\n      );  \r\n  };\r\n\r\n  queryList = (clearPage) => {\r\n    console.log(\"===\", this.state.pagination);\r\n    if (clearPage) {\r\n      // 清除分页\r\n      this.setState(\r\n        {\r\n          pagination: {\r\n            showTotal: (total, range) => {\r\n              return `${total} items`;\r\n            },\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            ...this.state.pagination,\r\n            current: 1,\r\n          },\r\n        },\r\n        this.basicQuery\r\n      );\r\n    } else {\r\n      this.basicQuery();\r\n    }\r\n  };\r\n\r\n  // 基础查询\r\n  basicQuery = () => {\r\n    const _this = this;\r\n    const queryCondition = {\r\n      current: this.state.pagination.current,\r\n      pageSize: this.state.pagination.pageSize,\r\n      total: this.state.pagination.total,\r\n      sortField: this.state.sorter.field,\r\n      sortOrder: this.state.sorter.order.replace(\"end\", \"\"),\r\n      keyWords: this.state.keyWords,\r\n      ...this.state.queryObj,\r\n    };\r\n    this.setState({ tableLoading: true });\r\n    ProcessApi.queryProcessInstancePage(queryCondition).then((result) => {\r\n      const r = result.data;\r\n      this.setState({\r\n        tableData: r.list,\r\n        tableLoading: false,\r\n        pagination: {\r\n          showTotal: (total, range) => {\r\n            return `${total} items`;\r\n          },\r\n          showSizeChanger: true,\r\n          showQuickJumper: true,\r\n          current: r.pageNum,\r\n          pageSize: r.pageSize,\r\n          total: r.total,\r\n        },\r\n      });\r\n    });\r\n  };\r\n\r\n  // 分页/排序 事件处理\r\n  handleTableChange = (pagination, filters, sorter) => {\r\n    const st = {\r\n      pagination: {\r\n        showTotal: (total, range) => {\r\n          return `${total} items`;\r\n        },\r\n        showSizeChanger: true,\r\n        showQuickJumper: true,\r\n        current: pagination.current,\r\n        pageSize: pagination.pageSize,\r\n        total: this.state.pagination.total,\r\n      },\r\n    };\r\n    if (sorter.field && sorter.order) {\r\n      st.sorter = {\r\n        field: sorter.field,\r\n        order: sorter.order,\r\n      };\r\n    } else {\r\n      st.sorter = {\r\n        field: \"\",\r\n        order: \"\",\r\n      };\r\n    }\r\n    this.setState(st, this.queryList);\r\n  };\r\n  openTaskListModal = (processInstanceId) => {\r\n    this.setState({\r\n      processInstanceId: processInstanceId,\r\n      taskListModalVisible: true,\r\n    });\r\n  };\r\n  openTaskHisListModal = (processInstanceId) => {\r\n    this.setState({\r\n      processInstanceId: processInstanceId,\r\n      taskHisListModalVisible: true,\r\n    });\r\n  };\r\n  closeModal = () => {\r\n    this.setState({\r\n      taskListModalVisible: false,\r\n      taskHisListModalVisible: false,\r\n      processVarModalVisible: false,\r\n    });\r\n  };\r\n\r\n  openProcessVar(executionId) {\r\n    this.setState({\r\n      processVarModalVisible: true,\r\n      processInstanceId: executionId,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.queryList();\r\n  }\r\n\r\n  deleteProcessInstance = (record) => {\r\n    ProcessApi.deleteProcessInstance(record.processInstanceId).then((r) => {\r\n      if (r.data === \"SUCCESS\") {\r\n        message.success(\"Process Instance Be Deleted successfully\");\r\n        this.queryList(false);\r\n      } else {\r\n        message.error(\"Process Instance Deleted Failure\");\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.pageInit();\r\n  }\r\n\r\n  pageInit = () => {\r\n    ProcessApi.queryAllProcDefKeyList().then((r) => {\r\n      this.setState({ processDefList: r.data });\r\n    });\r\n  };\r\n\r\n  setQueryObj = (k, v) => {\r\n    console.log(k, v);\r\n    this.setState({\r\n      queryObj: { ...this.state.queryObj, [k]: v },\r\n    });\r\n  };\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Def ID\",\r\n        dataIndex: \"procDefId\",\r\n      },\r\n      {\r\n        title: \"Key\",\r\n        dataIndex: \"businessKey\",\r\n      },\r\n      {\r\n        title: \"PI Id\",\r\n        dataIndex: \"processInstanceId\",\r\n      },\r\n      {\r\n        title: \"Start\",\r\n        dataIndex: \"processInstanceStartTime\",\r\n      },\r\n      {\r\n        title: \"End\",\r\n        dataIndex: \"processInstanceEndTime\",\r\n      },\r\n      {\r\n        title: \"Operate\",\r\n        key: \"operate\",\r\n        render: (text, record) => (\r\n          <div>\r\n            <Tooltip title=\"Curent Task\">\r\n              <a>\r\n                <UnorderedListOutlined\r\n                  onClick={() => {\r\n                    this.openTaskListModal(record.processInstanceId);\r\n                  }}\r\n                />\r\n              </a>\r\n            </Tooltip>\r\n            <Divider type=\"vertical\"></Divider>\r\n            <Tooltip title=\"Step History\">\r\n              <a>\r\n                <OrderedListOutlined\r\n                  onClick={() => {\r\n                    this.openTaskHisListModal(record.processInstanceId);\r\n                  }}\r\n                />\r\n              </a>\r\n            </Tooltip>\r\n\r\n            <Divider type=\"vertical\"></Divider>\r\n\r\n            <Popconfirm\r\n              placement=\"left\"\r\n              title=\"Are you sure to delete this process instance?\"\r\n              onConfirm={() => {\r\n                this.deleteProcessInstance(record);\r\n              }}\r\n              okText=\"Yes\"\r\n              cancelText=\"No\"\r\n            >\r\n              <Tooltip title=\"Delete Process Instance\">\r\n                <a>\r\n                  <DeleteOutlined />\r\n                </a>\r\n              </Tooltip>\r\n            </Popconfirm>\r\n\r\n            <Divider type=\"vertical\"></Divider>\r\n            <Tooltip title=\"Set Process Global Variable\">\r\n              <a>\r\n                <SettingOutlined\r\n                  onClick={() => {\r\n                    this.openProcessVar(record.processInstanceId);\r\n                  }}\r\n                />\r\n              </a>\r\n            </Tooltip>\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n\r\n    const advanceSearch = (\r\n      <div>\r\n        <Input\r\n          size={\"small\"}\r\n          addonBefore=\"[Def Name] like\"\r\n          onChange={(e) => {\r\n            this.setQueryObj(\"defName\", e.target.value);\r\n          }}\r\n          style={{ width: 250, marginBottom: 8 }}\r\n        />\r\n        <br />\r\n        <Input\r\n          size={\"small\"}\r\n          addonBefore=\"[Def Id] =\"\r\n          onChange={(e) => {\r\n            this.setQueryObj(\"procDefId\", e.target.value);\r\n          }}\r\n          style={{ width: 250 }}\r\n          style={{ width: 250, marginBottom: 8 }}\r\n        />\r\n        <br />\r\n        <Button type=\"primary\" onClick={() => {this.queryList(true);}} block size={\"small\"}>\r\n          Search\r\n        </Button>\r\n      </div>\r\n    );\r\n\r\n    const operations = {\r\n      right: (\r\n        <div>\r\n          <Select\r\n            placeholder=\"Def Key\"\r\n            size={\"small\"}\r\n            style={{ width: 150 }}\r\n            showSearch\r\n            optionFilterProp=\"children\"\r\n            allowClear={true}\r\n            onChange={(v) => {\r\n              this.setQueryObj(\"defKey\", v);\r\n            }}\r\n          >\r\n            {this.state.processDefList.map((item) => {\r\n              return <Option value={item.defKey}>{item.defKey}</Option>;\r\n            })}\r\n          </Select>\r\n\r\n          <Search\r\n            placeholder=\"key words\"\r\n            onSearch={this.onSearch}\r\n            style={{ width: 200, marginRight: 8 }}\r\n            size=\"small\"\r\n            enterButton\r\n          />\r\n          <Tooltip\r\n            placement=\"bottomLeft\"\r\n            title=\"=[processInstanceId] or like [businessKey]\"\r\n          >\r\n            <InfoCircleOutlined style={{ color: \"#1890ff\", marginRight: 16 }} />\r\n          </Tooltip>\r\n\r\n          <Popover\r\n            placement=\"leftTop\"\r\n            trigger=\"click\"\r\n            content={advanceSearch}\r\n            title=\"Advance Search\"\r\n          >\r\n            <Tooltip title=\"Advance Search\">\r\n              <MoreOutlined style={{ color: \"#1890ff\" }} />\r\n            </Tooltip>\r\n          </Popover>\r\n        </div>\r\n      ),\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Tabs type=\"card\" tabBarExtraContent={operations}>\r\n          <TabPane tab=\"Process Instance Management\"></TabPane>\r\n        </Tabs>\r\n        <Table\r\n          onChange={this.handleTableChange}\r\n          columns={columns}\r\n          dataSource={this.state.tableData}\r\n          pagination={this.state.pagination}\r\n          size=\"small\"\r\n          rowKey=\"processInstanceId\"\r\n        />\r\n\r\n        <Modal\r\n          width={\"100%\"}\r\n          style={{ top: 32 }}\r\n          title={<UnorderedListOutlined />}\r\n          visible={this.state.taskListModalVisible}\r\n          onOk={this.closeModal}\r\n          onCancel={this.closeModal}\r\n          destroyOnClose={true}\r\n          maskClosable={false}\r\n        >\r\n          <TaskList processInstanceId={this.state.processInstanceId}></TaskList>\r\n        </Modal>\r\n\r\n        <Modal\r\n          width={\"100%\"}\r\n          style={{ top: 32 }}\r\n          title={<OrderedListOutlined />}\r\n          visible={this.state.taskHisListModalVisible}\r\n          onOk={this.closeModal}\r\n          onCancel={this.closeModal}\r\n          destroyOnClose={true}\r\n          maskClosable={false}\r\n        >\r\n          <TaskHisList\r\n            processInstanceId={this.state.processInstanceId}\r\n          ></TaskHisList>\r\n        </Modal>\r\n\r\n        <Modal\r\n          width={\"100%\"}\r\n          title={<OrderedListOutlined />}\r\n          visible={this.state.processVarModalVisible}\r\n          onOk={this.closeModal}\r\n          onCancel={this.closeModal}\r\n          destroyOnClose={true}\r\n          maskClosable={false}\r\n        >\r\n          <ProcessVariable\r\n            processVarType=\"execution\"\r\n            id={this.state.processInstanceId}\r\n          ></ProcessVariable>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProcessInstanceList;\r\n","import React from 'react'\r\nimport { BrowserRouter, Route,Link } from 'react-router-dom';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport {\r\n  DesktopOutlined,\r\n  PieChartOutlined,\r\n  FileOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n  SlidersOutlined,\r\n  HighlightOutlined,\r\n  SnippetsOutlined,\r\n  OrderedListOutlined,\r\n  UnorderedListOutlined,\r\n} from '@ant-design/icons';\r\nimport ProcessDefinedList from '@/components/processdefined/ProcessDefinedList'\r\nimport ProcessInstanceList from '@/components/processinstance/ProcessInstanceList'\r\nimport TaskList from '@/components/processinstance/TaskList'\r\nimport TaskHisList from '@/components/processinstance/TaskHisList'\r\nimport ProcessVariable from '@/components/processvariable/ProcessVariable'\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nclass IndexLayout extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = collapsed => {\r\n    console.log(collapsed);\r\n    this.setState({ collapsed });\r\n  };\r\n\r\n  render() {\r\n    const { collapsed } = this.state;\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\r\n          <div className=\"logo\">\r\n            {/* Process Management */}\r\n            ____\r\n          </div>\r\n          <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\r\n            <Menu.Item key=\"processDefinedList\" icon={<SlidersOutlined />}>\r\n              <Link to=\"/processDefinedList\" >Process Mgmt. </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"processInstanceList\" icon={<SnippetsOutlined />}>\r\n              <Link to=\"/processInstanceList\">Instance Mgmt.</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"taskList\" icon={<UnorderedListOutlined />}>\r\n              <Link to=\"/taskList\">Task List</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"TaskHisList\" icon={<OrderedListOutlined />}>\r\n              <Link to=\"/TaskHisList\">Task His List</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"ProcessVariable\" icon={<FileOutlined />}>\r\n              <Link to=\"/ProcessVariable\">Process Var</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout className=\"site-layout\">\r\n          <Content style={{ margin: \"16px 16px 0px\" }}>\r\n            <div\r\n              className=\"site-layout-background\"\r\n              style={{ padding: \"8px 24px\", minHeight: 360 }}\r\n            >\r\n              <Route\r\n                path=\"/processDefinedList\"\r\n                exact\r\n                component={ProcessDefinedList}\r\n              ></Route>\r\n              <Route\r\n                path=\"/processInstanceList\"\r\n                exact\r\n                component={ProcessInstanceList}\r\n              ></Route>\r\n              <Route path=\"/taskList\" exact component={TaskList}></Route>\r\n              <Route path=\"/TaskHisList\" exact component={TaskHisList}></Route>\r\n              <Route\r\n                path=\"/ProcessVariable\"\r\n                exact\r\n                component={ProcessVariable}\r\n              ></Route>\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\" }}>\r\n            Activiti Process Management System\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default IndexLayout","import logo from './logo.svg';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport IndexLayout from '@/layout/IndexLayout'\nfunction App() {\n  return (\n    <BrowserRouter>\n    <IndexLayout></IndexLayout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@/assets/css/antd.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}