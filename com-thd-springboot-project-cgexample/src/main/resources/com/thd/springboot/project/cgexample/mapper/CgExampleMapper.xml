<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thd.springboot.project.cgexample.mapper.CgExampleMapper">
	<!-- Result Map -->
	<resultMap id="ResultMap" type="com.thd.springboot.project.cgexample.entity.CgExampleEntity">
		<result column="id" property="id" />
		<result column="user_name" property="userName" />
		<result column="user_age" property="userAge" />
		<result column="user_birthday" property="userBirthday" />
		<result column="create_by" property="createBy" />
		<result column="modify_by" property="modifyBy" />
		<result column="create_time" property="createTime" />
		<result column="modify_time" property="modifyTime" />
		<result column="is_deleted" property="isDeleted" />
	</resultMap>


	<sql id="column_list">
	    cg_example.`id`, <!-- 0 主键 -->
	    cg_example.`user_name`, <!-- 1 姓名 -->
	    cg_example.`user_age`, <!-- 2 年龄 -->
	    cg_example.`user_birthday`, <!-- 3 生日 -->
	    cg_example.`create_by`, <!-- 4  -->
	    cg_example.`modify_by`, <!-- 5  -->
	    cg_example.`create_time`, <!-- 6  -->
	    cg_example.`modify_time`, <!-- 7  -->
	    cg_example.`is_deleted` <!-- 8  -->
	</sql>

	<sql id="where_eq">
		where is_deleted = 0
        <if test="id != null ">
            and cg_example.`id` = #{id}
        </if>
        <if test="userName != null and userName != '' ">
            and cg_example.`user_name` = #{userName}
        </if>
        <if test="userAge != null ">
            and cg_example.`user_age` = #{userAge}
        </if>
        <if test="userBirthday != null ">
            and cg_example.`user_birthday` = #{userBirthday}
        </if>
	</sql>

    <sql id="where_like">
        where is_deleted = 0
        <if test="id != null and id != ''">
            and cg_example.`id` like #{id}
        </if>
        <if test="userName != null and userName != '' ">
            and cg_example.`user_name` like CONCAT('%',#{userName},'%')
        </if>
        <if test="userAge != null ">
            and cg_example.`user_age` = #{userAge}
        </if>
        <if test="userBirthday != null ">
            and cg_example.`user_birthday` = #{userBirthday}
        </if>
        <if test="keyWords != null and keyWords != ''">
            and cg_example.`user_name` like CONCAT('%',#{keyWords},'%')
        </if>
    </sql>

    <insert id="insert" parameterType="com.thd.springboot.project.cgexample.entity.CgExampleEntity">
        insert into cg_example(
            `id`,
            `user_name`,
            `user_age`,
            `user_birthday`,
            `create_by`,
            `modify_by`,
            `create_time`,
            `modify_time`,
            `is_deleted`
        )
        values(
            #{id},
            #{userName},
            #{userAge},
            #{userBirthday},
            #{createBy},
            #{modifyBy},
            #{createTime},
            #{modifyTime},
            #{isDeleted}
        )
    </insert>

    <delete id="physicsDelete" parameterType="java.lang.String">
        delete from cg_example where `id` = #{id}
    </delete>

    <update id="logicDelete" parameterType="java.lang.String">
        update cg_example set is_deleted=1 where `id` = #{id}
    </update>


	<update id="update" parameterType="com.thd.springboot.project.cgexample.entity.CgExampleEntity">
		update cg_example set
	    <trim  suffixOverrides="," >
	        <if test="id != null ">
	            `id`=#{id},
	        </if>
            <if test="userName != null ">
                `user_name`=#{userName},
            </if>
            <if test="userAge != null ">
                `user_age`=#{userAge},
            </if>
            <if test="userBirthday != null ">
                `user_birthday`=#{userBirthday},
            </if>
            <if test="createBy != null ">
                `create_by`=#{createBy},
            </if>
            <if test="modifyBy != null ">
                `modify_by`=#{modifyBy},
            </if>
            <if test="createTime != null ">
                `create_time`=#{createTime},
            </if>
            <if test="modifyTime != null ">
                `modify_time`=#{modifyTime},
            </if>
            <if test="isDeleted != null ">
                `is_deleted`=#{isDeleted},
            </if>
	    </trim>
	    where `id`=#{id}
	</update>

    <select id="queryListEq" resultMap="ResultMap" parameterType="com.thd.springboot.project.cgexample.entity.CgExampleEntity">
        select
        <include refid="column_list" />
        from cg_example
        <include refid="where_eq" />

    </select>

    <select id="queryListLike" resultMap="ResultMap" parameterType="com.thd.springboot.project.cgexample.entity.CgExampleEntity">
        select
        <include refid="column_list" />
        from cg_example
        <include refid="where_like" />

    </select>


	<delete id="delete" parameterType="com.thd.springboot.project.cgexample.entity.CgExampleEntity">
		delete from  cg_example where `id` = #{id}
	</delete>

	<update id="isDelete" parameterType="com.thd.springboot.project.cgexample.entity.CgExampleEntity">
		update  cg_example set is_deleted = 1 where `id` = #{id}
	</update>

	<select id="queryById" resultMap="ResultMap" parameterType="com.thd.springboot.project.cgexample.entity.CgExampleEntity">
		select <include refid="column_list" /> from cg_example where is_deleted=0 and `id` = #{id}
	</select>

    <select id="queryByCondition" resultMap="ResultMap" parameterType="com.thd.springboot.project.cgexample.entity.CgExampleEntity">
        select
        <include refid="column_list" />
        from
        cg_example
        <include refid="where_eq" />
    </select>


	<select id="queryAllToMapKey" resultType="com.thd.springboot.project.cgexample.entity.CgExampleEntity">
        select
        <include refid="column_list" />
        from
        cg_example
        <include refid="where_eq" />
    </select>

    <insert id="insertBatch" >
            insert into cg_example
            (
               id,
               user_name,
               user_age,
               user_birthday,
               create_by,
               modify_by,
               create_time,
               modify_time,
               is_deleted
            )
            values
            <foreach collection="list" item="r" index="index" separator=",">
                (
                    #{r.id},
                    #{r.userName},
                    #{r.userAge},
                    #{r.userBirthday},
                    #{r.createBy},
                    #{r.modifyBy},
                    #{r.createTime},
                    #{r.modifyTime},
                    #{r.isDeleted}
                )
            </foreach>
        </insert>

</mapper>
