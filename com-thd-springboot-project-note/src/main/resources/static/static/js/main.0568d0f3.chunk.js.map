{"version":3,"sources":["logo.svg","axios.js","api/NoteApi.js","tools/DateUtils.js","components/MdEditor.jsx","components/Mde.jsx","components/NoteForm.jsx","components/NoteView.jsx","components/NoteList.jsx","components/Knowledge.jsx","layout/IndexLayout.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","interceptors","response","use","data","code","message","error","msg","Error","Promise","reject","context","process","method","url","params","id","idList","keyWords","classify","shijianchuo","add0","m","time","Date","y","getFullYear","getMonth","d","getDate","getHours","getMinutes","getSeconds","MdEditor","state","markdown","Math","random","handleChange","value","setState","props","change","style","zIndex","selectedTab","this","content","options","spellChecker","toolbar","onChange","React","Component","CheckableTag","Tag","NoteForm","formData","todoLevel","todoStatus","inputSize","formStatus","colSpan","xs","sm","md","lg","xl","xxl","createInputMode","v","propName","createDateMode","createInput","size","e","target","selectTag","saveNote","startTimeTemp","startTime","startDateTemp","finishTimeTemp","finishTime","finishDateTemp","NoteApi","then","r","closeFn","cb","info","catch","mdChange","setClassify","todoLevelChange","tag","checked","key","noteId","rst","result","split","gutter","span","className","background","borderRadius","padding","icon","fontSize","paddingTop","marginRight","color","count","tooltips","ct","title","placeholder","class","display","width","moment","dataStr","expireDate","alarmDays","format","Group","Button","textAlign","type","SaveOutlined","onClick","RollbackOutlined","defaultProps","canEdit","NoteView","userBirthday","DateUtils","Search","Input","Option","Select","levelTags","NoteList","advanceSearchVisible","viewType","queryCondition","tabLoading","tabPagination","current","pageSize","total","pageSizeOptions","showTotal","range","showSizeChanger","showQuickJumper","tabSort","field","order","tabData","selectedRowKeys","formModalVisible","viewModalVisible","onSelectChange","clearSelectedKeys","checkedInit","undefined","find","item","checkboxChange","filterResult","filter","tabChange","pagination","filters","sorter","replace","queryTabData","tabPaginationChange","page","clearPage","currentPage","pageNum","list","createOperate","record","menu","Item","DeleteOutlined","placement","onConfirm","logicDeleteNote","okText","cancelText","openNoteViewModal","InfoOutlined","toggleNoteState","CheckOutlined","CloseOutlined","openNoteFormModal","overlay","MoreOutlined","onSearch","resetSearch","keyWordsChange","clearKeyWords","deleteLogicByNoteIds","length","closeNoteFormModal","closeNoteViewModal","toggleViewType","handleAdvanceSearchVisibleChange","b","createMode","search","deleteIndex","success","createIndex","computColor","console","log","levelTagsObj","forEach","tabDataColumns","dataIndex","render","text","index","rowSelection","preserveSelectedRowKeys","selections","onSelect","changableRowKeys","tableView","loading","rowKey","columns","dataSource","listView","flexDirection","flexWrap","justifyContent","map","flex","height","disabled","defaultValue","ExclamationOutlined","image","Empty","PRESENTED_IMAGE_SIMPLE","marginTop","dataView","advanceSearch","margin","SearchOutlined","cursor","TableOutlined","UnorderedListOutlined","suffix","CloseCircleFilled","enterButton","UserOutlined","trigger","visible","onVisibleChange","UpOutlined","DownOutlined","PlusOutlined","footer","top","destroyOnClose","onCancel","maskClosable","Knowledge","keyWord","dataList","alert","border","Content","Layout","Header","Footer","Sider","IndexLayout","Menu","SubMenu","collapsed","onCollapse","minHeight","collapsible","theme","defaultSelectedKeys","mode","SlidersOutlined","to","path","exact","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0568d0f3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from 'axios'\r\nimport { message } from 'antd';\r\n\r\naxios.interceptors.response.use(function (response) {\r\n\r\n    // console.log('--res success--',response)\r\n    // 对响应数据做点什么\r\n\r\n    if(response.data.code === '-1'){\r\n      message.error(response.data.msg)\r\n      throw new Error(response.data.msg)\r\n    }\r\n    return response.data;\r\n   \r\n    \r\n  }, function (error) {\r\n    // console.log('--req error--',error)\r\n\r\n    message.error('Error:'+ error);\r\n    // 对响应错误做点什么\r\n    return Promise.reject(error);\r\n  });\r\n\r\n\r\nexport default axios","import axios from '@/axios';\r\n\r\nconst context = process.env.REACT_APP_CONTEXT\r\nexport default {\r\n  queryNoteLikeByPage:function(data){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/note/queryNoteLikeByPage`,\r\n      params:data\r\n    });\r\n  },\r\n  addNote:function(data){\r\n    return axios({\r\n      method: 'post',\r\n      url: `${context}/note/addNote`,\r\n      data\r\n    });\r\n  },\r\n  queryNoteById:function(id){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/note/queryNoteById/${id}`\r\n    });\r\n  },\r\n  updateNote:function(data){\r\n    return axios({\r\n      method: 'post',\r\n      url: `${context}/note/updateNote`,\r\n      data\r\n    });\r\n  },\r\n  logicDeleteNote:function(id){\r\n    return axios({\r\n      method: 'delete',\r\n      url: `${context}/note/logicDeleteNote/${id}`\r\n    });\r\n  },\r\n  deleteLogicByNoteIds:function(idList){\r\n    return axios({\r\n      method: 'delete',\r\n      url: `${context}/note/deleteLogicByNoteIds`,\r\n      data:idList\r\n    });\r\n  },\r\n  search:function(keyWords,classify){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/note/search?keyWords=${keyWords}`\r\n    });\r\n  },\r\n  deleteNodeIndex:function(){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/note/deleteNodeIndex`\r\n    });\r\n  },\r\n  createNoteIndex:function(){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/note/createNoteIndex`\r\n    });\r\n  },\r\n  toggleNoteState:function(id){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/note/toggleNoteState/${id}`\r\n    });\r\n    \r\n  }\r\n  \r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n}","export default {\r\n  formatToDate: function (shijianchuo) {\r\n    if (shijianchuo) {\r\n      let add0 = function (m) {\r\n        return m < 10 ? \"0\" + m : m;\r\n      };\r\n\r\n      //shijianchuo是整数，否则要parseInt转换\r\n      var time = new Date(shijianchuo);\r\n      var y = time.getFullYear();\r\n      var m = time.getMonth() + 1;\r\n      var d = time.getDate();\r\n      var h = time.getHours();\r\n      var mm = time.getMinutes();\r\n      var s = time.getSeconds();\r\n      return y + \"-\" + add0(m) + \"-\" + add0(d);\r\n    } else {\r\n      return \"\";\r\n    }\r\n  },\r\n  formatToTime: function (shijianchuo) {\r\n    if (shijianchuo) {\r\n      let add0 = function (m) {\r\n        return m < 10 ? \"0\" + m : m;\r\n      };\r\n\r\n      //shijianchuo是整数，否则要parseInt转换\r\n      var time = new Date(shijianchuo);\r\n      var y = time.getFullYear();\r\n      var m = time.getMonth() + 1;\r\n      var d = time.getDate();\r\n      var h = time.getHours();\r\n      var mm = time.getMinutes();\r\n      var s = time.getSeconds();\r\n      return (\r\n        y +\r\n        \"-\" +\r\n        add0(m) +\r\n        \"-\" +\r\n        add0(d) +\r\n        \" \" +\r\n        add0(h) +\r\n        \":\" +\r\n        add0(mm) +\r\n        \":\" +\r\n        add0(s)\r\n      );\r\n    } else {\r\n      return \"\";\r\n    }\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport SimpleMDE from \"react-simplemde-editor\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"easymde/dist/easymde.min.css\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\nclass MdEditor extends React.Component {\r\n  state = {\r\n    markdown: `aaaaa`,\r\n    id: `editor_${Math.random()}`,\r\n  };\r\n \r\n  static propTypes = {\r\n    content: PropTypes.string,\r\n    change: PropTypes.func,\r\n  };\r\n\r\n  handleChange = (value) => {\r\n    this.setState({\r\n      markdown: value,\r\n    });\r\n    this.props.change(value);\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SimpleMDE\r\n          style={{ zIndex: 11 }}\r\n          selectedTab=\"preview\"\r\n          id={this.state.id}\r\n          value={this.props.content}\r\n          options={{\r\n            spellChecker: false,\r\n            toolbar: [\r\n              \"bold\",\r\n              \"italic\",\r\n              \"heading\",\r\n              \"|\",\r\n              \"quote\",\r\n              \"code\",\r\n              \"table\",\r\n              \"horizontal-rule\",\r\n              \"unordered-list\",\r\n              \"ordered-list\",\r\n              \"|\",\r\n              \"link\",\r\n              \"image\",\r\n              \"|\",\r\n              \"preview\",\r\n              \"side-by-side\",\r\n              \"fullscreen\",\r\n              \"|\",\r\n              \"guide\",\r\n            ],\r\n          }}\r\n          onChange={this.handleChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MdEditor;\r\n","import React from \"react\";\r\nimport ReactMde from \"react-mde\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\r\n\r\nclass Mde extends React.Component {\r\n  state = {\r\n    markdown: `aaaaa`,\r\n    id: `editor_${Math.random()}`,\r\n    value: \"\",\r\n    selectedTab:'write'\r\n  };\r\n\r\n  static propTypes = {\r\n    content: PropTypes.string,\r\n    change: PropTypes.func,\r\n  };\r\n\r\n  setValue = (value) => {\r\n    this.setState({\r\n      value\r\n    })\r\n  }\r\n\r\n  setSelectedTab = (selectedTab) => {\r\n    this.setState({\r\n      selectedTab\r\n    })\r\n  }\r\n\r\n  handleChange = (value) => {\r\n    this.setState({\r\n      markdown: value,\r\n    });\r\n    this.props.change(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.selectedTab}\r\n        <ReactMde\r\n          value={this.props.content}\r\n          onChange={this.handleChange}\r\n          selectedTab={this.state.selectedTab}\r\n          onTabChange={this.setSelectedTab}\r\n          generateMarkdownPreview={(markdown) =>\r\n            Promise.resolve(<ReactMarkdown source={markdown} />)\r\n          }\r\n          childProps={{\r\n            writeButton: {\r\n              tabIndex: -1,\r\n            },\r\n          }}\r\n         \r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Mde;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport NoteApi from \"@/api/NoteApi\";\r\nimport MdEditor from \"./MdEditor\";\r\nimport Mde from \"./Mde\";\r\nimport {\r\n  message,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  DatePicker,\r\n  TimePicker,\r\n  Space,\r\n  Button,\r\n  Radio,\r\n  Tag,\r\n  InputNumber,\r\n  Divider,\r\n  Rate\r\n} from \"antd\";\r\nimport { SaveOutlined, RollbackOutlined } from \"@ant-design/icons\";\r\nimport DateUtils from \"@/tools/DateUtils\";\r\nimport moment from \"moment\";\r\n\r\nconst { CheckableTag } = Tag;\r\nconst levelTags = [\r\n  { key: 5, value: \"紧急\", color: \"#cf1322\" },\r\n  { key: 4, value: \"重要\", color: \"#d48806\" },\r\n  { key: 3, value: \"正常\", color: \"#87d068\" },\r\n  { key: 2, value: \"不紧急\", color: \"#2db7f5\" },\r\n  { key: 1, value: \"不重要\", color: \"#2db7f5\" },\r\n];\r\nclass NoteForm extends React.Component {\r\n  state = {\r\n    formData: { classify: \"Todo\", content: \"\", todoLevel: 3, todoStatus: 0 },\r\n    inputSize: \"normal\",\r\n    formStatus: \"CREATE\",\r\n    // colSpan: {\r\n    //   xs: 24,\r\n    //   sm: 12,\r\n    //   md: 8,\r\n    //   lg: 6,\r\n    //   xl: 4,\r\n    //   xxl: 3,\r\n    // },\r\n    colSpan: {\r\n      xs: 24,\r\n      sm: 24,\r\n      md: 24,\r\n      lg: 24,\r\n      xl: 24,\r\n      xxl: 24,\r\n    },\r\n  };\r\n\r\n  static propTypes = {\r\n    noteId: PropTypes.string,\r\n    canEdit: PropTypes.bool,\r\n    closeFn: PropTypes.func,\r\n    cb: PropTypes.func,\r\n  };\r\n\r\n  //指定默认标签属性值\r\n  static defaultProps = {\r\n    noteId: \"\", //sex默认值为男\r\n    canEdit: true, //age默认值为18\r\n    closeFn: () => {},\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.noteId) {\r\n      this.setState({\r\n        formStatus: \"EDIT\",\r\n      });\r\n\r\n      NoteApi.queryNoteById(this.props.noteId).then((r) => {\r\n        const rst = r.result;\r\n        if (rst.startTime) {\r\n          rst.startDateTemp = rst.startTime.split(\" \")[0];\r\n          rst.startTimeTemp = rst.startTime.split(\" \")[1];\r\n        }\r\n        if (rst.finishTime) {\r\n          rst.finishDateTemp = rst.finishTime.split(\" \")[0];\r\n          rst.finishTimeTemp = rst.finishTime.split(\" \")[1];\r\n        }\r\n        this.setState({\r\n          formData: rst,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  createInputMode = (v, propName) => {\r\n    this.setState({\r\n      formData: {\r\n        ...this.state.formData,\r\n        [propName]: v,\r\n      },\r\n    });\r\n  };\r\n\r\n  createDateMode = (v, propName) => {\r\n    this.setState({\r\n      formData: {\r\n        ...this.state.formData,\r\n        [propName]: v,\r\n      },\r\n    });\r\n  };\r\n\r\n  createInput = (propName) => {\r\n    return (\r\n      <Input\r\n        size={this.state.inputSize}\r\n        value={this.state.formData[propName]}\r\n        onChange={(e) => {\r\n          this.createInputMode(e.target.value, propName);\r\n        }}\r\n      />\r\n    );\r\n  };\r\n  selectTag = (classify) => {\r\n    return () => {\r\n      this.setState({\r\n        formData: { ...this.state.formData, classify },\r\n      });\r\n    };\r\n  };\r\n  saveNote = () => {\r\n    const data = this.state.formData;\r\n    if (data.startTimeTemp) {\r\n      data.startTime = data.startDateTemp + \" \" + data.startTimeTemp;\r\n    }\r\n    if (data.finishTimeTemp) {\r\n      data.finishTime = data.finishDateTemp + \" \" + data.finishTimeTemp;\r\n    }\r\n\r\n    if (this.state.formStatus === \"CREATE\") {\r\n      NoteApi.addNote(data)\r\n        .then((r) => {\r\n          // console.log(r);\r\n          this.props.closeFn();\r\n          if (this.props.cb) {\r\n            this.props.cb();\r\n          }\r\n          message.info(\"SUCCESS\");\r\n        })\r\n        .catch((r) => {});\r\n    } else {\r\n      NoteApi.updateNote(data)\r\n        .then((r) => {\r\n          // console.log(r);\r\n          this.props.closeFn();\r\n          if (this.props.cb) {\r\n            this.props.cb();\r\n          }\r\n          message.info(\"SUCCESS\");\r\n        })\r\n        .catch((r) => {});\r\n    }\r\n  };\r\n\r\n  mdChange = (content) => {\r\n    this.setState({\r\n      formData: { ...this.state.formData, content },\r\n    });\r\n  };\r\n\r\n  setClassify = (e) => {\r\n    this.setState({\r\n      formData: { ...this.state.formData, classify: e.target.value },\r\n    });\r\n  };\r\n\r\n  todoLevelChange = (tag, checked) => {\r\n    this.setState({ formData: { ...this.state.formData, todoLevel: tag.key } });\r\n  };\r\n\r\n  render() {\r\n    const todoLevel = [this.state.formData.todoLevel];\r\n    return (\r\n      <div>\r\n        {/* {JSON.stringify(this.state.formData)} */}\r\n        {/* <Editor></Editor> */}\r\n\r\n        <Row gutter={24}>\r\n          <Col span={12}>\r\n            <dl className=\"form_col\">\r\n              <dd>\r\n                <div\r\n                  style={{ background: \"#fffbe6\", borderRadius: 5, padding: 8 }}\r\n                >\r\n                  {/* <Radio.Group\r\n                      value={this.state.formData.classify}\r\n                      buttonStyle=\"solid\"\r\n                      onChange={this.setClassify}\r\n                    >\r\n                      <Radio.Button value=\"Todo\">Todo</Radio.Button>\r\n                      <Radio.Button value=\"Note\">Note</Radio.Button>\r\n                      <Radio.Button value=\"Knowledge\">Knowledge</Radio.Button>\r\n                    </Radio.Group> */}\r\n\r\n                  <CheckableTag\r\n                    key=\"Todo\"\r\n                    onChange={this.selectTag(\"Todo\")}\r\n                    checked={this.state.formData.classify === \"Todo\"}\r\n                    icon={\r\n                      <FontAwesomeIcon\r\n                        icon=\"th-list\"\r\n                        style={{\r\n                          fontSize: 14,\r\n                          paddingTop: 2,\r\n                          marginRight: 8,\r\n                          color: \"#ffffff\",\r\n                        }}\r\n                      />\r\n                    }\r\n                  >\r\n                    Todo\r\n                  </CheckableTag>\r\n\r\n                  <CheckableTag\r\n                    key=\"Note\"\r\n                    onChange={this.selectTag(\"Note\")}\r\n                    checked={this.state.formData.classify === \"Note\"}\r\n                    icon={\r\n                      <FontAwesomeIcon\r\n                        icon=\"clipboard-list\"\r\n                        style={{\r\n                          fontSize: 14,\r\n                          paddingTop: 2,\r\n                          marginRight: 8,\r\n                          color: \"#ffffff\",\r\n                        }}\r\n                      />\r\n                    }\r\n                  >\r\n                    Note\r\n                  </CheckableTag>\r\n\r\n                  <CheckableTag\r\n                    key=\"Knowledge\"\r\n                    onChange={this.selectTag(\"Knowledge\")}\r\n                    checked={this.state.formData.classify === \"Knowledge\"}\r\n                    icon={\r\n                      <FontAwesomeIcon\r\n                        icon=\"book\"\r\n                        style={{\r\n                          fontSize: 14,\r\n                          paddingTop: 2,\r\n                          marginRight: 8,\r\n                          color: \"#ffffff\",\r\n                        }}\r\n                      />\r\n                    }\r\n                  >\r\n                    Knowledge\r\n                  </CheckableTag>\r\n                </div>\r\n              </dd>\r\n            </dl>\r\n          </Col>\r\n          <Col span={12}>\r\n          <Rate \r\n            count={5} \r\n            value={this.state.formData.todoLevel} tooltips={['不重要','不紧急','正常','重要','紧急']}\r\n            onChange={(ct) => {\r\n              this.createInputMode(ct, \"todoLevel\");\r\n            }}\r\n            />\r\n            </Col>\r\n          <Col {...this.state.colSpan}>\r\n            <dl className=\"form_col\">\r\n              <dd>\r\n                <Input\r\n                  size={this.state.inputSize}\r\n                  value={this.state.formData.title}\r\n                  placeholder=\"Title ...\"\r\n                  onChange={(e) => {\r\n                    this.createInputMode(e.target.value, \"title\");\r\n                  }}\r\n                />\r\n              </dd>\r\n            </dl>\r\n          </Col>\r\n\r\n          {this.state.formData.classify === \"Todo\" ? (\r\n            <Col {...this.state.colSpan}>\r\n              <dl class=\"form_row\">\r\n                \r\n              <dd>\r\n                \r\n               \r\n\r\n                {/* {levelTags.map((tag) => (\r\n                  <CheckableTag\r\n                    key={tag.key}\r\n                    checked={todoLevel.indexOf(tag.key) > -1}\r\n                    onChange={(checked) => this.todoLevelChange(tag, checked)}\r\n                  >\r\n                    {tag.value}\r\n                  </CheckableTag>\r\n                ))} */}\r\n                </dd>\r\n              </dl>\r\n            </Col>\r\n          ) : null}\r\n\r\n          <Col {...this.state.colSpan}>\r\n            {/* <Mde\r\n              change={this.mdChange}\r\n              content={this.state.formData.content}\r\n            ></Mde> */}\r\n            <MdEditor\r\n              change={this.mdChange}\r\n              content={this.state.formData.content}\r\n            ></MdEditor>\r\n          </Col>\r\n          <Col {...this.state.colSpan} style={{ display: \"none\" }}>\r\n            <dl className=\"form_col\">\r\n              <dt>PK</dt>\r\n              <dd>\r\n                <Input\r\n                  size={this.state.inputSize}\r\n                  value={this.state.formData.noteId}\r\n                  onChange={(e) => {\r\n                    this.createInputMode(e.target.value, \"noteId\");\r\n                  }}\r\n                />\r\n              </dd>\r\n            </dl>\r\n          </Col>\r\n\r\n          {/* <Col {...this.state.colSpan}>\r\n                <dl className=\"form_col\">\r\n                  <dt>content</dt>\r\n                  <dd>\r\n                    <Input\r\n                  size={this.state.inputSize}\r\n                  value={this.state.formData.content}\r\n                  onChange={(e) => {\r\n                    this.createInputMode(e.target.value, \"content\");\r\n                  }}\r\n                />\r\n                  </dd>\r\n                </dl>\r\n              </Col> */}\r\n\r\n          {this.state.formData.classify === \"Todo\" ? (\r\n            <Col {...this.state.colSpan}>\r\n              <Row gutter={24}>\r\n                <Col span=\"6\">\r\n                  <dl className=\"form_col\">\r\n                    <dt>Expire Date</dt>\r\n                    <dd>\r\n                      <DatePicker\r\n                        style={{ width: \"100%\" }}\r\n                        size={this.state.inputSize}\r\n                        onChange={(moment, dataStr) => {\r\n                          this.createDateMode(dataStr, \"expireDate\");\r\n                        }}\r\n                        value={\r\n                          this.state.formData.expireDate\r\n                            ? moment(\r\n                                this.state.formData.expireDate,\r\n                                \"YYYY-MM-DD\"\r\n                              )\r\n                            : null\r\n                        }\r\n                      />\r\n                    </dd>\r\n                  </dl>\r\n                </Col>\r\n                <Col span=\"6\">\r\n                  <dl className=\"form_col\">\r\n                    <dt>Alarm Days</dt>\r\n                    <dd>\r\n                      <InputNumber\r\n                        style={{ width: \"100%\" }}\r\n                        size={this.state.inputSize}\r\n                        value={this.state.formData.alarmDays}\r\n                        onChange={(v) => {\r\n                          this.createInputMode(v, \"alarmDays\");\r\n                        }}\r\n                      />\r\n                    </dd>\r\n                  </dl>\r\n                </Col>\r\n                <Col span=\"6\">\r\n                  <dl className=\"form_col\">\r\n                    <dt>Start Time</dt>\r\n                    <dd>\r\n                      <DatePicker\r\n                        style={{ width: \"50%\" }}\r\n                        size={this.state.inputSize}\r\n                        onChange={(moment, dataStr) => {\r\n                          this.createDateMode(dataStr, \"startDateTemp\");\r\n                        }}\r\n                        value={\r\n                          this.state.formData.startDateTemp\r\n                            ? moment(\r\n                                this.state.formData.startDateTemp,\r\n                                \"YYYY-MM-DD\"\r\n                              )\r\n                            : null\r\n                        }\r\n                      />\r\n                      <TimePicker\r\n                        style={{ width: \"50%\" }}\r\n                        size={this.state.inputSize}\r\n                        format={\"HH:mm\"}\r\n                        onChange={(moment, dataStr) => {\r\n                          this.createDateMode(dataStr, \"startTimeTemp\");\r\n                        }}\r\n                        value={\r\n                          this.state.formData.startTimeTemp\r\n                            ? moment(this.state.formData.startTimeTemp, \"HH:mm\")\r\n                            : null\r\n                        }\r\n                      />\r\n                    </dd>\r\n                  </dl>\r\n                </Col>\r\n                <Col span=\"6\">\r\n                  <dl className=\"form_col\">\r\n                    <dt>Finish Time</dt>\r\n                    <dd>\r\n                      <DatePicker\r\n                        style={{ width: \"50%\" }}\r\n                        size={this.state.inputSize}\r\n                        onChange={(moment, dataStr) => {\r\n                          this.createDateMode(dataStr, \"finishDateTemp\");\r\n                        }}\r\n                        value={\r\n                          this.state.formData.finishDateTemp\r\n                            ? moment(\r\n                                this.state.formData.finishDateTemp,\r\n                                \"YYYY-MM-DD\"\r\n                              )\r\n                            : null\r\n                        }\r\n                      />\r\n                      <TimePicker\r\n                        style={{ width: \"50%\" }}\r\n                        format={\"HH:mm\"}\r\n                        size={this.state.inputSize}\r\n                        onChange={(moment, dataStr) => {\r\n                          this.createDateMode(dataStr, \"finishTimeTemp\");\r\n                        }}\r\n                        value={\r\n                          this.state.formData.finishTimeTemp\r\n                            ? moment(\r\n                                this.state.formData.finishTimeTemp,\r\n                                \"HH:mm\"\r\n                              )\r\n                            : null\r\n                        }\r\n                      />\r\n                    </dd>\r\n                  </dl>\r\n                </Col>\r\n              </Row>\r\n              <Row gutter={24}>\r\n                <Col span=\"12\">\r\n                  <dl className=\"form_col\">\r\n                    <dt>Status</dt>\r\n                    <dd>\r\n                      <Radio.Group\r\n                        value={this.state.formData.todoStatus}\r\n                        onChange={(e) => {\r\n                          this.createDateMode(e.target.value, \"todoStatus\");\r\n                        }}\r\n                      >\r\n                        <Radio.Button value={0}>Unfinish</Radio.Button>\r\n                        <Radio.Button value={1}>Finish</Radio.Button>\r\n                      </Radio.Group>\r\n                    </dd>\r\n                  </dl>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          ) : null}\r\n        </Row>\r\n\r\n        <Divider></Divider>\r\n        <div style={{ textAlign: \"right\" }}>\r\n          <Space>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<SaveOutlined />}\r\n              onClick={this.saveNote}\r\n            >\r\n              Save\r\n            </Button>\r\n\r\n            <Button icon={<RollbackOutlined />} onClick={this.props.closeFn}>\r\n              Cancel\r\n            </Button>\r\n          </Space>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport NoteApi from \"@/api/NoteApi\";\r\nimport { Row, Col } from \"antd\";\r\nimport DateUtils from '@/tools/DateUtils'\r\n\r\nclass NoteView extends React.Component {\r\n  state = {\r\n    data: {},\r\n\r\n    colSpan:{\r\n        xs:24,\r\n        sm:12,\r\n        md:8,\r\n        lg:6,\r\n        xl:4,\r\n        xxl:3\r\n    }\r\n\r\n  };\r\n\r\n  static propTypes = {\r\n    cgExampleId: PropTypes.string,\r\n    canEdit: PropTypes.bool\r\n\r\n  };\r\n\r\n  //指定默认标签属性值\r\n  static defaultProps = {\r\n    noteId: \"\"//sex默认值为男\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.noteId) {\r\n\r\n      NoteApi.queryNoteById(this.props.noteId).then((r) => {\r\n        const rst = r.result;\r\n        if(rst.userBirthday){\r\n            rst.userBirthday = DateUtils.formatToDate(rst.userBirthday)\r\n        }\r\n        this.setState({\r\n          data: r.result,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <Row gutter={24}>\r\n\r\n\r\n\r\n            <Col {...this.state.colSpan}>\r\n                <dl className=\"form_col\">\r\n                    <dt>PK</dt>\r\n                    <dd>\r\n                    {this.state.data.noteId}\r\n                    </dd>\r\n                </dl>\r\n              </Col>\r\n\r\n\r\n                            <Col {...this.state.colSpan}>\r\n                              <dl className=\"form_col\">\r\n                                    <dt>classify</dt>\r\n                                    <dd>\r\n                                      {this.state.data.classify}\r\n                                    </dd>\r\n                                </dl>\r\n                              </Col>\r\n                            <Col {...this.state.colSpan}>\r\n                              <dl className=\"form_col\">\r\n                                    <dt>title</dt>\r\n                                    <dd>\r\n                                      {this.state.data.title}\r\n                                    </dd>\r\n                                </dl>\r\n                              </Col>\r\n                            <Col {...this.state.colSpan}>\r\n                              <dl className=\"form_col\">\r\n                                    <dt>content</dt>\r\n                                    <dd>\r\n                                      {this.state.data.content}\r\n                                    </dd>\r\n                                </dl>\r\n                              </Col>\r\n                            <Col {...this.state.colSpan}>\r\n                              <dl className=\"form_col\">\r\n                                    <dt>expireDate</dt>\r\n                                    <dd>\r\n                                      {DateUtils.formatToDate(this.state.data.expireDate)}\r\n                                    </dd>\r\n                                </dl>\r\n                              </Col>\r\n                            <Col {...this.state.colSpan}>\r\n                              <dl className=\"form_col\">\r\n                                    <dt>alarmDays</dt>\r\n                                    <dd>\r\n                                      {this.state.data.alarmDays}\r\n                                    </dd>\r\n                                </dl>\r\n                              </Col>\r\n\r\n        </Row>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteView;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, fatrash } from \"@fortawesome/fontawesome-free-solid\";\r\n\r\nimport {\r\n  Menu,\r\n  Modal,\r\n  Table,\r\n  Button,\r\n  Input,\r\n  Alert,\r\n  InputNumber,\r\n  Dropdown,\r\n  Tag,\r\n  Select,\r\n  Space,\r\n  Checkbox,\r\n  Tooltip,\r\n  message,\r\n  Divider,\r\n  Pagination,\r\n  Popconfirm,\r\n  Row,\r\n  Col,\r\n  Popover,\r\n  Empty,\r\n  Rate,\r\n  Card,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport NoteApi from \"@/api/NoteApi\";\r\nimport DateUtils from \"@/tools/DateUtils\";\r\nimport NoteForm from \"./NoteForm\";\r\nimport NoteView from \"./NoteView\";\r\nimport moment from \"moment\";\r\nimport {\r\n  SearchOutlined,\r\n  UpOutlined,\r\n  ExclamationOutlined,\r\n  EyeOutlined,\r\n  CloseCircleFilled,\r\n  UserOutlined,\r\n  TableOutlined,\r\n  InfoOutlined,\r\n  WarningOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  UnorderedListOutlined,\r\n  DeleteOutlined,\r\n  DownOutlined,\r\n  PlusOutlined,\r\n  MoreOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst { Search } = Input;\r\nconst { Option } = Select;\r\nconst levelTags = [\r\n  { key: 5, value: \"紧急\", color: \"#f50\" },\r\n  { key: 4, value: \"重要\", color: \"#108ee9\" },\r\n  { key: 3, value: \"正常\", color: \"#87d068\" },\r\n  { key: 2, value: \"不紧急\", color: \"#2db7f5\" },\r\n  { key: 1, value: \"不重要\", color: \"#2db7f5\" },\r\n];\r\n\r\nclass NoteList extends React.Component {\r\n  state = {\r\n    advanceSearchVisible: false,\r\n    colSpan: 24,\r\n    viewType: \"DETAIL\",\r\n    // 查询条件\r\n    queryCondition: {\r\n      noteId: \"\",\r\n    },\r\n    // loading状态\r\n    tabLoading: false,\r\n    // 分页数据\r\n    tabPagination: {\r\n      current: 1, // 当前页\r\n      pageSize: 10, // 每页条目数\r\n      size: \"small\", // 尺寸\r\n      total: 0, // 总条目数\r\n      pageSizeOptions: [5, 10, 15, 50, 100], // 条目数选项\r\n      // 文本\r\n      showTotal: (total, range) => {\r\n        return `${total} items`;\r\n      },\r\n      showSizeChanger: true, // 是否展示修改条目数的下拉菜单\r\n      showQuickJumper: true, // 是否有直接跳转页数文本框\r\n    },\r\n    // 表格排序字段和顺序\r\n    tabSort: {\r\n      field: \"createTime\",\r\n      order: \"desc\",\r\n    },\r\n    // 表格数据\r\n    tabData: [],\r\n    selectedRowKeys: [],\r\n    // modal noteId\r\n    noteId: \"\",\r\n    // note编辑modal visible\r\n    formModalVisible: false,\r\n\r\n    // note view modal visible\r\n    viewModalVisible: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.queryTabData();\r\n  }\r\n\r\n  // 表格选择框改变\r\n  onSelectChange = (selectedRowKeys) => {\r\n    // console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n  // 清除已选择的选择框\r\n  clearSelectedKeys = () => {\r\n    this.setState({ selectedRowKeys: [] });\r\n  };\r\n\r\n  // detail视图中的checkbox checked属性初始化\r\n  checkedInit = (id) => {\r\n    return (\r\n      this.state.selectedRowKeys.find((item) => {\r\n        return item === id;\r\n      }) !== undefined\r\n    );\r\n  };\r\n  // detail视图中的checkbox checked事件\r\n  checkboxChange = (e) => {\r\n    if (e.target.checked) {\r\n      const f = this.state.selectedRowKeys.find((item) => {\r\n        return item === e.target.value;\r\n      });\r\n      if (f === undefined) {\r\n        this.setState({\r\n          selectedRowKeys: [...this.state.selectedRowKeys, e.target.value],\r\n        });\r\n      }\r\n    } else {\r\n      const filterResult = this.state.selectedRowKeys.filter((item) => {\r\n        return item !== e.target.value;\r\n      });\r\n      // console.log(filterResult);\r\n      this.setState({\r\n        selectedRowKeys: filterResult,\r\n      });\r\n    }\r\n  };\r\n\r\n  // 表格改变事件\r\n  tabChange = (pagination, filters, sorter) => {\r\n    // console.log(\"pagination\", pagination);\r\n    // console.log(\"filter\", filters);\r\n    // console.log(\"sorter\", sorter);\r\n\r\n    const tabPagination = {\r\n      ...this.state.tabPagination,\r\n      current: pagination.current, // 当前页\r\n      pageSize: pagination.pageSize, // 每页条目数\r\n    };\r\n\r\n    let tabSort = {};\r\n    if (sorter && sorter.order) {\r\n      tabSort = {\r\n        field: sorter.field,\r\n        order: sorter.order.replace(\"end\", \"\"),\r\n      };\r\n    } else {\r\n      tabSort = this.state.tabSort;\r\n    }\r\n\r\n    // 设置分页排序 并查询\r\n    this.setState(\r\n      {\r\n        tabPagination,\r\n        tabSort,\r\n      },\r\n      this.queryTabData\r\n    );\r\n  };\r\n\r\n  // 分页组件改变事件\r\n  tabPaginationChange = (page, pageSize) => {\r\n    const tabPagination = {\r\n      ...this.state.tabPagination,\r\n      current: page, // 当前页\r\n      pageSize: pageSize, // 每页条目数\r\n    };\r\n\r\n    this.setState(\r\n      {\r\n        tabPagination,\r\n      },\r\n      this.queryTabData\r\n    );\r\n  };\r\n  // 查询列表数据 clearPage:是否清除分页信息\r\n  queryTabData = (clearPage) => {\r\n    this.setState({\r\n      tabLoading: true,\r\n    });\r\n    let currentPage = this.state.tabPagination.current;\r\n    if (clearPage) {\r\n      // 清除当前页信息\r\n      currentPage = 1;\r\n      this.setState({\r\n        tabPagination: {\r\n          ...this.state.tabPagination,\r\n          current: 1,\r\n        },\r\n      });\r\n    } else {\r\n      currentPage = this.state.tabPagination.current;\r\n    }\r\n\r\n    let queryCondition = this.state.queryCondition;\r\n    queryCondition.pageNum = currentPage;\r\n    queryCondition.pageSize = this.state.tabPagination.pageSize;\r\n    //queryCondition.sortField = this.state.tabSort.field;\r\n    //queryCondition.sortOrder = this.state.tabSort.order;\r\n    NoteApi.queryNoteLikeByPage(queryCondition)\r\n      .then((r) => {\r\n        this.setState({\r\n          tabLoading: false,\r\n          tabData: r.result.list,\r\n          tabPagination: {\r\n            ...this.state.tabPagination,\r\n            total: r.result.total,\r\n          },\r\n        });\r\n      })\r\n      .catch((r) => {\r\n        message.error(\"error! \" + r);\r\n        this.setState({\r\n          tabLoading: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  // 操作按钮的下拉菜单\r\n  createOperate = (record) => {\r\n    const menu = (\r\n      <Menu>\r\n        <Menu.Item key=\"1\" icon={<DeleteOutlined />}>\r\n          <Popconfirm\r\n            placement=\"topLeft\"\r\n            title=\"Are you confirm delete this record\"\r\n            onConfirm={() => {\r\n              this.logicDeleteNote(record.noteId);\r\n            }}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            Delete\r\n          </Popconfirm>\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"2\"\r\n          onClick={() => {\r\n            // message.info(JSON.stringify(record));\r\n            this.openNoteViewModal(record.noteId);\r\n          }}\r\n          icon={<InfoOutlined />}\r\n        >\r\n          Data View\r\n        </Menu.Item>\r\n\r\n        {record.classify === \"Todo\" ? (\r\n          record.todoStatus === 0 ? (\r\n            <Menu.Item\r\n              key=\"3\"\r\n              onClick={() => {\r\n                // message.info(JSON.stringify(record));\r\n                this.toggleNoteState(record.noteId);\r\n              }}\r\n              icon={<CheckOutlined />}\r\n            >\r\n              Finish\r\n            </Menu.Item>\r\n          ) : (\r\n            <Menu.Item\r\n              key=\"4\"\r\n              onClick={() => {\r\n                // message.info(JSON.stringify(record));\r\n                this.toggleNoteState(record.noteId);\r\n              }}\r\n              icon={<CloseOutlined />}\r\n            >\r\n              Unfinish\r\n            </Menu.Item>\r\n          )\r\n        ) : null}\r\n      </Menu>\r\n    );\r\n    return (\r\n      <div>\r\n        <a\r\n          className=\"ant-dropdown-link\"\r\n          onClick={() => {\r\n            this.openNoteFormModal(record.noteId);\r\n          }}\r\n        >\r\n          Edit\r\n        </a>\r\n\r\n        <Dropdown overlay={menu}>\r\n          <Button type=\"link\">\r\n            <MoreOutlined />\r\n          </Button>\r\n        </Dropdown>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // keywords 搜索\r\n  onSearch = (keyWords) => {\r\n    this.setState(\r\n      {\r\n        queryCondition: {\r\n          ...this.state.queryCondition,\r\n          keyWords,\r\n        },\r\n      },\r\n      () => {\r\n        this.queryTabData(true);\r\n      }\r\n    );\r\n  };\r\n\r\n  // 重置搜索条件\r\n  resetSearch = () => {\r\n    this.setState(\r\n      {\r\n        queryCondition: {},\r\n      },\r\n      () => {\r\n        this.queryTabData(true);\r\n      }\r\n    );\r\n  };\r\n\r\n  keyWordsChange = (e) => {\r\n    this.setState({\r\n      queryCondition: {\r\n        ...this.state.queryCondition,\r\n        keyWords: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  clearKeyWords = () => {\r\n    this.setState(\r\n      {\r\n        queryCondition: {\r\n          // ...this.state.queryCondition,\r\n          keyWords: \"\",\r\n        },\r\n      },\r\n      () => {\r\n        this.queryTabData(true);\r\n      }\r\n    );\r\n  };\r\n\r\n  // 删除Note\r\n  logicDeleteNote = (noteId) => {\r\n    NoteApi.logicDeleteNote(noteId)\r\n      .then((r) => {\r\n        message.info(\"SUCCESS\");\r\n        this.queryTabData();\r\n      })\r\n      .catch((r) => {\r\n        message.info(\"FAILURE\");\r\n      });\r\n  };\r\n\r\n  // 批量删除Note\r\n  deleteLogicByNoteIds = () => {\r\n    if (this.state.selectedRowKeys.length > 0) {\r\n      NoteApi.deleteLogicByNoteIds(this.state.selectedRowKeys)\r\n        .then((r) => {\r\n          message.info(\"SUCCESS\");\r\n\r\n          this.setState({\r\n            selectedRowKeys: [],\r\n          });\r\n          this.queryTabData();\r\n        })\r\n        .catch((r) => {\r\n          message.error(\"FAILURE\");\r\n        });\r\n    } else {\r\n      message.error(\"Please Select A Item At Least\");\r\n    }\r\n  };\r\n\r\n  // 关闭 编辑 modal\r\n  closeNoteFormModal = () => {\r\n    this.setState({\r\n      formModalVisible: false,\r\n      noteId: \"\",\r\n    });\r\n  };\r\n  // 关闭 视图 modal\r\n  closeNoteViewModal = () => {\r\n    this.setState({\r\n      viewModalVisible: false,\r\n      noteId: \"\",\r\n    });\r\n  };\r\n  // 打开 编辑 modal\r\n  openNoteFormModal = (noteId) => {\r\n    if (noteId) {\r\n      this.setState({\r\n        noteId: noteId,\r\n        formModalVisible: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        formModalVisible: true,\r\n      });\r\n    }\r\n  };\r\n  // 打开 视图 modal\r\n  openNoteViewModal = (noteId) => {\r\n    this.setState({\r\n      noteId: noteId,\r\n      viewModalVisible: true,\r\n    });\r\n  };\r\n\r\n  // 切换视图类型\r\n  toggleViewType = () => {\r\n    if (this.state.viewType === \"LIST\") {\r\n      this.setState({\r\n        viewType: \"ITEM\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        viewType: \"LIST\",\r\n      });\r\n    }\r\n  };\r\n\r\n  // 高级搜索显示/隐藏 回调\r\n  handleAdvanceSearchVisibleChange = (b) => {\r\n    this.setState({\r\n      advanceSearchVisible: b,\r\n    });\r\n  };\r\n\r\n  // 双向绑定\r\n  createMode = (v, propName) => {\r\n    this.setState({\r\n      queryCondition: {\r\n        ...this.state.queryCondition,\r\n        [propName]: v,\r\n      },\r\n    });\r\n  };\r\n\r\n  search = () => {\r\n    NoteApi.search(this.state.queryCondition.keyWords, null).then((r) => {\r\n      this.setState({\r\n        tabData: r.result,\r\n      });\r\n    });\r\n  };\r\n\r\n  deleteIndex = () => {\r\n    NoteApi.deleteNodeIndex().then((r) => {\r\n      if (r.result) {\r\n        message.success(\"success! \");\r\n      } else {\r\n        message.error(r.msg);\r\n      }\r\n    });\r\n  };\r\n\r\n  createIndex = () => {\r\n    NoteApi.createNoteIndex().then((r) => {\r\n      if (r.result) {\r\n        message.success(\"success! \");\r\n      } else {\r\n        message.error(r.msg);\r\n      }\r\n    });\r\n  };\r\n\r\n  computColor = (item) => {\r\n    if (item.classify === \"Todo\") {\r\n      if (item.todoStatus === 0) {\r\n        if (item.todoLevel === 5) {\r\n          return \"block red_block\";\r\n        } else if (item.todoLevel === 4) {\r\n          return \"block yellow_block\";\r\n        } else if (item.todoLevel === 3) {\r\n          return \"block green_block\";\r\n        }\r\n      } else {\r\n        return \"block gray_block\";\r\n      }\r\n    }\r\n    return \"block\";\r\n  };\r\n\r\n  toggleNoteState = (id) => {\r\n    NoteApi.toggleNoteState(id).then(\r\n      (r) => {\r\n        console.log(r);\r\n        if (r.code !== \"-1\") {\r\n          message.success(\"SUCCESS\");\r\n          this.queryTabData();\r\n        } else {\r\n          message.error(r.msg);\r\n        }\r\n      },\r\n      (r) => {\r\n        message.error(r.msg);\r\n      }\r\n    );\r\n  };\r\n\r\n  // =============================== render  =============================== //\r\n  render() {\r\n    const levelTagsObj = {};\r\n    levelTags.forEach((item) => {\r\n      levelTagsObj[item.key] = item;\r\n    });\r\n\r\n    // 表格字段\r\n    const tabDataColumns = [\r\n      {\r\n        title: \"classify\",\r\n        dataIndex: \"classify\",\r\n        key: \"classify\",\r\n        sorter: true,\r\n      },\r\n      {\r\n        title: \"title\",\r\n        width: 500,\r\n        dataIndex: \"title\",\r\n        key: \"title\",\r\n        sorter: true,\r\n      },\r\n      // {\r\n      //   title: \"content\",\r\n      //   dataIndex: \"content\",\r\n      //   key: \"content\",\r\n      //   sorter: true,\r\n      // },\r\n      {\r\n        title: \"expireDate\",\r\n        dataIndex: \"expireDate\",\r\n        key: \"expireDate\",\r\n        sorter: true,\r\n        render: (text, record, index) => {\r\n          return DateUtils.formatToDate(text);\r\n        },\r\n      },\r\n      {\r\n        title: \"alarmDays\",\r\n        dataIndex: \"alarmDays\",\r\n        key: \"alarmDays\",\r\n        sorter: true,\r\n      },\r\n      {\r\n        title: \"Operate\",\r\n        key: \"operate\",\r\n        render: (text, record, index) => {\r\n          return this.createOperate(record);\r\n        },\r\n      },\r\n    ];\r\n\r\n    // 复选框\r\n    const { selectedRowKeys } = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      // 为避免远程分页会之前选择的数据\r\n      preserveSelectedRowKeys: true,\r\n      onChange: this.onSelectChange,\r\n      selections: [\r\n        {\r\n          key: \"clearAll\",\r\n          text: \"Clear All\",\r\n          onSelect: (changableRowKeys) => {\r\n            this.setState({ selectedRowKeys: [] });\r\n          },\r\n        },\r\n      ],\r\n    };\r\n\r\n    // ======================= 数据展示内容 =======================\r\n\r\n    const tableView = (\r\n      <div\r\n        style={{\r\n          background: \"#ecf0f5\",\r\n          borderRadius: 3,\r\n          padding: 8,\r\n        }}\r\n      >\r\n        <div className=\"block\">\r\n          <Table\r\n            rowSelection={rowSelection}\r\n            loading={this.state.tabLoading}\r\n            rowKey={(record) => record.noteId}\r\n            size={\"small\"}\r\n            columns={tabDataColumns}\r\n            dataSource={this.state.tabData}\r\n            pagination={this.state.tabPagination}\r\n            onChange={this.tabChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const listView = (\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"flex-start\",\r\n            background: \"#ecf0f5\",\r\n            borderRadius: 3,\r\n            padding: 8,\r\n          }}\r\n        >\r\n          {this.state.tabData.length > 0 ? (\r\n            this.state.tabData.map((item) => {\r\n              return (\r\n                <div\r\n                  style={{ flex: \"0 0 20%\", padding: \"0px 8px 8px 0px\" }}\r\n                  key={item.noteId}\r\n                >\r\n                  <div className={this.computColor(item)}>\r\n                    <div className=\"title\">{item.title}</div>\r\n\r\n                    <div style={{ height: 126 }}>\r\n                      <dl className=\"profile\">\r\n                        <dt>classify</dt>\r\n                        <dd>{item.classify}</dd>\r\n                      </dl>\r\n\r\n                      {/* <dl className=\"profile\">\r\n                      <dt>content</dt>\r\n                      <dd>{item.content}</dd>\r\n                    </dl> */}\r\n\r\n                      <dl className=\"profile\">\r\n                        <dt>Level</dt>\r\n                        <dd>\r\n                          <Rate\r\n                            disabled\r\n                            defaultValue={item.todoLevel}\r\n                            style={{ fontSize: 14 }}\r\n                          />\r\n                        </dd>\r\n                      </dl>\r\n\r\n                      {item.classify === \"Todo\" ? (\r\n                        <div>\r\n                          <dl className=\"profile\">\r\n                            <dt>Status</dt>\r\n                            <dd>\r\n                              {item.todoStatus === 1 ? (\r\n                                <CheckOutlined />\r\n                              ) : (\r\n                                <ExclamationOutlined\r\n                                  style={{ fontSize: 14, color: \"red\" }}\r\n                                />\r\n                              )}{\" \"}\r\n                            </dd>\r\n                          </dl>\r\n\r\n                          <dl className=\"profile\">\r\n                            <dt>expireDate</dt>\r\n                            <dd>{DateUtils.formatToDate(item.expireDate)}</dd>\r\n                          </dl>\r\n\r\n                          <dl className=\"profile\">\r\n                            <dt>alarmDays</dt>\r\n                            <dd>{item.alarmDays}</dd>\r\n                          </dl>\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"divider\"></div>\r\n                    <div style={{ display: \"flex\" }}>\r\n                      <div style={{ flex: \"1 1 auto\", paddingTop: 4 }}>\r\n                        <Checkbox\r\n                          checked={this.checkedInit(item.noteId)}\r\n                          value={item.noteId}\r\n                          onChange={this.checkboxChange}\r\n                        />\r\n                      </div>\r\n                      <div style={{ flex: \"0 0 75px\" }}>\r\n                        {this.createOperate(item)}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <div\r\n              style={{\r\n                padding: 8,\r\n                textAlign: \"center\",\r\n                background: \"#fff\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div style={{ textAlign: \"right\" }}>\r\n          <Pagination\r\n            style={{ marginTop: 8 }}\r\n            {...this.state.tabPagination}\r\n            onChange={this.tabPaginationChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const dataView = this.state.viewType === \"LIST\" ? tableView : listView;\r\n\r\n    // ============== 高级搜索面板 =============== //\r\n    const advanceSearch = (\r\n      <div style={{ width: 200 }}>\r\n        <Row gutter={24}>\r\n          <Col {...this.state.colSpan}>\r\n            <dl className=\"form_col\">\r\n              <dt>ID</dt>\r\n              <dd>\r\n                <Input\r\n                  size={this.state.inputSize}\r\n                  value={this.state.queryCondition.noteId}\r\n                  onChange={(e) => {\r\n                    this.createMode(e.target.value, \"noteId\");\r\n                  }}\r\n                />\r\n              </dd>\r\n            </dl>\r\n          </Col>\r\n\r\n          <Col {...this.state.colSpan}>\r\n            <dl className=\"form_col\">\r\n              <dt>classify</dt>\r\n              <dd>\r\n                <Input\r\n                  size={this.state.inputSize}\r\n                  value={this.state.queryCondition.classify}\r\n                  onChange={(e) => {\r\n                    this.createMode(e.target.value, \"classify\");\r\n                  }}\r\n                />\r\n              </dd>\r\n            </dl>\r\n          </Col>\r\n\r\n          <Col {...this.state.colSpan}>\r\n            <dl className=\"form_col\">\r\n              <dt>title</dt>\r\n              <dd>\r\n                <Input\r\n                  size={this.state.inputSize}\r\n                  value={this.state.queryCondition.title}\r\n                  onChange={(e) => {\r\n                    this.createMode(e.target.value, \"title\");\r\n                  }}\r\n                />\r\n              </dd>\r\n            </dl>\r\n          </Col>\r\n\r\n          <Col {...this.state.colSpan}>\r\n            <dl className=\"form_col\">\r\n              <dt>content</dt>\r\n              <dd>\r\n                <Input\r\n                  size={this.state.inputSize}\r\n                  value={this.state.queryCondition.content}\r\n                  onChange={(e) => {\r\n                    this.createMode(e.target.value, \"content\");\r\n                  }}\r\n                />\r\n              </dd>\r\n            </dl>\r\n          </Col>\r\n\r\n          <Col {...this.state.colSpan}>\r\n            <dl className=\"form_col\">\r\n              <dt>expireDate</dt>\r\n              <dd>\r\n                <DatePicker\r\n                  size={this.state.inputSize}\r\n                  onChange={(moment, dataStr) => {\r\n                    this.createMode(dataStr, \"expireDate\");\r\n                  }}\r\n                  value={\r\n                    this.state.queryCondition.expireDate\r\n                      ? moment(\r\n                          this.state.queryCondition.expireDate,\r\n                          \"YYYY-MM-DD\"\r\n                        )\r\n                      : null\r\n                  }\r\n                />\r\n              </dd>\r\n            </dl>\r\n          </Col>\r\n\r\n          <Col {...this.state.colSpan}>\r\n            <dl className=\"form_col\">\r\n              <dt>alarmDays</dt>\r\n              <dd>\r\n                <Input\r\n                  size={this.state.inputSize}\r\n                  value={this.state.queryCondition.alarmDays}\r\n                  onChange={(e) => {\r\n                    this.createMode(e.target.value, \"alarmDays\");\r\n                  }}\r\n                />\r\n              </dd>\r\n            </dl>\r\n          </Col>\r\n        </Row>\r\n        <Divider style={{ margin: \"8px 0px\" }}></Divider>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <Button\r\n            style={{ marginRight: 8 }}\r\n            onClick={() => {\r\n              this.queryTabData(true);\r\n            }}\r\n            icon={<SearchOutlined />}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={this.resetSearch}>Reset</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    // ============== 组件返回内容 =============== //\r\n    return (\r\n      <div>\r\n        {/* {JSON.stringify(this.state.selectedRowKeys)} */}\r\n\r\n        <Row gutter={24}>\r\n          <Col span={12}>\r\n            <div\r\n              style={{ paddingTop: 4, width: 56, cursor: \"pointer\" }}\r\n              onClick={this.toggleViewType}\r\n            >\r\n              {this.state.viewType === \"ITEM\" ? (\r\n                <span>\r\n                  <TableOutlined style={{ fontSize: 16, color: \"#1890ff\" }} />\r\n                  <Divider type=\"vertical\" />\r\n                  <UnorderedListOutlined style={{ fontSize: 14 }} />\r\n                </span>\r\n              ) : (\r\n                <span>\r\n                  <TableOutlined style={{ fontSize: 14 }} />\r\n                  <Divider type=\"vertical\" />\r\n                  <UnorderedListOutlined\r\n                    style={{ fontSize: 16, color: \"#1890ff\" }}\r\n                  />\r\n                </span>\r\n              )}\r\n            </div>\r\n          </Col>\r\n          <Col span={12}>\r\n            {/* ======================= 搜索 ======================= */}\r\n            <div className=\"tabTool\">\r\n              <Select\r\n                defaultValue={0}\r\n                style={{ marginRight: 8, width: 120, textAlign: \"left\" }}\r\n                onChange={(v) => {\r\n                  this.createMode(v, \"todoStatus\");\r\n                  this.queryTabData(true);\r\n                }}\r\n              >\r\n                <Option value={0}>Finish</Option>\r\n                <Option value={1}>UnFinish</Option>\r\n              </Select>\r\n\r\n              <Search\r\n                placeholder=\"Key Word\"\r\n                style={{ width: 200, marginRight: 8 }}\r\n                onSearch={this.onSearch}\r\n                onChange={this.keyWordsChange}\r\n                suffix={\r\n                  <CloseCircleFilled\r\n                    onClick={this.clearKeyWords}\r\n                    style={{ cursor: \"pointer\", fontSize: 12, color: \"#aaa\" }}\r\n                  />\r\n                }\r\n                value={this.state.queryCondition.keyWords}\r\n                enterButton\r\n              />\r\n\r\n              <Dropdown.Button\r\n                onClick={this.search}\r\n                overlay={\r\n                  <Menu>\r\n                    <Menu.Item\r\n                      key=\"1\"\r\n                      onClick={this.createIndex}\r\n                      icon={<UserOutlined />}\r\n                    >\r\n                      Create Note Index\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                      key=\"2\"\r\n                      onClick={this.deleteIndex}\r\n                      icon={<UserOutlined />}\r\n                    >\r\n                      Delete Note Index\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"3\" icon={<UserOutlined />}>\r\n                      Reindex Note\r\n                    </Menu.Item>\r\n                  </Menu>\r\n                }\r\n              >\r\n                Full Search\r\n              </Dropdown.Button>\r\n\r\n              <Popover\r\n                content={advanceSearch}\r\n                trigger=\"click\"\r\n                title=\"Advance Search\"\r\n                visible={this.state.advanceSearchVisible}\r\n                onVisibleChange={this.handleAdvanceSearchVisibleChange}\r\n              >\r\n                <Button\r\n                  type=\"link\"\r\n                  icon={\r\n                    this.state.advanceSearchVisible ? (\r\n                      <UpOutlined />\r\n                    ) : (\r\n                      <DownOutlined />\r\n                    )\r\n                  }\r\n                >\r\n                  Advance\r\n                </Button>\r\n              </Popover>\r\n\r\n              <Tooltip title=\"Create\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  icon={<PlusOutlined />}\r\n                  onClick={() => {\r\n                    this.openNoteFormModal();\r\n                  }}\r\n                ></Button>\r\n              </Tooltip>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* ======================= 复选框操作按钮 ======================= */}\r\n\r\n        {this.state.selectedRowKeys && this.state.selectedRowKeys.length > 0 ? (\r\n          <Alert\r\n            type=\"info\"\r\n            message={\r\n              <div style={{ display: \"flex\" }}>\r\n                <div style={{ flex: \"1 1 auto\" }}>\r\n                  Selected {this.state.selectedRowKeys.length} items{\" \"}\r\n                  <Tooltip title=\"Clear Selected\">\r\n                    <FontAwesomeIcon\r\n                      icon=\"times\"\r\n                      style={{\r\n                        fontSize: 14,\r\n                        paddingTop: 2,\r\n                        marginRight: 8,\r\n                        color: \"#999999\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={this.clearSelectedKeys}\r\n                    />\r\n                  </Tooltip>\r\n                </div>\r\n                <div style={{ flex: \"0 0 50\" }}>\r\n                  <Tooltip title=\"Delete Selected\">\r\n                    <Popconfirm\r\n                      placement=\"topLeft\"\r\n                      title=\"Are you confirm delete this record\"\r\n                      onConfirm={this.deleteLogicByNoteIds}\r\n                      okText=\"Yes\"\r\n                      cancelText=\"No\"\r\n                    >\r\n                      <Button size=\"small\" icon={<DeleteOutlined />} />\r\n                    </Popconfirm>\r\n                  </Tooltip>\r\n                </div>\r\n              </div>\r\n            }\r\n          ></Alert>\r\n        ) : null}\r\n\r\n        {dataView}\r\n\r\n        {/* ======================= modal窗口 ======================= */}\r\n        <Modal\r\n          title=\"Note Information\"\r\n          visible={this.state.formModalVisible}\r\n          footer={null}\r\n          width={\"80%\"}\r\n          style={{ top: 24 }}\r\n          destroyOnClose={true}\r\n          onCancel={this.closeNoteFormModal}\r\n          maskClosable={false}\r\n        >\r\n          <NoteForm\r\n            noteId={this.state.noteId}\r\n            canEdit={true}\r\n            closeFn={this.closeNoteFormModal}\r\n            cb={this.queryTabData}\r\n          ></NoteForm>\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"Edit Note\"\r\n          visible={this.state.viewModalVisible}\r\n          width={\"80%\"}\r\n          destroyOnClose={true}\r\n          onCancel={this.closeNoteViewModal}\r\n          maskClosable={false}\r\n        >\r\n          <NoteView\r\n            noteId={this.state.noteId}\r\n            canEdit={true}\r\n            closeFn={this.closeNoteViewModal}\r\n          ></NoteView>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NoteList;\r\n","import React from 'react'\r\nimport {\r\n    Input\r\n} from 'antd'\r\nconst { Search } = Input;\r\nclass Knowledge extends React.Component {\r\n  state = {\r\n    keyWord:'',\r\n    dataList:[]\r\n  }\r\n  onSearch = (keyWord) => {\r\n    this.setState({keyWord});\r\n    alert(keyWord)\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{height:'800px',display:'flex',flexDirection:'column'}}>\r\n          <div style={{border:\"1px solid red\",flex:'0 0 40%',display:'flex',flexDirection:'column'}}>\r\n              <div style={{flex:'1 1 auto'}}>\r\n\r\n              </div>\r\n              <div style={{flex:'0 0 80px'}}>\r\n                <Search placeholder=\"input search text\" onSearch={this.onSearch} enterButton />\r\n              </div>\r\n          </div>\r\n          <div  style={{border:\"1px solid green\",flex:'1 1 auto'}}>\r\n              111\r\n          </div>\r\n          \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Knowledge","import React from \"react\";\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu, Breadcrumb } from \"antd\";\r\nimport {\r\n  DesktopOutlined,\r\n  PieChartOutlined,\r\n  FileOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n  SlidersOutlined,\r\n  HighlightOutlined,\r\n  SnippetsOutlined,\r\n  OrderedListOutlined,\r\n  UnorderedListOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport NoteList from \"@/components/NoteList\";\r\nimport Knowledge from '@/components/Knowledge'\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nclass IndexLayout extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    // console.log(collapsed);\r\n    this.setState({ collapsed });\r\n  };\r\n\r\n  render() {\r\n    const { collapsed } = this.state;\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\r\n          <div className=\"logo\">\r\n            {/* Note */}\r\n            ____\r\n          </div>\r\n          <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\r\n            <Menu.Item key=\"noteList\" icon={<SlidersOutlined />}>\r\n              <Link to=\"/noteList\">Note </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"knowledge\" icon={<SlidersOutlined />}>\r\n              <Link to=\"/Knowledge\">Knowledge </Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout className=\"site-layout\">\r\n          <Content style={{ margin: \"8px 8px 0px\" }}>\r\n            <div\r\n              className=\"site-layout-background\"\r\n              style={{ padding: \"8px 8px\", minHeight: 360, background: \"#fff\" }}\r\n            >\r\n              <Route path=\"/noteList\" exact component={NoteList}></Route>\r\n              <Route path=\"/Knowledge\" exact component={Knowledge}></Route>\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\" }}>\r\n            Code Generator Example\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IndexLayout;\r\n","import logo from './logo.svg';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport IndexLayout from '@/layout/IndexLayout'\nfunction App() {\n  return (\n    <BrowserRouter>\n    <IndexLayout></IndexLayout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@/assets/css/antd.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}