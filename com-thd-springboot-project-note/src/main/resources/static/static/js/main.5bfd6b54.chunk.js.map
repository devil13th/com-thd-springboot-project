{"version":3,"sources":["logo.svg","axios.js","api/NoteApi.js","tools/DateUtils.js","components/MdEditor.jsx","components/Mde.jsx","components/NoteForm.jsx","components/NoteView.jsx","components/NoteCalendar.jsx","components/NoteList.jsx","layout/IndexLayout.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","interceptors","response","use","data","code","message","error","msg","Error","Promise","reject","context","process","uploadUrl","queryNoteNoPage","method","url","params","queryNoteLikeByPage","addNote","queryNoteById","id","updateNote","logicDeleteNote","deleteLogicByNoteIds","idList","search","keyWords","classify","deleteNodeIndex","createNoteIndex","toggleNoteState","finishTodo","finishTime","noteId","shijianchuo","add0","m","time","Date","y","getFullYear","getMonth","d","getDate","getHours","getMinutes","getSeconds","MdEditor","state","markdown","Math","random","handleChange","value","setState","props","change","style","zIndex","selectedTab","this","content","options","spellChecker","toolbar","onChange","React","Component","Dragger","Upload","TabPane","Tabs","CheckableTag","Tag","NoteForm","formData","todoLevel","todoStatus","inputSize","formStatus","colSpan","createInputMode","v","propName","createDateMode","createInput","size","e","target","selectTag","saveNote","_","cloneDeep","startTimeTemp","startTime","startDateTemp","finishTimeTemp","finishDateTemp","NoteApi","then","r","closeFn","cb","info","catch","mdChange","setClassify","todoLevelChange","tag","checked","key","setStartTimeCurrent","mmt","moment","format","setFinishTimeCurrent","addExpireDate","expireDate","add","subExpireDate","pageInit","rst","result","split","alarmDays","name","multiple","action","status","file","console","log","fileList","success","operations","count","tooltips","ct","gutter","span","className","title","placeholder","defaultActiveKey","tabBarExtraContent","tab","InboxOutlined","display","marginBottom","background","borderRadius","padding","icon","fontSize","paddingTop","marginRight","color","alignItems","LeftOutlined","flex","cursor","onClick","marginLeft","dataStr","RightOutlined","width","ClockCircleOutlined","checkedChildren","unCheckedChildren","block","type","SaveOutlined","defaultProps","canEdit","NoteView","xs","sm","md","lg","xl","xxl","userBirthday","DateUtils","NoteCalendar","spinning","selectedValue","queryCondition","headerRender","onMonthChange","picker","setQueryCondition","condition","startTimeFrom","startTimeTo","finishTimeFrom","finishTimeTo","queryData","current","expireDateFrom","nextMonth","expireDateTo","list","onSelect","onPanelChange","mode","getListData","dateStr","filter","item","dateCellRender","listData","listStyleType","paddingLeft","map","computColor","text","computContent","BookOutlined","CalendarOutlined","fix","CheckOutlined","ExclamationOutlined","disabled","defaultValue","dataChange","alert","tip","monthCellRender","num","month","getMonthData","Search","Input","Option","Select","levelTags","NoteList","calendarQueryCondition","finishTimeModalVisible","advanceSearchVisible","viewType","tabLoading","tabPagination","pageSize","total","pageSizeOptions","showTotal","range","showSizeChanger","showQuickJumper","tabSort","field","order","tabData","selectedRowKeys","calendarComponent","createRef","onSelectChange","clearSelectedKeys","checkedInit","undefined","find","checkboxChange","filterResult","tabChange","pagination","filters","sorter","replace","queryTabData","tabPaginationChange","page","calendarSearch","clearPage","currentPage","pageNum","createOperate","record","menu","Item","DeleteOutlined","placement","onConfirm","okText","cancelText","openNoteViewModal","InfoOutlined","openFinishTimeModal","CloseOutlined","openNoteFormModal","overlay","MoreOutlined","onSearch","resetSearch","keyWordsChange","clearKeyWords","length","closeNoteFormModal","formModalVisible","closeNoteViewModal","viewModalVisible","toggleViewType","handleAdvanceSearchVisibleChange","b","createMode","isQueryData","deleteIndex","createIndex","finishTimeStr","closeFinishTimeModal","levelTagsObj","forEach","tabDataColumns","dataIndex","render","index","textAlign","rowSelection","preserveSelectedRowKeys","selections","changableRowKeys","tableView","loading","rowKey","columns","dataSource","calendarView","ref","listView","flexDirection","flexWrap","justifyContent","height","image","Empty","PRESENTED_IMAGE_SIMPLE","marginTop","advanceSearch","margin","SearchOutlined","statusSelect","allowClear","TableOutlined","UnorderedListOutlined","addonBefore","suffix","CloseCircleFilled","enterButton","trigger","visible","onVisibleChange","UpOutlined","DownOutlined","PlusOutlined","footer","top","destroyOnClose","onCancel","maskClosable","onOk","Content","Layout","Header","Footer","IndexLayout","Sider","Menu","SubMenu","collapsed","onCollapse","minHeight","path","exact","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bfd6b54.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from 'axios'\r\nimport { message } from 'antd';\r\n\r\naxios.interceptors.response.use(function (response) {\r\n\r\n    // console.log('--res success--',response)\r\n    // 对响应数据做点什么\r\n\r\n    if(response.data.code === '-1'){\r\n      message.error(response.data.msg)\r\n      throw new Error(response.data.msg)\r\n    }\r\n    return response.data;\r\n   \r\n    \r\n  }, function (error) {\r\n    // console.log('--req error--',error)\r\n\r\n    message.error('Error:'+ error);\r\n    // 对响应错误做点什么\r\n    return Promise.reject(error);\r\n  });\r\n\r\n\r\nexport default axios","import axios from '@/axios';\r\n\r\nconst context = process.env.REACT_APP_CONTEXT\r\nexport default {\r\n  uploadUrl:`${context}/note/singleUpload`,\r\n  queryNoteNoPage:function(data){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/note/queryNoteNoPage`,\r\n      params:data\r\n    });\r\n  },\r\n  queryNoteLikeByPage:function(data){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/note/queryNoteLikeByPage`,\r\n      params:data\r\n    });\r\n  },\r\n  addNote:function(data){\r\n    return axios({\r\n      method: 'post',\r\n      url: `${context}/note/addNote`,\r\n      data\r\n    });\r\n  },\r\n  queryNoteById:function(id){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/note/queryNoteById/${id}`\r\n    });\r\n  },\r\n  updateNote:function(data){\r\n    return axios({\r\n      method: 'post',\r\n      url: `${context}/note/updateNote`,\r\n      data\r\n    });\r\n  },\r\n  logicDeleteNote:function(id){\r\n    return axios({\r\n      method: 'delete',\r\n      url: `${context}/note/logicDeleteNote/${id}`\r\n    });\r\n  },\r\n  deleteLogicByNoteIds:function(idList){\r\n    return axios({\r\n      method: 'delete',\r\n      url: `${context}/note/deleteLogicByNoteIds`,\r\n      data:idList\r\n    });\r\n  },\r\n  search:function(keyWords,classify){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/note/search?keyWords=${keyWords}`\r\n    });\r\n  },\r\n  deleteNodeIndex:function(){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/note/deleteNodeIndex`\r\n    });\r\n  },\r\n  createNoteIndex:function(){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/note/createNoteIndex`\r\n    });\r\n  },\r\n  toggleNoteState:function(id){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/note/toggleNoteState/${id}`\r\n    });\r\n    \r\n  },\r\n  finishTodo:function(id,finishTime){\r\n    return axios({\r\n      method: 'post',\r\n      url: `${context}/note/finishTodo`,\r\n      data:{\r\n        noteId:id,\r\n        finishTime\r\n      }\r\n    });\r\n  }\r\n  \r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n}","export default {\r\n  formatToDate: function (shijianchuo) {\r\n    if (shijianchuo) {\r\n      let add0 = function (m) {\r\n        return m < 10 ? \"0\" + m : m;\r\n      };\r\n\r\n      //shijianchuo是整数，否则要parseInt转换\r\n      var time = new Date(shijianchuo);\r\n      var y = time.getFullYear();\r\n      var m = time.getMonth() + 1;\r\n      var d = time.getDate();\r\n      var h = time.getHours();\r\n      var mm = time.getMinutes();\r\n      var s = time.getSeconds();\r\n      return y + \"-\" + add0(m) + \"-\" + add0(d);\r\n    } else {\r\n      return \"\";\r\n    }\r\n  },\r\n  formatToTime: function (shijianchuo) {\r\n    if (shijianchuo) {\r\n      let add0 = function (m) {\r\n        return m < 10 ? \"0\" + m : m;\r\n      };\r\n\r\n      //shijianchuo是整数，否则要parseInt转换\r\n      var time = new Date(shijianchuo);\r\n      var y = time.getFullYear();\r\n      var m = time.getMonth() + 1;\r\n      var d = time.getDate();\r\n      var h = time.getHours();\r\n      var mm = time.getMinutes();\r\n      var s = time.getSeconds();\r\n      return (\r\n        y +\r\n        \"-\" +\r\n        add0(m) +\r\n        \"-\" +\r\n        add0(d) +\r\n        \" \" +\r\n        add0(h) +\r\n        \":\" +\r\n        add0(mm) +\r\n        \":\" +\r\n        add0(s)\r\n      );\r\n    } else {\r\n      return \"\";\r\n    }\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport SimpleMDE from \"react-simplemde-editor\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"easymde/dist/easymde.min.css\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\nclass MdEditor extends React.Component {\r\n  state = {\r\n    markdown: `aaaaa`,\r\n    id: `editor_${Math.random()}`,\r\n  };\r\n \r\n  static propTypes = {\r\n    content: PropTypes.string,\r\n    change: PropTypes.func,\r\n  };\r\n\r\n  handleChange = (value) => {\r\n    this.setState({\r\n      markdown: value,\r\n    });\r\n    this.props.change(value);\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SimpleMDE\r\n          style={{ zIndex: 11 }}\r\n          selectedTab=\"preview\"\r\n          id={this.state.id}\r\n          value={this.props.content}\r\n          options={{\r\n            spellChecker: false,\r\n            toolbar: [\r\n              \"bold\",\r\n              \"italic\",\r\n              \"heading\",\r\n              \"|\",\r\n              \"quote\",\r\n              \"code\",\r\n              \"table\",\r\n              \"horizontal-rule\",\r\n              \"unordered-list\",\r\n              \"ordered-list\",\r\n              \"|\",\r\n              \"link\",\r\n              \"image\",\r\n              \"|\",\r\n              \"preview\",\r\n              \"side-by-side\",\r\n              \"fullscreen\",\r\n              \"|\",\r\n              \"guide\",\r\n            ],\r\n          }}\r\n          onChange={this.handleChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MdEditor;\r\n","import React from \"react\";\r\nimport ReactMde from \"react-mde\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\r\n\r\nclass Mde extends React.Component {\r\n  state = {\r\n    markdown: `aaaaa`,\r\n    id: `editor_${Math.random()}`,\r\n    value: \"\",\r\n    selectedTab:'write'\r\n  };\r\n\r\n  static propTypes = {\r\n    content: PropTypes.string,\r\n    change: PropTypes.func,\r\n  };\r\n\r\n  setValue = (value) => {\r\n    this.setState({\r\n      value\r\n    })\r\n  }\r\n\r\n  setSelectedTab = (selectedTab) => {\r\n    this.setState({\r\n      selectedTab\r\n    })\r\n  }\r\n\r\n  handleChange = (value) => {\r\n    this.setState({\r\n      markdown: value,\r\n    });\r\n    this.props.change(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.selectedTab}\r\n        <ReactMde\r\n          value={this.props.content}\r\n          onChange={this.handleChange}\r\n          selectedTab={this.state.selectedTab}\r\n          onTabChange={this.setSelectedTab}\r\n          generateMarkdownPreview={(markdown) =>\r\n            Promise.resolve(<ReactMarkdown source={markdown} />)\r\n          }\r\n          childProps={{\r\n            writeButton: {\r\n              tabIndex: -1,\r\n            },\r\n          }}\r\n         \r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Mde;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport NoteApi from \"@/api/NoteApi\";\r\nimport MdEditor from \"./MdEditor\";\r\nimport Mde from \"./Mde\";\r\nimport _ from 'lodash'\r\nimport {\r\n  message,\r\n  Input,\r\n  Row,\r\n  Switch,\r\n  Tabs,\r\n  Col,\r\n  DatePicker,\r\n  TimePicker,\r\n  Space,\r\n  Button,\r\n  Radio,\r\n  Tag,\r\n  InputNumber,\r\n  Divider,\r\n  Upload,\r\n  Rate,\r\n} from \"antd\";\r\nimport {\r\n  SaveOutlined,\r\n  RollbackOutlined,\r\n  InboxOutlined,\r\n  ClockCircleOutlined,\r\n  RightOutlined,\r\n  LeftOutlined,\r\n} from \"@ant-design/icons\";\r\nimport DateUtils from \"@/tools/DateUtils\";\r\nimport moment from \"moment\";\r\nconst { Dragger } = Upload;\r\nconst { TabPane } = Tabs;\r\nconst { CheckableTag } = Tag;\r\nconst levelTags = [\r\n  { key: 5, value: \"紧急\", color: \"#cf1322\" },\r\n  { key: 4, value: \"重要\", color: \"#d48806\" },\r\n  { key: 3, value: \"正常\", color: \"#87d068\" },\r\n  { key: 2, value: \"不紧急\", color: \"#2db7f5\" },\r\n  { key: 1, value: \"不重要\", color: \"#2db7f5\" },\r\n];\r\nclass NoteForm extends React.Component {\r\n  state = {\r\n    formData: { classify: \"Todo\", content: \"\", todoLevel: 3, todoStatus: 0 },\r\n    inputSize: \"normal\",\r\n    formStatus: \"CREATE\",\r\n    // colSpan: {\r\n    //   xs: 24,\r\n    //   sm: 12,\r\n    //   md: 8,\r\n    //   lg: 6,\r\n    //   xl: 4,\r\n    //   xxl: 3,\r\n    // },\r\n    colSpan: 24,\r\n  };\r\n\r\n  static propTypes = {\r\n    noteId: PropTypes.string,\r\n    canEdit: PropTypes.bool,\r\n    closeFn: PropTypes.func,\r\n    cb: PropTypes.func,\r\n  };\r\n\r\n  //指定默认标签属性值\r\n  static defaultProps = {\r\n    noteId: \"\", //sex默认值为男\r\n    canEdit: true, //age默认值为18\r\n    closeFn: () => { },\r\n  };\r\n  componentDidMount() {\r\n    this.pageInit();\r\n  }\r\n\r\n  createInputMode = (v, propName) => {\r\n    this.setState({\r\n      formData: {\r\n        ...this.state.formData,\r\n        [propName]: v,\r\n      },\r\n    });\r\n  };\r\n\r\n  createDateMode = (v, propName) => {\r\n    this.setState({\r\n      formData: {\r\n        ...this.state.formData,\r\n        [propName]: v,\r\n      },\r\n    });\r\n  };\r\n\r\n  createInput = (propName) => {\r\n    return (\r\n      <Input\r\n        size={this.state.inputSize}\r\n        value={this.state.formData[propName]}\r\n        onChange={(e) => {\r\n          this.createInputMode(e.target.value, propName);\r\n        }}\r\n      />\r\n    );\r\n  };\r\n  selectTag = (classify) => {\r\n    return () => {\r\n      this.setState({\r\n        formData: { ...this.state.formData, classify },\r\n      });\r\n    };\r\n  };\r\n  saveNote = () => {\r\n    const data = _.cloneDeep(this.state.formData);\r\n\r\n    // if(data.todoStatus === true){\r\n    //   data.todoStatus = 1\r\n    // }else{\r\n    //   data.todoStatus = 0\r\n    // }\r\n    if (data.startTimeTemp) {\r\n      data.startTime = data.startDateTemp + \" \" + data.startTimeTemp;\r\n    }\r\n    if (data.finishTimeTemp) {\r\n      data.finishTime = data.finishDateTemp + \" \" + data.finishTimeTemp;\r\n    }\r\n\r\n    if (this.state.formStatus === \"CREATE\") {\r\n      NoteApi.addNote(data)\r\n        .then((r) => {\r\n          // console.log(r);\r\n          this.props.closeFn();\r\n          if (this.props.cb) {\r\n            this.props.cb();\r\n          }\r\n          message.info(\"SUCCESS\");\r\n        })\r\n        .catch((r) => { });\r\n    } else {\r\n      NoteApi.updateNote(data)\r\n        .then((r) => {\r\n          // console.log(r);\r\n          this.props.closeFn();\r\n          if (this.props.cb) {\r\n            this.props.cb();\r\n          }\r\n          message.info(\"SUCCESS\");\r\n        })\r\n        .catch((r) => { });\r\n    }\r\n  };\r\n\r\n  mdChange = (content) => {\r\n    this.setState({\r\n      formData: { ...this.state.formData, content },\r\n    });\r\n  };\r\n\r\n  setClassify = (e) => {\r\n    this.setState({\r\n      formData: { ...this.state.formData, classify: e.target.value },\r\n    });\r\n  };\r\n\r\n  todoLevelChange = (tag, checked) => {\r\n    this.setState({ formData: { ...this.state.formData, todoLevel: tag.key } });\r\n  };\r\n\r\n  setStartTimeCurrent = () => {\r\n    const mmt = moment();\r\n    this.setState({\r\n      formData: {\r\n        ...this.state.formData,\r\n        startDateTemp: mmt.format('YYYY-MM-DD'),\r\n        startTimeTemp: mmt.format('HH:mm'),\r\n      },\r\n    });\r\n  };\r\n\r\n  setFinishTimeCurrent = () => {\r\n    const mmt = moment();\r\n    this.setState({\r\n      formData: {\r\n        ...this.state.formData,\r\n        finishDateTemp: mmt.format('YYYY-MM-DD'),\r\n        finishTimeTemp: mmt.format('HH:mm'),\r\n      },\r\n    });\r\n  };\r\n  addExpireDate = () => {\r\n    let mmt = this.state.formData.expireDate;\r\n    if (!mmt) {\r\n      mmt = moment();\r\n    }\r\n\r\n    this.setState({\r\n      formData: {\r\n        ...this.state.formData,\r\n        expireDate: mmt.add(1, \"days\"),\r\n      },\r\n    });\r\n  };\r\n  subExpireDate = () => {\r\n    let mmt = this.state.formData.expireDate;\r\n    if (!mmt) {\r\n      mmt = moment();\r\n    }\r\n    this.setState({\r\n      formData: {\r\n        ...this.state.formData,\r\n        expireDate: mmt.add(-1, \"days\"),\r\n      },\r\n    });\r\n  };\r\n \r\n  // 页面初始化\r\n  pageInit = () => {\r\n    if (this.props.noteId) {\r\n      // init edit data\r\n      this.setState({\r\n        formStatus: \"EDIT\",\r\n      });\r\n\r\n      NoteApi.queryNoteById(this.props.noteId).then((r) => {\r\n        const rst = r.result;\r\n        if (rst.startTime) {\r\n          rst.startDateTemp = rst.startTime.split(\" \")[0];\r\n          rst.startTimeTemp = rst.startTime.split(\" \")[1];\r\n        }\r\n        if (rst.finishTime) {\r\n          rst.finishDateTemp = rst.finishTime.split(\" \")[0];\r\n          rst.finishTimeTemp = rst.finishTime.split(\" \")[1];\r\n        }\r\n        // if (rst.todoStatus === 1) {\r\n        //   rst.todoStatus = true\r\n        // } else {\r\n        //   rst.todoStatus = false\r\n        // }\r\n        this.setState({\r\n          formData: rst,\r\n        });\r\n      });\r\n    } else {\r\n      // create a new note , init default data\r\n      const mmt = moment();\r\n      let formData = {\r\n        ...this.state.formData,\r\n        expireDate: moment().add(2, \"days\"),\r\n        alarmDays: 1,\r\n      };\r\n\r\n      this.setState({ formData });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const todoLevel = [this.state.formData.todoLevel];\r\n\r\n    const props = {\r\n      name: 'file',\r\n      multiple: true,\r\n      action: NoteApi.uploadUrl,\r\n      onChange(info) {\r\n        const { status } = info.file;\r\n        if (status !== 'uploading') {\r\n          console.log(info.file, info.fileList);\r\n        }\r\n        if (status === 'done') {\r\n          message.success(`${info.file.name} file uploaded successfully.`);\r\n        } else if (status === 'error') {\r\n          message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n      },\r\n    };\r\n\r\n\r\n    const operations = (\r\n      <Rate\r\n        count={5}\r\n        value={this.state.formData.todoLevel}\r\n        tooltips={[\"不重要\", \"不紧急\", \"正常\", \"重要\", \"紧急\"]}\r\n        onChange={(ct) => {\r\n          this.createInputMode(ct, \"todoLevel\");\r\n        }}\r\n      />\r\n    )\r\n\r\n\r\n    return (\r\n      <div>\r\n        {/* {JSON.stringify(this.state.formData)} */}\r\n        {/* <Editor></Editor> */}\r\n        <Row gutter={24}>\r\n          <Col span={19}>\r\n            <Row gutter={24}>\r\n              <Col span=\"24\">\r\n                <dl className=\"form_col\">\r\n                  <dd>\r\n                    <Input\r\n                      size={this.state.inputSize}\r\n                      value={this.state.formData.title}\r\n                      placeholder=\"Title ...\"\r\n                      onChange={(e) => {\r\n                        this.createInputMode(e.target.value, \"title\");\r\n                      }}\r\n                    />\r\n                  </dd>\r\n                </dl>\r\n              </Col>\r\n\r\n              <Col span=\"24\">\r\n\r\n\r\n                <Tabs defaultActiveKey=\"1\" tabBarExtraContent={operations}>\r\n                  <TabPane tab=\"Content\" key=\"1\">\r\n                    {/* <Mde\r\n              change={this.mdChange}\r\n              content={this.state.formData.content}\r\n            ></Mde> */}\r\n                    <MdEditor\r\n                      change={this.mdChange}\r\n                      content={this.state.formData.content}\r\n                    ></MdEditor>\r\n                  </TabPane>\r\n                  <TabPane tab=\"Attachment\" key=\"2\">\r\n                    <Dragger {...props}>\r\n                      <p className=\"ant-upload-drag-icon\">\r\n                        <InboxOutlined />\r\n                      </p>\r\n                      <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                      <p className=\"ant-upload-hint\">\r\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or other\r\n                        band files\r\n    </p>\r\n                    </Dragger>\r\n                  </TabPane>\r\n\r\n                </Tabs>\r\n\r\n\r\n\r\n              </Col>\r\n\r\n\r\n\r\n\r\n\r\n              <Col span=\"24\" style={{ display: \"none\" }}>\r\n                <dl className=\"form_col\">\r\n                  <dt>PK</dt>\r\n                  <dd>\r\n                    <Input\r\n                      size={this.state.inputSize}\r\n                      value={this.state.formData.noteId}\r\n                      onChange={(e) => {\r\n                        this.createInputMode(e.target.value, \"noteId\");\r\n                      }}\r\n                    />\r\n                  </dd>\r\n                </dl>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col span={5}>\r\n            <Row gutter={24}>\r\n              <Col span={24} style={{ marginBottom: 8 }}>\r\n                <dl className=\"form_col\">\r\n                  <dd>\r\n                    <div\r\n                      style={{\r\n                        background: \"#fffbe6\",\r\n                        borderRadius: 5,\r\n                        padding: 8,\r\n                      }}\r\n                    >\r\n                      {/* <Radio.Group\r\n                      value={this.state.formData.classify}\r\n                      buttonStyle=\"solid\"\r\n                      onChange={this.setClassify}\r\n                    >\r\n                      <Radio.Button value=\"Todo\">Todo</Radio.Button>\r\n                      <Radio.Button value=\"Note\">Note</Radio.Button>\r\n                      <Radio.Button value=\"Knowledge\">Knowledge</Radio.Button>\r\n                    </Radio.Group> */}\r\n\r\n                      <CheckableTag\r\n                        key=\"Todo\"\r\n                        onChange={this.selectTag(\"Todo\")}\r\n                        checked={this.state.formData.classify === \"Todo\"}\r\n                        icon={\r\n                          <FontAwesomeIcon\r\n                            icon=\"th-list\"\r\n                            style={{\r\n                              fontSize: 14,\r\n                              paddingTop: 2,\r\n                              marginRight: 8,\r\n                              color: \"#ffffff\",\r\n                            }}\r\n                          />\r\n                        }\r\n                      >\r\n                        Todo\r\n                    </CheckableTag>\r\n\r\n                      <CheckableTag\r\n                        key=\"Note\"\r\n                        onChange={this.selectTag(\"Note\")}\r\n                        checked={this.state.formData.classify === \"Note\"}\r\n                        icon={\r\n                          <FontAwesomeIcon\r\n                            icon=\"clipboard-list\"\r\n                            style={{\r\n                              fontSize: 14,\r\n                              paddingTop: 2,\r\n                              marginRight: 8,\r\n                              color: \"#ffffff\",\r\n                            }}\r\n                          />\r\n                        }\r\n                      >\r\n                        Note\r\n                    </CheckableTag>\r\n\r\n                      <CheckableTag\r\n                        key=\"Knowledge\"\r\n                        onChange={this.selectTag(\"Knowledge\")}\r\n                        checked={this.state.formData.classify === \"Knowledge\"}\r\n                        icon={\r\n                          <FontAwesomeIcon\r\n                            icon=\"book\"\r\n                            style={{\r\n                              fontSize: 14,\r\n                              paddingTop: 2,\r\n                              marginRight: 8,\r\n                              color: \"#ffffff\",\r\n                            }}\r\n                          />\r\n                        }\r\n                      >\r\n                        Knowledge\r\n                    </CheckableTag>\r\n                    </div>\r\n                  </dd>\r\n                </dl>\r\n              </Col>\r\n              {/* <Col span={24} style={{ marginBottom: 8 }}>\r\n                \r\n              </Col> */}\r\n              <Col span={24} style={{ marginBottom: 8 }}>\r\n                {this.state.formData.classify === \"Todo\" ? (\r\n                  <div>\r\n                    <Divider></Divider>\r\n                    <Row gutter={24}>\r\n\r\n                      <Col span={24} style={{ marginBottom: 8 }}>\r\n                        <dl className=\"form_col\">\r\n                          <dt>Expire Date</dt>\r\n                          <dd style={{ display: 'flex', alignItems: \"center\" }}>\r\n                            <LeftOutlined\r\n                              style={{ flex: \"0 0 20\", cursor: \"pointer\" }}\r\n                              onClick={this.subExpireDate}\r\n                            />\r\n                            <DatePicker\r\n                              style={{ flex: \"1 1 auto\", marginLeft: 8, marginRight: 8 }}\r\n                              size={this.state.inputSize}\r\n                              onChange={(moment, dataStr) => {\r\n                                this.createDateMode(dataStr, \"expireDate\");\r\n                              }}\r\n                              value={\r\n                                this.state.formData.expireDate\r\n                                  ? moment(\r\n                                    this.state.formData.expireDate,\r\n                                    \"YYYY-MM-DD\"\r\n                                  )\r\n                                  : null\r\n                              }\r\n                            />\r\n                            <RightOutlined\r\n                              style={{ flex: \"0 0 20\", cursor: \"pointer\" }}\r\n                              onClick={this.addExpireDate}\r\n                            />\r\n                          </dd>\r\n                        </dl>\r\n                      </Col>\r\n                      <Col span={24} style={{ marginBottom: 8 }}>\r\n                        <dl className=\"form_col\">\r\n                          <dt>Alarm Days</dt>\r\n                          <dd>\r\n                            <InputNumber\r\n                              style={{ width: \"100%\" }}\r\n                              size={this.state.inputSize}\r\n                              value={this.state.formData.alarmDays}\r\n                              onChange={(v) => {\r\n                                this.createInputMode(v, \"alarmDays\");\r\n                              }}\r\n                            />\r\n                          </dd>\r\n                        </dl>\r\n                      </Col>\r\n                      <Col span={24} style={{ marginBottom: 8 }}>\r\n                        <dl className=\"form_col\">\r\n                          <dt>\r\n                            Start Time{\" \"}\r\n                            <ClockCircleOutlined\r\n                              onClick={this.setStartTimeCurrent}\r\n                              style={{ color: \"#2db7f5\", cursor: \"pointer\" }}\r\n                            />\r\n                          </dt>\r\n                          <dd>\r\n                            <DatePicker\r\n                              style={{ width: \"50%\" }}\r\n                              size={this.state.inputSize}\r\n                              onChange={(moment, dataStr) => {\r\n                                this.createDateMode(dataStr, \"startDateTemp\");\r\n                              }}\r\n                              value={\r\n                                this.state.formData.startDateTemp\r\n                                  ? moment(\r\n                                    this.state.formData.startDateTemp,\r\n                                    \"YYYY-MM-DD\"\r\n                                  )\r\n                                  : null\r\n                              }\r\n                            />\r\n                            <TimePicker\r\n                              style={{ width: \"50%\" }}\r\n                              size={this.state.inputSize}\r\n                              format={\"HH:mm\"}\r\n                              onChange={(moment, dataStr) => {\r\n                                this.createDateMode(dataStr, \"startTimeTemp\");\r\n                              }}\r\n                              value={\r\n                                this.state.formData.startTimeTemp\r\n                                  ? moment(\r\n                                    this.state.formData.startTimeTemp,\r\n                                    \"HH:mm\"\r\n                                  )\r\n                                  : null\r\n                              }\r\n                            />\r\n                          </dd>\r\n                        </dl>\r\n                      </Col>\r\n                      <Col span={24} style={{ marginBottom: 8 }}>\r\n                        <dl className=\"form_col\">\r\n                          <dt>\r\n                            Finish Time{\" \"}\r\n                            <ClockCircleOutlined\r\n                              onClick={this.setFinishTimeCurrent}\r\n                              style={{ color: \"#2db7f5\", cursor: \"pointer\" }}\r\n                            />\r\n                          </dt>\r\n                          <dd>\r\n                            <DatePicker\r\n                              style={{ width: \"50%\" }}\r\n                              size={this.state.inputSize}\r\n                              onChange={(moment, dataStr) => {\r\n                                this.createDateMode(dataStr, \"finishDateTemp\");\r\n                              }}\r\n                              value={\r\n                                this.state.formData.finishDateTemp\r\n                                  ? moment(\r\n                                    this.state.formData.finishDateTemp,\r\n                                    \"YYYY-MM-DD\"\r\n                                  )\r\n                                  : null\r\n                              }\r\n                            />\r\n                            <TimePicker\r\n                              style={{ width: \"50%\" }}\r\n                              format={\"HH:mm\"}\r\n                              size={this.state.inputSize}\r\n                              onChange={(moment, dataStr) => {\r\n                                this.createDateMode(dataStr, \"finishTimeTemp\");\r\n                              }}\r\n                              value={\r\n                                this.state.formData.finishTimeTemp\r\n                                  ? moment(\r\n                                    this.state.formData.finishTimeTemp,\r\n                                    \"HH:mm\"\r\n                                  )\r\n                                  : null\r\n                              }\r\n                            />\r\n                          </dd>\r\n                        </dl>\r\n                      </Col>\r\n                      <Col span={24} style={{ marginBottom: 8 }}>\r\n                        <dl className=\"form_row\">\r\n                          <dt>Status</dt>\r\n                          <dd>\r\n                            <Switch\r\n                              checked={this.state.formData.todoStatus === 1}\r\n                              onChange={(v) => {\r\n                                this.createInputMode(v ? 1 : 0, \"todoStatus\");\r\n                              }}\r\n                              checkedChildren=\"已完成\"\r\n                              unCheckedChildren=\"未完成\"\r\n                            />\r\n                          </dd>\r\n                        </dl>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                ) : null}\r\n              </Col>\r\n              <Col span={24} style={{ marginBottom: 8 }}>\r\n\r\n                <div>\r\n\r\n                  <Button\r\n                    block\r\n                    type=\"primary\"\r\n                    icon={<SaveOutlined />}\r\n                    onClick={this.saveNote}\r\n                  >\r\n                    Save\r\n            </Button>\r\n\r\n                  {/* <Button icon={<RollbackOutlined />} onClick={this.props.closeFn}>\r\n                      Cancel\r\n            </Button> */}\r\n\r\n                </div>\r\n\r\n              </Col>\r\n\r\n            </Row>\r\n\r\n\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport NoteApi from \"@/api/NoteApi\";\r\nimport { Row, Col } from \"antd\";\r\nimport DateUtils from '@/tools/DateUtils'\r\n\r\nclass NoteView extends React.Component {\r\n  state = {\r\n    data: {},\r\n\r\n    colSpan:{\r\n        xs:24,\r\n        sm:12,\r\n        md:8,\r\n        lg:6,\r\n        xl:4,\r\n        xxl:3\r\n    }\r\n\r\n  };\r\n\r\n  static propTypes = {\r\n    cgExampleId: PropTypes.string,\r\n    canEdit: PropTypes.bool\r\n\r\n  };\r\n\r\n  //指定默认标签属性值\r\n  static defaultProps = {\r\n    noteId: \"\"//sex默认值为男\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.noteId) {\r\n\r\n      NoteApi.queryNoteById(this.props.noteId).then((r) => {\r\n        const rst = r.result;\r\n        if(rst.userBirthday){\r\n            rst.userBirthday = DateUtils.formatToDate(rst.userBirthday)\r\n        }\r\n        this.setState({\r\n          data: r.result,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <Row gutter={24}>\r\n\r\n\r\n\r\n            <Col {...this.state.colSpan}>\r\n                <dl className=\"form_col\">\r\n                    <dt>PK</dt>\r\n                    <dd>\r\n                    {this.state.data.noteId}\r\n                    </dd>\r\n                </dl>\r\n              </Col>\r\n\r\n\r\n                            <Col {...this.state.colSpan}>\r\n                              <dl className=\"form_col\">\r\n                                    <dt>classify</dt>\r\n                                    <dd>\r\n                                      {this.state.data.classify}\r\n                                    </dd>\r\n                                </dl>\r\n                              </Col>\r\n                            <Col {...this.state.colSpan}>\r\n                              <dl className=\"form_col\">\r\n                                    <dt>title</dt>\r\n                                    <dd>\r\n                                      {this.state.data.title}\r\n                                    </dd>\r\n                                </dl>\r\n                              </Col>\r\n                            <Col {...this.state.colSpan}>\r\n                              <dl className=\"form_col\">\r\n                                    <dt>content</dt>\r\n                                    <dd>\r\n                                      {this.state.data.content}\r\n                                    </dd>\r\n                                </dl>\r\n                              </Col>\r\n                            <Col {...this.state.colSpan}>\r\n                              <dl className=\"form_col\">\r\n                                    <dt>expireDate</dt>\r\n                                    <dd>\r\n                                      {DateUtils.formatToDate(this.state.data.expireDate)}\r\n                                    </dd>\r\n                                </dl>\r\n                              </Col>\r\n                            <Col {...this.state.colSpan}>\r\n                              <dl className=\"form_col\">\r\n                                    <dt>alarmDays</dt>\r\n                                    <dd>\r\n                                      {this.state.data.alarmDays}\r\n                                    </dd>\r\n                                </dl>\r\n                              </Col>\r\n\r\n        </Row>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteView;\r\n","import React from 'react'\r\nimport { message,Button,Calendar,Spin, Badge,Tooltip,Rate,DatePicker } from 'antd';\r\nimport NoteApi from \"@/api/NoteApi\";\r\n\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport _ from 'lodash'\r\nimport moment  from 'moment'\r\nimport {BookOutlined,\r\n  ClockCircleOutlined,\r\n  CheckOutlined,\r\n  ExclamationOutlined,\r\n  CalendarOutlined\r\n}  from \"@ant-design/icons\";\r\nclass NoteCalendar extends React.Component {\r\n  state = {\r\n    spinning:false,\r\n    data:[],\r\n    value: moment(),\r\n    selectedValue: moment(),\r\n    queryCondition:{}\r\n  }\r\n\r\n  // static propTypes = {\r\n  //   queryCondition:PropTypes.object,\r\n  //   cb:PropTypes.func\r\n  // }\r\n  // static defaultProps = {\r\n  //   queryCondition:{},\r\n  //   cb:() => {}\r\n  // }\r\n\r\n  \r\n\r\n  // componentDidMount = () => {\r\n  //   this.queryData();\r\n  //   this.setState({\r\n  //     queryCondition:this.props.queryCondition\r\n  //   })\r\n  // }\r\n\r\n  headerRender = ({value,onChange}) => {\r\n    onChange(value)\r\n    return <DatePicker onChange={this.onMonthChange} picker=\"month\" />\r\n  }\r\n  onMonthChange=(mmt)=>{\r\n    this.setState({\r\n      value:mmt,\r\n      selectedValue:mmt\r\n    })\r\n  }\r\n\r\n  setQueryCondition = (queryCondition) => {\r\n    let condition = _.cloneDeep(queryCondition)\r\n    delete condition.startTimeFrom\r\n    delete condition.startTimeTo\r\n    delete condition.finishTimeFrom\r\n    delete condition.finishTimeTo\r\n    \r\n    this.setState({\r\n      queryCondition:condition\r\n    },this.queryData)\r\n  }\r\n\r\n  queryData = () => {\r\n    \r\n    this.setState({\r\n      spinning:true\r\n    }) \r\n    \r\n    let condition = _.cloneDeep(this.state.queryCondition)\r\n\r\n    let current = moment(this.state.value.format('YYYY-MM-DD'),'YYYY-MM-DD') ;// clone日期,防止current改变后导致state.value改变\r\n\r\n    condition.expireDateFrom = current.format(\"YYYY-MM\") + \"-01 00:00:00\"\r\n\r\n    let nextMonth = current.add(1,\"months\")\r\n    condition.expireDateTo = nextMonth.format(\"YYYY-MM\") + \"-01 00:00:00\"\r\n\r\n \r\n    NoteApi.queryNoteLikeByPage(condition)\r\n      .then((r) => {\r\n        this.setState({\r\n          data:  r.result.list,\r\n          spinning:false\r\n        });\r\n      })\r\n      .catch((r) => {\r\n        message.error(\"error! \" + r);\r\n        this.setState({\r\n          spinning: false,\r\n        });\r\n      });\r\n  }\r\n  \r\n  // queryData = (date,thisQueryCondition) => {\r\n    \r\n  //   this.setState({\r\n  //     spinning:true\r\n  //   }) \r\n    \r\n  //   let condition = _.cloneDeep(this.state.queryCondition)\r\n\r\n  //   if(thisQueryCondition){\r\n\r\n  //     condition = thisQueryCondition;\r\n  //     this.setState({\r\n  //       queryCondition : thisQueryCondition\r\n  //     })\r\n\r\n  //   }\r\n  //   //let condition = thisQueryCondition ? thisQueryCondition : _.cloneDeep(this.props.queryCondition)\r\n\r\n\r\n  //   delete condition.startTimeFrom\r\n  //   delete condition.startTimeTo\r\n  //   delete condition.finishTimeFrom\r\n  //   delete condition.finishTimeTo\r\n\r\n  //   let current = moment(this.state.value.format('YYYY-MM-DD'),'YYYY-MM-DD') ;// clone日期,防止current改变后导致state.value改变\r\n\r\n   \r\n  //   if(date){\r\n  //     current = moment(date.format('YYYY-MM-DD'),'YYYY-MM-DD'); // clone日期,防止current改变后导致date改变\r\n  //     this.setState({\r\n  //       value:date\r\n  //     })\r\n  //   }\r\n\r\n  //   condition.expireDateFrom = current.format(\"YYYY-MM\") + \"-01 00:00:00\"\r\n\r\n  //   let nextMonth = current.add(1,\"months\")\r\n  //   condition.expireDateTo = nextMonth.format(\"YYYY-MM\") + \"-01 00:00:00\"\r\n\r\n \r\n  //   NoteApi.queryNoteLikeByPage(condition)\r\n  //     .then((r) => {\r\n  //       this.setState({\r\n  //         data:  r.result.list,\r\n  //         spinning:false\r\n  //       });\r\n  //     })\r\n  //     .catch((r) => {\r\n  //       message.error(\"error! \" + r);\r\n  //       this.setState({\r\n  //         spinning: false,\r\n  //       });\r\n  //     });\r\n  // }\r\n\r\n  \r\n\r\n\r\n \r\n  onSelect = value => {\r\n    this.setState({\r\n      value,\r\n      selectedValue: value,\r\n    });\r\n  }\r\n  onPanelChange = (value,mode) => {\r\n    console.log(value.format('YYYY-MM-DD'));\r\n    console.log(mode)\r\n    this.setState({ value },this.queryData);\r\n    \r\n  }\r\n\r\n\r\n  // 获取每天格子中的的数据\r\n  getListData = (value) => {\r\n    //console.log(value)\r\n    const dateStr = value.format(\"YYYY-MM-DD\")\r\n    \r\n    //console.log(\"---\",dateStr)\r\n    let listData = this.state.data.filter( item => {\r\n        //console.log(dateStr,item.expireDate,dateStr === item.expireDate)\r\n        return (dateStr === item.expireDate)\r\n    })\r\n    return listData || [];\r\n  }\r\n\r\n  // 每天格子中的的数据列表渲染\r\n  dateCellRender = (value) => {\r\n    // console.log(\"calendar dateCellRender ...\")\r\n    const listData = this.getListData(value);\r\n    \r\n    return (\r\n      <ul className=\"events\" style={{listStyleType:'none',paddingLeft:4}}>\r\n        {listData.map(item => (\r\n          <li key={item.title} onClick={()=>{this.props.cb(item.noteId)}}>\r\n            <Badge color={this.computColor(item)} text={this.computContent(item)} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n\r\n  // 计算颜色\r\n  computColor = (item) => {\r\n    const colorArray = [\r\n      '#999',\r\n      'lime',\r\n      'blue',\r\n      'orange',\r\n      'volcano']\r\n      return colorArray[item.todoLevel-1]  \r\n  }\r\n\r\n\r\n  computContent = (item) => {\r\n   \r\n    let icon = <BookOutlined style={{fontSize:12,marginRight:4}}/>\r\n    if(item.classify === 'Todo'){\r\n      icon = <CalendarOutlined style={{fontSize:12,marginRight:4}}/>\r\n    }\r\n\r\n    let fix = <CheckOutlined style={{fontSize:12,marginLeft:4,color:\"green\"}}/>\r\n    if(item.todoStatus === 0){\r\n      fix = <ExclamationOutlined style={{fontSize:12,marginLeft:4,color:\"red\"}}/>\r\n    }\r\n\r\n\r\n    let msg = (\r\n      <span>[{item.classify}]  {item.todoStatus===1?'已完成':'未完成'} \r\n        <br/>\r\n        <Rate style={{fontSize:12}} disabled={true} defaultValue={item.todoLevel} />\r\n      </span>\r\n    )\r\n    return (\r\n      <span>\r\n\r\n      <Tooltip title={msg} color=\"#108ee9\" key={item.noteId}>\r\n        {icon}\r\n        {item.title}\r\n        {fix}\r\n      </Tooltip>\r\n      </span>\r\n    )\r\n\r\n  }\r\n\r\n  dataChange = () => {\r\n    alert(2)\r\n    this.setState({\r\n      selectedValue:moment('2021-01-01','YYYY-MM-DD')\r\n    })\r\n  }\r\n\r\n  render() {\r\n    // console.log(\"calendar render ...\")\r\n    const _this = this;\r\n \r\n      \r\n    function getMonthData(value) {\r\n      if (value.month() === 8) {\r\n        return 1394; \r\n      }\r\n    }\r\n    \r\n    function monthCellRender(value) {\r\n      const num = getMonthData(value);\r\n      return num ? (\r\n        <div className=\"notes-month\">\r\n          <section>{num}</section>\r\n          <span>Backlog number</span>\r\n        </div>\r\n      ) : null;\r\n    }\r\n    return (\r\n      <div>\r\n        {/* <Button onClick={this.dataChange}>xx</Button> */}\r\n        <Spin tip=\"Loading...\" spinning={this.state.spinning}>\r\n        {this.state.value.format(\"YYYY-MM-DD\")}\r\n          <Calendar  \r\n            dateCellRender={this.dateCellRender} \r\n            monthCellRender={monthCellRender} \r\n            value={this.state.value}\r\n            mode=\"month\"\r\n            onPanelChange={this.onPanelChange}\r\n            onSelect={this.onSelect}\r\n          />\r\n          </Spin>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NoteCalendar","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, fatrash } from \"@fortawesome/fontawesome-free-solid\";\r\n// import NoteFullCalendar from './NoteFullCalendar'\r\nimport {\r\n  Menu,\r\n  Modal,\r\n  Table,\r\n  Button,\r\n  Input,\r\n  Alert,\r\n  InputNumber,\r\n  Dropdown,\r\n  Tag,\r\n  Select,\r\n  Switch,\r\n  Space,\r\n  Checkbox,\r\n  Tooltip,\r\n  TimePicker,\r\n  message,\r\n  Divider,\r\n  Pagination,\r\n  Popconfirm,\r\n  Row,\r\n  Col,\r\n  Popover,\r\n  Empty,\r\n  Rate,\r\n  Card,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport NoteApi from \"@/api/NoteApi\";\r\nimport DateUtils from \"@/tools/DateUtils\";\r\nimport NoteForm from \"./NoteForm\";\r\nimport NoteView from \"./NoteView\";\r\nimport moment from \"moment\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  SearchOutlined,\r\n  ClockCircleOutlined,\r\n  UpOutlined,\r\n  ExclamationOutlined,\r\n  EyeOutlined,\r\n  CloseCircleFilled,\r\n  CalendarOutlined,\r\n  UserOutlined,\r\n  TableOutlined,\r\n  InfoOutlined,\r\n  WarningOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  UnorderedListOutlined,\r\n  DeleteOutlined,\r\n  DownOutlined,\r\n  PlusOutlined,\r\n  MoreOutlined,\r\n} from \"@ant-design/icons\";\r\nimport NoteCalendar from \"./NoteCalendar\";\r\n\r\nconst { Search } = Input;\r\nconst { Option } = Select;\r\nconst levelTags = [\r\n  { key: 5, value: \"紧急\", color: \"#f50\" },\r\n  { key: 4, value: \"重要\", color: \"#108ee9\" },\r\n  { key: 3, value: \"正常\", color: \"#87d068\" },\r\n  { key: 2, value: \"不紧急\", color: \"#2db7f5\" },\r\n  { key: 1, value: \"不重要\", color: \"#2db7f5\" },\r\n];\r\n\r\nclass NoteList extends React.Component {\r\n  state = {\r\n    calendarQueryCondition: {},\r\n    noteId: \"\",\r\n    finishDateTemp: moment(),\r\n    finishTimeTemp: moment(),\r\n    finishTimeModalVisible: false,\r\n    advanceSearchVisible: false,\r\n    colSpan: 24,\r\n    viewType: \"CALENDAR\", // LIST DETAIL CALENDAR\r\n    // 查询条件\r\n    queryCondition: {\r\n      noteId: \"\",\r\n      todoStatus: 0,\r\n      classify:'Todo'\r\n    },\r\n    // loading状态\r\n    tabLoading: false,\r\n    // 分页数据\r\n    tabPagination: {\r\n      current: 1, // 当前页\r\n      pageSize: 10, // 每页条目数\r\n      size: \"small\", // 尺寸\r\n      total: 0, // 总条目数\r\n      pageSizeOptions: [5, 10, 15, 50, 100], // 条目数选项\r\n      // 文本\r\n      showTotal: (total, range) => {\r\n        return `${total} items`;\r\n      },\r\n      showSizeChanger: true, // 是否展示修改条目数的下拉菜单\r\n      showQuickJumper: true, // 是否有直接跳转页数文本框\r\n    },\r\n    // 表格排序字段和顺序\r\n    tabSort: {\r\n      field: \"createTime\",\r\n      order: \"desc\",\r\n    },\r\n    // 表格数据\r\n    tabData: [],\r\n    selectedRowKeys: [],\r\n    // modal noteId\r\n    noteId: \"\",\r\n    // note编辑modal visible\r\n    formModalVisible: false,\r\n\r\n    // note view modal visible\r\n    viewModalVisible: false,\r\n  };\r\n\r\n  calendarComponent = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.queryTabData();\r\n  }\r\n\r\n  // 表格选择框改变\r\n  onSelectChange = (selectedRowKeys) => {\r\n    // console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n  // 清除已选择的选择框\r\n  clearSelectedKeys = () => {\r\n    this.setState({ selectedRowKeys: [] });\r\n  };\r\n\r\n  // detail视图中的checkbox checked属性初始化\r\n  checkedInit = (id) => {\r\n    return (\r\n      this.state.selectedRowKeys.find((item) => {\r\n        return item === id;\r\n      }) !== undefined\r\n    );\r\n  };\r\n  // detail视图中的checkbox checked事件\r\n  checkboxChange = (e) => {\r\n    if (e.target.checked) {\r\n      const f = this.state.selectedRowKeys.find((item) => {\r\n        return item === e.target.value;\r\n      });\r\n      if (f === undefined) {\r\n        this.setState({\r\n          selectedRowKeys: [...this.state.selectedRowKeys, e.target.value],\r\n        });\r\n      }\r\n    } else {\r\n      const filterResult = this.state.selectedRowKeys.filter((item) => {\r\n        return item !== e.target.value;\r\n      });\r\n      // console.log(filterResult);\r\n      this.setState({\r\n        selectedRowKeys: filterResult,\r\n      });\r\n    }\r\n  };\r\n\r\n  // 表格改变事件\r\n  tabChange = (pagination, filters, sorter) => {\r\n    // console.log(\"pagination\", pagination);\r\n    // console.log(\"filter\", filters);\r\n    // console.log(\"sorter\", sorter);\r\n\r\n    const tabPagination = {\r\n      ...this.state.tabPagination,\r\n      current: pagination.current, // 当前页\r\n      pageSize: pagination.pageSize, // 每页条目数\r\n    };\r\n\r\n    let tabSort = {};\r\n    if (sorter && sorter.order) {\r\n      tabSort = {\r\n        field: sorter.field,\r\n        order: sorter.order.replace(\"end\", \"\"),\r\n      };\r\n    } else {\r\n      tabSort = this.state.tabSort;\r\n    }\r\n\r\n    // 设置分页排序 并查询\r\n    this.setState(\r\n      {\r\n        tabPagination,\r\n        tabSort,\r\n      },\r\n      this.queryTabData\r\n    );\r\n  };\r\n\r\n  // 分页组件改变事件\r\n  tabPaginationChange = (page, pageSize) => {\r\n    const tabPagination = {\r\n      ...this.state.tabPagination,\r\n      current: page, // 当前页\r\n      pageSize: pageSize, // 每页条目数\r\n    };\r\n\r\n    this.setState(\r\n      {\r\n        tabPagination,\r\n      },\r\n      this.queryTabData\r\n    );\r\n  };\r\n\r\n  calendarSearch = () => {\r\n    let queryCondition = _.cloneDeep(this.state.queryCondition);\r\n\r\n    // 处理时间字段\r\n    if (queryCondition.startTimeFrom) {\r\n      queryCondition.startTimeFrom = queryCondition.startTimeFrom + \" 00:00:00\";\r\n    }\r\n    if (queryCondition.startTimeTo) {\r\n      queryCondition.startTimeTo = queryCondition.startTimeTo + \" 23:59:59\";\r\n    }\r\n    if (queryCondition.finishTimeFrom) {\r\n      queryCondition.finishTimeFrom =\r\n        queryCondition.finishTimeFrom + \" 00:00:00\";\r\n    }\r\n    if (queryCondition.finishTimeTo) {\r\n      queryCondition.finishTimeTo = queryCondition.finishTimeTo + \" 23:59:59\";\r\n    }\r\n\r\n    // this.setState({\r\n    //   calendarQueryCondition:queryCondition\r\n    // })\r\n  };\r\n  // 查询列表数据 clearPage:是否清除分页信息\r\n  queryTabData = (clearPage) => {\r\n    this.setState({\r\n      tabLoading: true,\r\n    });\r\n    let currentPage = this.state.tabPagination.current;\r\n    if (clearPage) {\r\n      // 清除当前页信息\r\n      currentPage = 1;\r\n      this.setState({\r\n        tabPagination: {\r\n          ...this.state.tabPagination,\r\n          current: 1,\r\n        },\r\n      });\r\n    } else {\r\n      currentPage = this.state.tabPagination.current;\r\n    }\r\n\r\n    let queryCondition = _.cloneDeep(this.state.queryCondition);\r\n\r\n    // 处理时间字段\r\n    if (queryCondition.startTimeFrom) {\r\n      queryCondition.startTimeFrom = queryCondition.startTimeFrom + \" 00:00:00\";\r\n    }\r\n    if (queryCondition.startTimeTo) {\r\n      queryCondition.startTimeTo = queryCondition.startTimeTo + \" 23:59:59\";\r\n    }\r\n    if (queryCondition.finishTimeFrom) {\r\n      queryCondition.finishTimeFrom =\r\n        queryCondition.finishTimeFrom + \" 00:00:00\";\r\n    }\r\n    if (queryCondition.finishTimeTo) {\r\n      queryCondition.finishTimeTo = queryCondition.finishTimeTo + \" 23:59:59\";\r\n    }\r\n\r\n    console.log(\"----\", queryCondition);\r\n\r\n    if (this.calendarComponent.current) {\r\n      this.calendarComponent.current.setQueryCondition(queryCondition);\r\n    }\r\n\r\n    // queryCondition.todoStatus = queryCondition.todoStatus ? 1 : 0\r\n\r\n    queryCondition.pageNum = currentPage;\r\n    queryCondition.pageSize = this.state.tabPagination.pageSize;\r\n    //queryCondition.sortField = this.state.tabSort.field;\r\n    //queryCondition.sortOrder = this.state.tabSort.order;\r\n    NoteApi.queryNoteLikeByPage(queryCondition)\r\n      .then((r) => {\r\n        this.setState({\r\n          tabLoading: false,\r\n          tabData: r.result.list,\r\n          tabPagination: {\r\n            ...this.state.tabPagination,\r\n            total: r.result.total,\r\n          },\r\n        });\r\n      })\r\n      .catch((r) => {\r\n        message.error(\"error! \" + r);\r\n        this.setState({\r\n          tabLoading: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  // 操作按钮的下拉菜单\r\n  createOperate = (record) => {\r\n    const menu = (\r\n      <Menu>\r\n        <Menu.Item key=\"1\" icon={<DeleteOutlined />}>\r\n          <Popconfirm\r\n            placement=\"topLeft\"\r\n            title=\"Are you confirm delete this record\"\r\n            onConfirm={() => {\r\n              this.logicDeleteNote(record.noteId);\r\n            }}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            Delete\r\n          </Popconfirm>\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"2\"\r\n          onClick={() => {\r\n            // message.info(JSON.stringify(record));\r\n            this.openNoteViewModal(record.noteId);\r\n          }}\r\n          icon={<InfoOutlined />}\r\n        >\r\n          Data View\r\n        </Menu.Item>\r\n\r\n        {record.classify === \"Todo\" ? (\r\n          record.todoStatus === 0 ? (\r\n            <Menu.Item\r\n              key=\"3\"\r\n              onClick={() => {\r\n                // message.info(JSON.stringify(record));\r\n                this.openFinishTimeModal(record.noteId, record.finishTime);\r\n              }}\r\n              icon={<CheckOutlined />}\r\n            >\r\n              Finish\r\n            </Menu.Item>\r\n          ) : (\r\n            <Menu.Item\r\n              key=\"4\"\r\n              onClick={() => {\r\n                // message.info(JSON.stringify(record));\r\n                this.toggleNoteState(record.noteId);\r\n              }}\r\n              icon={<CloseOutlined />}\r\n            >\r\n              Unfinish\r\n            </Menu.Item>\r\n          )\r\n        ) : null}\r\n      </Menu>\r\n    );\r\n    return (\r\n      <div>\r\n        <a\r\n          className=\"ant-dropdown-link\"\r\n          onClick={() => {\r\n            this.openNoteFormModal(record.noteId);\r\n          }}\r\n        >\r\n          Edit\r\n        </a>\r\n\r\n        <Dropdown overlay={menu}>\r\n          <Button type=\"link\">\r\n            <MoreOutlined />\r\n          </Button>\r\n        </Dropdown>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // keywords 搜索\r\n  onSearch = (keyWords) => {\r\n    this.setState(\r\n      {\r\n        queryCondition: {\r\n          ...this.state.queryCondition,\r\n          keyWords,\r\n        },\r\n      },\r\n      () => {\r\n        this.queryTabData(true);\r\n      }\r\n    );\r\n  };\r\n\r\n  // 重置搜索条件\r\n  resetSearch = () => {\r\n    this.setState(\r\n      {\r\n        queryCondition: {},\r\n      },\r\n      () => {\r\n        this.queryTabData(true);\r\n      }\r\n    );\r\n  };\r\n\r\n  keyWordsChange = (e) => {\r\n    this.setState({\r\n      queryCondition: {\r\n        ...this.state.queryCondition,\r\n        keyWords: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  clearKeyWords = () => {\r\n    this.setState(\r\n      {\r\n        queryCondition: {\r\n          // ...this.state.queryCondition,\r\n          keyWords: \"\",\r\n        },\r\n      },\r\n      () => {\r\n        this.queryTabData(true);\r\n      }\r\n    );\r\n  };\r\n\r\n  // 删除Note\r\n  logicDeleteNote = (noteId) => {\r\n    NoteApi.logicDeleteNote(noteId)\r\n      .then((r) => {\r\n        message.info(\"SUCCESS\");\r\n        this.queryTabData();\r\n      })\r\n      .catch((r) => {\r\n        message.info(\"FAILURE\");\r\n      });\r\n  };\r\n\r\n  // 批量删除Note\r\n  deleteLogicByNoteIds = () => {\r\n    if (this.state.selectedRowKeys.length > 0) {\r\n      NoteApi.deleteLogicByNoteIds(this.state.selectedRowKeys)\r\n        .then((r) => {\r\n          message.info(\"SUCCESS\");\r\n\r\n          this.setState({\r\n            selectedRowKeys: [],\r\n          });\r\n          this.queryTabData();\r\n        })\r\n        .catch((r) => {\r\n          message.error(\"FAILURE\");\r\n        });\r\n    } else {\r\n      message.error(\"Please Select A Item At Least\");\r\n    }\r\n  };\r\n\r\n  // 关闭 编辑 modal\r\n  closeNoteFormModal = () => {\r\n    this.setState({\r\n      formModalVisible: false,\r\n      noteId: \"\",\r\n    });\r\n  };\r\n  // 关闭 视图 modal\r\n  closeNoteViewModal = () => {\r\n    this.setState({\r\n      viewModalVisible: false,\r\n      noteId: \"\",\r\n    });\r\n  };\r\n  // 打开 编辑 modal\r\n  openNoteFormModal = (noteId) => {\r\n    if (noteId) {\r\n      this.setState({\r\n        noteId: noteId,\r\n        formModalVisible: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        formModalVisible: true,\r\n      });\r\n    }\r\n  };\r\n  // 打开 视图 modal\r\n  openNoteViewModal = (noteId) => {\r\n    this.setState({\r\n      noteId: noteId,\r\n      viewModalVisible: true,\r\n    });\r\n  };\r\n\r\n  // 切换视图类型\r\n  toggleViewType = (type) => {\r\n    this.setState({\r\n      viewType: type,\r\n    });\r\n  };\r\n\r\n  // 高级搜索显示/隐藏 回调\r\n  handleAdvanceSearchVisibleChange = (b) => {\r\n    this.setState({\r\n      advanceSearchVisible: b,\r\n    });\r\n  };\r\n\r\n  // 双向绑定\r\n  createMode = (v, propName, isQueryData) => {\r\n    if (isQueryData) {\r\n      this.setState(\r\n        {\r\n          queryCondition: {\r\n            ...this.state.queryCondition,\r\n            [propName]: v,\r\n          },\r\n        },\r\n        this.queryTabData\r\n      );\r\n    } else {\r\n      this.setState({\r\n        queryCondition: {\r\n          ...this.state.queryCondition,\r\n          [propName]: v,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  search = () => {\r\n    NoteApi.search(this.state.queryCondition.keyWords, null).then((r) => {\r\n      this.setState({\r\n        tabData: r.result,\r\n      });\r\n    });\r\n  };\r\n\r\n  deleteIndex = () => {\r\n    NoteApi.deleteNodeIndex().then((r) => {\r\n      if (r.result) {\r\n        message.success(\"success! \");\r\n      } else {\r\n        message.error(r.msg);\r\n      }\r\n    });\r\n  };\r\n\r\n  createIndex = () => {\r\n    NoteApi.createNoteIndex().then((r) => {\r\n      if (r.result) {\r\n        message.success(\"success! \");\r\n      } else {\r\n        message.error(r.msg);\r\n      }\r\n    });\r\n  };\r\n\r\n  computColor = (item) => {\r\n    if (item.classify === \"Todo\") {\r\n      if (item.todoStatus === 0) {\r\n        if (item.todoLevel === 5) {\r\n          return \"block red_block\";\r\n        } else if (item.todoLevel === 4) {\r\n          return \"block yellow_block\";\r\n        } else if (item.todoLevel === 3) {\r\n          return \"block green_block\";\r\n        }\r\n      } else {\r\n        return \"block gray_block\";\r\n      }\r\n    }\r\n    return \"block\";\r\n  };\r\n\r\n  toggleNoteState = (id) => {\r\n    NoteApi.toggleNoteState(id).then(\r\n      (r) => {\r\n        console.log(r);\r\n        if (r.code !== \"-1\") {\r\n          message.success(\"SUCCESS\");\r\n          this.queryTabData();\r\n        } else {\r\n          message.error(r.msg);\r\n        }\r\n      },\r\n      (r) => {\r\n        message.error(r.msg);\r\n      }\r\n    );\r\n  };\r\n\r\n  setFinishTimeCurrent = () => {\r\n    const mmt = moment();\r\n    this.setState({\r\n      finishDateTemp: mmt,\r\n      finishTimeTemp: mmt,\r\n    });\r\n  };\r\n\r\n  finishTodo = () => {\r\n    const finishTimeStr =\r\n      this.state.finishDateTemp.format(\"YYYY-MM-DD\") +\r\n      \" \" +\r\n      this.state.finishTimeTemp.format(\"HH:mm\");\r\n    // alert(finishTimeStr)\r\n    NoteApi.finishTodo(this.state.noteId, finishTimeStr).then((r) => {\r\n      console.log(r);\r\n      message.success(\"SUCCESS\");\r\n      this.closeFinishTimeModal();\r\n      this.queryTabData();\r\n    });\r\n  };\r\n\r\n  closeFinishTimeModal = () => {\r\n    this.setState({\r\n      finishTimeModalVisible: false,\r\n      noteId: \"\",\r\n    });\r\n  };\r\n  openFinishTimeModal = (id, finishTime) => {\r\n    if (finishTime) {\r\n      this.setState({\r\n        finishDateTemp: moment(finishTime, \"YYYY-MM-DD HH:mm\"),\r\n        finishTimeTemp: moment(finishTime, \"YYYY-MM-DD HH:mm\"),\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      noteId: id,\r\n      finishTimeModalVisible: true,\r\n    });\r\n  };\r\n\r\n  // =============================== render  =============================== //\r\n  render() {\r\n    const levelTagsObj = {};\r\n    levelTags.forEach((item) => {\r\n      levelTagsObj[item.key] = item;\r\n    });\r\n\r\n    // 表格字段\r\n    const tabDataColumns = [\r\n      {\r\n        title: \"classify\",\r\n        dataIndex: \"classify\",\r\n        key: \"classify\"\r\n      },\r\n      {\r\n        title: \"title\",\r\n        width: 500,\r\n        dataIndex: \"title\",\r\n        key: \"title\"\r\n      },\r\n      // {\r\n      //   title: \"content\",\r\n      //   dataIndex: \"content\",\r\n      //   key: \"content\",\r\n      //   sorter: true,\r\n      // },\r\n      {\r\n        title: \"expireDate\",\r\n        dataIndex: \"expireDate\",\r\n        key: \"expireDate\",\r\n        render: (text, record, index) => {\r\n          return DateUtils.formatToDate(text);\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"todoStatus\",\r\n        key: \"todoStatus\",\r\n        render: (text, record, index) => {\r\n\r\n          if(record.classify === 'Todo'){\r\n            if(record.todoStatus === 0){\r\n              return <Tag color=\"#f00\" style={{width:54}}>未完成</Tag>\r\n            }else{\r\n              return <Tag color=\"#87d068\" style={{width:54}}>已完成</Tag>\r\n            }\r\n          }else{\r\n            return <Tag color=\"#2db7f5\" style={{width:54,textAlign:'center'}}> - </Tag>\r\n          }\r\n        },\r\n      },\r\n      {\r\n        title: \"Operate\",\r\n        key: \"operate\",\r\n        render: (text, record, index) => {\r\n          return this.createOperate(record);\r\n        },\r\n      },\r\n    ];\r\n\r\n    // 复选框\r\n    const { selectedRowKeys } = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      // 为避免远程分页会之前选择的数据\r\n      preserveSelectedRowKeys: true,\r\n      onChange: this.onSelectChange,\r\n      selections: [\r\n        {\r\n          key: \"clearAll\",\r\n          text: \"Clear All\",\r\n          onSelect: (changableRowKeys) => {\r\n            this.setState({ selectedRowKeys: [] });\r\n          },\r\n        },\r\n      ],\r\n    };\r\n\r\n    // ======================= 数据展示内容 =======================\r\n\r\n    const tableView = (\r\n      <div\r\n        style={{\r\n          display: this.state.viewType === \"DETAIL\" ? \"block\" : \"none\",\r\n          background: \"#ecf0f5\",\r\n          borderRadius: 3,\r\n          padding: 8,\r\n        }}\r\n      >\r\n        <div className=\"block\">\r\n          <Table\r\n            rowSelection={rowSelection}\r\n            loading={this.state.tabLoading}\r\n            rowKey={(record) => record.noteId}\r\n            size={\"small\"}\r\n            columns={tabDataColumns}\r\n            dataSource={this.state.tabData}\r\n            pagination={this.state.tabPagination}\r\n            onChange={this.tabChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const calendarView = (\r\n      <div\r\n        style={{\r\n          display: this.state.viewType === \"CALENDAR\" ? \"block\" : \"none\",\r\n        }}\r\n      >\r\n        <NoteCalendar\r\n          ref={this.calendarComponent}\r\n          cb={this.openNoteFormModal}\r\n          queryCondition={this.state.queryCondition}\r\n        ></NoteCalendar>\r\n      </div>\r\n    );\r\n    const listView = (\r\n      <div\r\n        style={{ display: this.state.viewType === \"LIST\" ? \"block\" : \"none\" }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"flex-start\",\r\n            background: \"#ecf0f5\",\r\n            borderRadius: 3,\r\n            padding: 8,\r\n          }}\r\n        >\r\n          {this.state.tabData.length > 0 ? (\r\n            this.state.tabData.map((item) => {\r\n              return (\r\n                <div\r\n                  style={{ flex: \"0 0 20%\", padding: \"0px 8px 8px 0px\" }}\r\n                  key={item.noteId}\r\n                >\r\n                  <div className={this.computColor(item)}>\r\n                    <div className=\"title\">{item.title}</div>\r\n\r\n                    <div style={{ height: 126 }}>\r\n                      <dl className=\"profile\">\r\n                        <dt>classify</dt>\r\n                        <dd>{item.classify}</dd>\r\n                      </dl>\r\n\r\n                      {/* <dl className=\"profile\">\r\n                      <dt>content</dt>\r\n                      <dd>{item.content}</dd>\r\n                    </dl> */}\r\n\r\n                      <dl className=\"profile\">\r\n                        <dt>Level</dt>\r\n                        <dd>\r\n                          <Rate\r\n                            disabled\r\n                            defaultValue={item.todoLevel}\r\n                            style={{ fontSize: 14 }}\r\n                          />\r\n                        </dd>\r\n                      </dl>\r\n\r\n                      {item.classify === \"Todo\" ? (\r\n                        <div>\r\n                          <dl className=\"profile\">\r\n                            <dt>Status</dt>\r\n                            <dd>\r\n                              {item.todoStatus === 1 ? (\r\n                                <CheckOutlined />\r\n                              ) : (\r\n                                <ExclamationOutlined\r\n                                  style={{ fontSize: 14, color: \"red\" }}\r\n                                />\r\n                              )}{\" \"}\r\n                            </dd>\r\n                          </dl>\r\n\r\n                          <dl className=\"profile\">\r\n                            <dt>expireDate</dt>\r\n                            <dd>{DateUtils.formatToDate(item.expireDate)}</dd>\r\n                          </dl>\r\n\r\n                          <dl className=\"profile\">\r\n                            <dt>alarmDays</dt>\r\n                            <dd>{item.alarmDays}</dd>\r\n                          </dl>\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"divider\"></div>\r\n                    <div style={{ display: \"flex\" }}>\r\n                      <div style={{ flex: \"1 1 auto\", paddingTop: 4 }}>\r\n                        <Checkbox\r\n                          checked={this.checkedInit(item.noteId)}\r\n                          value={item.noteId}\r\n                          onChange={this.checkboxChange}\r\n                        />\r\n                      </div>\r\n                      <div style={{ flex: \"0 0 75px\" }}>\r\n                        {this.createOperate(item)}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <div\r\n              style={{\r\n                padding: 8,\r\n                textAlign: \"center\",\r\n                background: \"#fff\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div style={{ textAlign: \"right\" }}>\r\n          <Pagination\r\n            style={{ marginTop: 8 }}\r\n            {...this.state.tabPagination}\r\n            onChange={this.tabPaginationChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const dataView = {\r\n      LIST: listView,\r\n      DETAIL: tableView,\r\n      CALENDAR: calendarView,\r\n    };\r\n\r\n    // ============== 高级搜索面板 =============== //\r\n    const advanceSearch = (\r\n      <div style={{ width: 300 }}>\r\n        <Row gutter={24}>\r\n          <Col span={24}>\r\n            <dl className=\"form_col\">\r\n              <dt>ID</dt>\r\n              <dd>\r\n                <Input\r\n                  size={this.state.inputSize}\r\n                  value={this.state.queryCondition.noteId}\r\n                  onChange={(e) => {\r\n                    this.createMode(e.target.value, \"noteId\");\r\n                  }}\r\n                />\r\n              </dd>\r\n            </dl>\r\n          </Col>\r\n\r\n          {/* <Col span={24}>\r\n            <dl className=\"form_col\">\r\n              <dt>classify</dt>\r\n              <dd>\r\n                <Input\r\n                  size={this.state.inputSize}\r\n                  value={this.state.queryCondition.classify}\r\n                  onChange={(e) => {\r\n                    this.createMode(e.target.value, \"classify\");\r\n                  }}\r\n                />\r\n              </dd>\r\n            </dl>\r\n          </Col> */}\r\n\r\n          <Col span={24}>\r\n            <dl className=\"form_col\">\r\n              <dt>title</dt>\r\n              <dd>\r\n                <Input\r\n                  size={this.state.inputSize}\r\n                  value={this.state.queryCondition.title}\r\n                  onChange={(e) => {\r\n                    this.createMode(e.target.value, \"title\");\r\n                  }}\r\n                />\r\n              </dd>\r\n            </dl>\r\n          </Col>\r\n\r\n          <Col span={24}>\r\n            <dl className=\"form_col\">\r\n              <dt>content</dt>\r\n              <dd>\r\n                <Input\r\n                  size={this.state.inputSize}\r\n                  value={this.state.queryCondition.content}\r\n                  onChange={(e) => {\r\n                    this.createMode(e.target.value, \"content\");\r\n                  }}\r\n                />\r\n              </dd>\r\n            </dl>\r\n          </Col>\r\n\r\n          <Col span={24}>\r\n            <dl className=\"form_col\">\r\n              <dt>expireDate</dt>\r\n              <dd>\r\n                <DatePicker\r\n                  size={this.state.inputSize}\r\n                  onChange={(moment, dataStr) => {\r\n                    this.createMode(dataStr, \"expireDateFrom\");\r\n                  }}\r\n                  value={\r\n                    this.state.queryCondition.expireDateFrom\r\n                      ? moment(\r\n                          this.state.queryCondition.expireDateFrom,\r\n                          \"YYYY-MM-DD\"\r\n                        )\r\n                      : null\r\n                  }\r\n                />\r\n                <DatePicker\r\n                  size={this.state.inputSize}\r\n                  onChange={(moment, dataStr) => {\r\n                    this.createMode(dataStr, \"expireDateTo\");\r\n                  }}\r\n                  value={\r\n                    this.state.queryCondition.expireDateTo\r\n                      ? moment(\r\n                          this.state.queryCondition.expireDateTo,\r\n                          \"YYYY-MM-DD\"\r\n                        )\r\n                      : null\r\n                  }\r\n                />\r\n              </dd>\r\n            </dl>\r\n          </Col>\r\n\r\n          <Col span={24}>\r\n            <dl className=\"form_col\">\r\n              <dt>Start Date</dt>\r\n              <dd>\r\n                <DatePicker\r\n                  size={this.state.inputSize}\r\n                  onChange={(moment, dataStr) => {\r\n                    this.createMode(dataStr, \"startTimeFrom\");\r\n                  }}\r\n                  value={\r\n                    this.state.queryCondition.startTimeFrom\r\n                      ? moment(\r\n                          this.state.queryCondition.startTimeFrom,\r\n                          \"YYYY-MM-DD\"\r\n                        )\r\n                      : null\r\n                  }\r\n                />\r\n                <DatePicker\r\n                  size={this.state.inputSize}\r\n                  onChange={(moment, dataStr) => {\r\n                    this.createMode(dataStr, \"startTimeTo\");\r\n                  }}\r\n                  value={\r\n                    this.state.queryCondition.startTimeTo\r\n                      ? moment(\r\n                          this.state.queryCondition.startTimeTo,\r\n                          \"YYYY-MM-DD\"\r\n                        )\r\n                      : null\r\n                  }\r\n                />\r\n              </dd>\r\n            </dl>\r\n          </Col>\r\n\r\n          <Col span={24}>\r\n            <dl className=\"form_col\">\r\n              <dt>Finish Date</dt>\r\n              <dd>\r\n                <DatePicker\r\n                  size={this.state.inputSize}\r\n                  onChange={(moment, dataStr) => {\r\n                    this.createMode(dataStr, \"finishTimeFrom\");\r\n                  }}\r\n                  value={\r\n                    this.state.queryCondition.finishTimeFrom\r\n                      ? moment(\r\n                          this.state.queryCondition.finishTimeFrom,\r\n                          \"YYYY-MM-DD\"\r\n                        )\r\n                      : null\r\n                  }\r\n                />\r\n                <DatePicker\r\n                  size={this.state.inputSize}\r\n                  onChange={(moment, dataStr) => {\r\n                    this.createMode(dataStr, \"finishTimeTo\");\r\n                  }}\r\n                  value={\r\n                    this.state.queryCondition.finishTimeTo\r\n                      ? moment(\r\n                          this.state.queryCondition.finishTimeTo,\r\n                          \"YYYY-MM-DD\"\r\n                        )\r\n                      : null\r\n                  }\r\n                />\r\n              </dd>\r\n            </dl>\r\n          </Col>\r\n        </Row>\r\n        <Divider style={{ margin: \"8px 0px\" }}></Divider>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <Button\r\n            style={{ marginRight: 8 }}\r\n            onClick={() => {\r\n              this.queryTabData(true);\r\n            }}\r\n            icon={<SearchOutlined />}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={this.resetSearch}>Reset</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const statusSelect = (\r\n      <div>\r\n        <Select\r\n          allowClear\r\n          style={{ width: 90, marginRight: 4 }}\r\n          placeholder=\"Classify\"\r\n          value={this.state.queryCondition.classify}\r\n          onChange={(v) => {\r\n            this.createMode(v, \"classify\", true);\r\n          }}\r\n        >\r\n          <Option value=\"Todo\">Todo</Option>\r\n          <Option value=\"Note\">Note</Option>\r\n        </Select>\r\n            <Divider type=\"vertical\"></Divider>\r\n        <Select\r\n          allowClear\r\n          style={{ width: 90, marginRight: 4 }}\r\n          placeholder=\"Status\"\r\n          value={this.state.queryCondition.todoStatus}\r\n          onChange={(v) => {\r\n            this.createMode(v, \"todoStatus\", true);\r\n          }}\r\n        >\r\n          <Option value={0}>未完成</Option>\r\n          <Option value={1}>已完成</Option>\r\n        </Select>\r\n      </div>\r\n    );\r\n\r\n    // ============== 组件返回内容 =============== //\r\n    return (\r\n      <div>\r\n        {/* {JSON.stringify(this.state.queryCondition)} */}\r\n        {/* <NoteFullCalendar></NoteFullCalendar> */}\r\n        <Row gutter={24}>\r\n          <Col span={12}>\r\n            {this.state.viewType === \"LIST\" ? (\r\n              <TableOutlined style={{ fontSize: 16, color: \"#1890ff\" }} />\r\n            ) : (\r\n              <TableOutlined\r\n                style={{ fontSize: 14, cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  this.toggleViewType(\"LIST\");\r\n                }}\r\n              />\r\n            )}\r\n\r\n            <Divider type=\"vertical\" />\r\n            {this.state.viewType === \"DETAIL\" ? (\r\n              <UnorderedListOutlined\r\n                style={{ fontSize: 16, color: \"#1890ff\" }}\r\n              />\r\n            ) : (\r\n              <UnorderedListOutlined\r\n                style={{ fontSize: 14, cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  this.toggleViewType(\"DETAIL\");\r\n                }}\r\n              />\r\n            )}\r\n\r\n            <Divider type=\"vertical\" />\r\n            {this.state.viewType === \"CALENDAR\" ? (\r\n              <CalendarOutlined style={{ fontSize: 16, color: \"#1890ff\" }} />\r\n            ) : (\r\n              <CalendarOutlined\r\n                style={{ fontSize: 14, cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  this.toggleViewType(\"CALENDAR\");\r\n                }}\r\n              />\r\n            )}\r\n          </Col>\r\n          <Col span={12}>\r\n            {/* ======================= 搜索 ======================= */}\r\n            <div className=\"tabTool\">\r\n              {/* <Switch\r\n                style={{ marginRight: 8 }}\r\n                checked={this.state.queryCondition.todoStatus === 1}\r\n                onChange={(v) => { this.createMode(v ? 1 : 0, \"todoStatus\", true); }}\r\n                checkedChildren=\"已完成\"\r\n                unCheckedChildren=\"未完成\"\r\n              /> */}\r\n\r\n              <Search\r\n                addonBefore={statusSelect}\r\n                placeholder=\"Key Word\"\r\n                style={{ width: 390, marginRight: 8 }}\r\n                onSearch={this.onSearch}\r\n                onChange={this.keyWordsChange}\r\n                suffix={\r\n                  <CloseCircleFilled\r\n                    onClick={this.clearKeyWords}\r\n                    style={{ cursor: \"pointer\", fontSize: 12, color: \"#aaa\" }}\r\n                  />\r\n                }\r\n                value={this.state.queryCondition.keyWords}\r\n                enterButton\r\n              />\r\n\r\n              {/* <Dropdown.Button\r\n                onClick={this.search}\r\n                overlay={\r\n                  <Menu>\r\n                    <Menu.Item\r\n                      key=\"1\"\r\n                      onClick={this.createIndex}\r\n                      icon={<UserOutlined />}\r\n                    >\r\n                      Create Note Index\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                      key=\"2\"\r\n                      onClick={this.deleteIndex}\r\n                      icon={<UserOutlined />}\r\n                    >\r\n                      Delete Note Index\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"3\" icon={<UserOutlined />}>\r\n                      Reindex Note\r\n                    </Menu.Item>\r\n                  </Menu>\r\n                }\r\n              >\r\n                Full Search\r\n              </Dropdown.Button> */}\r\n\r\n              <Popover\r\n                content={advanceSearch}\r\n                trigger=\"click\"\r\n                title=\"Advance Search\"\r\n                visible={this.state.advanceSearchVisible}\r\n                onVisibleChange={this.handleAdvanceSearchVisibleChange}\r\n              >\r\n                <Button\r\n                  type=\"link\"\r\n                  icon={\r\n                    this.state.advanceSearchVisible ? (\r\n                      <UpOutlined />\r\n                    ) : (\r\n                      <DownOutlined />\r\n                    )\r\n                  }\r\n                >\r\n                  Advance\r\n                </Button>\r\n              </Popover>\r\n\r\n              <Tooltip title=\"Create\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  icon={<PlusOutlined />}\r\n                  onClick={() => {\r\n                    this.openNoteFormModal();\r\n                  }}\r\n                ></Button>\r\n              </Tooltip>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* ======================= 复选框操作按钮 ======================= */}\r\n\r\n        {this.state.selectedRowKeys && this.state.selectedRowKeys.length > 0 ? (\r\n          <Alert\r\n            type=\"info\"\r\n            message={\r\n              <div style={{ display: \"flex\" }}>\r\n                <div style={{ flex: \"1 1 auto\" }}>\r\n                  Selected {this.state.selectedRowKeys.length} items{\" \"}\r\n                  <Tooltip title=\"Clear Selected\">\r\n                    <FontAwesomeIcon\r\n                      icon=\"times\"\r\n                      style={{\r\n                        fontSize: 14,\r\n                        paddingTop: 2,\r\n                        marginRight: 8,\r\n                        color: \"#999999\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={this.clearSelectedKeys}\r\n                    />\r\n                  </Tooltip>\r\n                </div>\r\n                <div style={{ flex: \"0 0 50\" }}>\r\n                  <Tooltip title=\"Delete Selected\">\r\n                    <Popconfirm\r\n                      placement=\"topLeft\"\r\n                      title=\"Are you confirm delete this record\"\r\n                      onConfirm={this.deleteLogicByNoteIds}\r\n                      okText=\"Yes\"\r\n                      cancelText=\"No\"\r\n                    >\r\n                      <Button size=\"small\" icon={<DeleteOutlined />} />\r\n                    </Popconfirm>\r\n                  </Tooltip>\r\n                </div>\r\n              </div>\r\n            }\r\n          ></Alert>\r\n        ) : null}\r\n\r\n        {listView}\r\n        {tableView}\r\n        {calendarView}\r\n\r\n        {/* ======================= modal窗口 ======================= */}\r\n        <Modal\r\n          title=\"Note Information\"\r\n          visible={this.state.formModalVisible}\r\n          footer={null}\r\n          width={\"95%\"}\r\n          style={{ top: 24 }}\r\n          destroyOnClose={true}\r\n          onCancel={this.closeNoteFormModal}\r\n          maskClosable={false}\r\n        >\r\n          <NoteForm\r\n            noteId={this.state.noteId}\r\n            canEdit={true}\r\n            closeFn={this.closeNoteFormModal}\r\n            cb={this.queryTabData}\r\n          ></NoteForm>\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"Edit Note\"\r\n          visible={this.state.viewModalVisible}\r\n          width={\"80%\"}\r\n          destroyOnClose={true}\r\n          onCancel={this.closeNoteViewModal}\r\n          maskClosable={false}\r\n        >\r\n          <NoteView\r\n            noteId={this.state.noteId}\r\n            canEdit={true}\r\n            closeFn={this.closeNoteViewModal}\r\n          ></NoteView>\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"Finish Time\"\r\n          visible={this.state.finishTimeModalVisible}\r\n          destroyOnClose={true}\r\n          onCancel={this.closeFinishTimeModal}\r\n          onOk={this.finishTodo}\r\n          maskClosable={false}\r\n        >\r\n          <dl className=\"form_col\">\r\n            <dt>\r\n              Finish Time{\" \"}\r\n              <ClockCircleOutlined\r\n                onClick={this.setFinishTimeCurrent}\r\n                style={{ color: \"#2db7f5\", cursor: \"pointer\" }}\r\n              />\r\n            </dt>\r\n            <dd>\r\n              <DatePicker\r\n                style={{ width: \"50%\" }}\r\n                size={this.state.inputSize}\r\n                onChange={(m, dataStr) => {\r\n                  this.setState({\r\n                    finishDateTemp: m,\r\n                  });\r\n                }}\r\n                value={this.state.finishDateTemp}\r\n              />\r\n              <TimePicker\r\n                style={{ width: \"50%\" }}\r\n                format={\"HH:mm\"}\r\n                size={this.state.inputSize}\r\n                onChange={(m, dataStr) => {\r\n                  this.setState({\r\n                    finishTimeTemp: m,\r\n                  });\r\n                }}\r\n                value={this.state.finishTimeTemp}\r\n              />\r\n            </dd>\r\n          </dl>\r\n        </Modal>\r\n\r\n        {/* {calendarView} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NoteList;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu, Breadcrumb } from \"antd\";\r\nimport {\r\n  DesktopOutlined,\r\n  PieChartOutlined,\r\n  FileOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n  SlidersOutlined,\r\n  HighlightOutlined,\r\n  SnippetsOutlined,\r\n  OrderedListOutlined,\r\n  UnorderedListOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport NoteList from \"@/components/NoteList\";\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nclass IndexLayout extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    // console.log(collapsed);\r\n    this.setState({ collapsed });\r\n  };\r\n\r\n  render() {\r\n    const { collapsed } = this.state;\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n      \r\n        <Layout className=\"site-layout\">\r\n          <Content style={{ margin: \"8px 8px 0px\" }}>\r\n            <div\r\n              className=\"site-layout-background\"\r\n              style={{ padding: \"8px 8px\", minHeight: 360, background: \"#fff\" }}\r\n            >\r\n              <Route path=\"/\" exact component={NoteList}></Route>\r\n              {/* <Route path=\"/Knowledge\" exact component={Knowledge}></Route> */}\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\" }}>\r\n            Code Generator Example\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IndexLayout;\r\n","import logo from './logo.svg';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport IndexLayout from '@/layout/IndexLayout'\nfunction App() {\n  return (\n    <BrowserRouter>\n    <IndexLayout></IndexLayout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@/assets/css/antd.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}